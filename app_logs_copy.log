2024-07-17 20:08:32,984 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-17 20:08:32,985 - wsgi - INFO - Generating response for 'how many commits are there?' using 'gpt-4o' model
2024-07-17 20:08:32,985 - scripts.generate_response - INFO - Generating response for 'how many commits are there?' using 'gpt-4o' model
2024-07-17 20:08:34,096 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-17 20:08:34,459 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-17 20:08:34,459 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-17 20:08:34,459 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-17 20:08:34,462 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-17 20:08:35,427 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-17 20:08:35,445 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)
RETURN count(c) AS commit_count

2024-07-17 20:08:35,445 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)
RETURN count(c) AS commit_count

2024-07-17 20:08:36,293 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-17 20:08:36,296 - scripts.generate_response - INFO - Response generated successfully for 'how many commits are there?' using 'gpt-4o' model. 
Response: {'query': 'how many commits are there?', 'response': 'There are 3,592 commits.', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN count(c) AS commit_count\n\\Results: [{'commit_count': 3592}]"}
2024-07-17 20:08:36,297 - wsgi - INFO - {'result': 'There are 3,592 commits.', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN count(c) AS commit_count\n\\Results: [{'commit_count': 3592}]"}
2024-07-17 20:09:15,728 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-17 20:09:15,728 - wsgi - INFO - Generating response for 'what are the number of contributors' using 'gpt-4o' model
2024-07-17 20:09:15,728 - scripts.generate_response - INFO - Generating response for 'what are the number of contributors' using 'gpt-4o' model
2024-07-17 20:09:16,822 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-17 20:09:16,997 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-17 20:09:16,997 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-17 20:09:16,997 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-17 20:09:16,999 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-17 20:09:18,441 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-17 20:09:18,445 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (u:User)-[:author]->(:Commit)
RETURN count(DISTINCT u.id) AS number_of_contributors

2024-07-17 20:09:18,445 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (u:User)-[:author]->(:Commit)
RETURN count(DISTINCT u.id) AS number_of_contributors

2024-07-17 20:09:19,248 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-17 20:09:19,252 - scripts.generate_response - INFO - Response generated successfully for 'what are the number of contributors' using 'gpt-4o' model. 
Response: {'query': 'what are the number of contributors', 'response': 'The number of contributors is 359.', 'context': "Query: cypher\nMATCH (u:User)-[:author]->(:Commit)\nRETURN count(DISTINCT u.id) AS number_of_contributors\n\\Results: [{'number_of_contributors': 359}]"}
2024-07-17 20:09:19,253 - wsgi - INFO - {'result': 'The number of contributors is 359.', 'context': "Query: cypher\nMATCH (u:User)-[:author]->(:Commit)\nRETURN count(DISTINCT u.id) AS number_of_contributors\n\\Results: [{'number_of_contributors': 359}]"}
2024-07-17 20:09:56,714 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-17 20:09:56,714 - wsgi - INFO - Generating response for 'how many files are in the repo' using 'gpt-4o' model
2024-07-17 20:09:56,714 - scripts.generate_response - INFO - Generating response for 'how many files are in the repo' using 'gpt-4o' model
2024-07-17 20:09:57,551 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-17 20:09:57,914 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-17 20:09:57,915 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-17 20:09:57,915 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-17 20:09:57,918 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-17 20:09:58,804 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-17 20:09:58,818 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (f:File)
RETURN count(f) AS file_count

2024-07-17 20:09:58,819 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (f:File)
RETURN count(f) AS file_count

2024-07-17 20:09:59,710 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-17 20:09:59,714 - scripts.generate_response - INFO - Response generated successfully for 'how many files are in the repo' using 'gpt-4o' model. 
Response: {'query': 'how many files are in the repo', 'response': 'The repository contains 923 files.', 'context': "Query: cypher\nMATCH (f:File)\nRETURN count(f) AS file_count\n\\Results: [{'file_count': 923}]"}
2024-07-17 20:09:59,715 - wsgi - INFO - {'result': 'The repository contains 923 files.', 'context': "Query: cypher\nMATCH (f:File)\nRETURN count(f) AS file_count\n\\Results: [{'file_count': 923}]"}
2024-07-17 20:10:30,918 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-17 20:10:30,918 - wsgi - INFO - Generating response for 'what is the commit message of the last commit' using 'gpt-4o' model
2024-07-17 20:10:30,918 - scripts.generate_response - INFO - Generating response for 'what is the commit message of the last commit' using 'gpt-4o' model
2024-07-17 20:10:31,774 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-17 20:10:32,288 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-17 20:10:32,288 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-17 20:10:32,288 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-17 20:10:32,293 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-17 20:10:33,685 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-17 20:10:33,702 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)
RETURN c.message
ORDER BY c.committedDate DESC
LIMIT 1

2024-07-17 20:10:33,703 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)
RETURN c.message
ORDER BY c.committedDate DESC
LIMIT 1

2024-07-17 20:10:36,261 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-17 20:10:36,265 - scripts.generate_response - INFO - Response generated successfully for 'what is the commit message of the last commit' using 'gpt-4o' model. 
Response: {'query': 'what is the commit message of the last commit', 'response': 'The commit message of the last commit is:\n\n"chore: fix link broken (#13192)\n\n* chore: fix link broken\n\nSigned-off-by: snoppy <michaleli@foxmail.com>\n\n* Update packages/template-compiler/README.md [skip ci]\n\n---------\n\nSigned-off-by: snoppy <michaleli@foxmail.com>\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"', 'context': 'Query: cypher\nMATCH (c:Commit)\nRETURN c.message\nORDER BY c.committedDate DESC\nLIMIT 1\n\\Results: [{\'c.message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}]'}
2024-07-17 20:10:36,266 - wsgi - INFO - {'result': 'The commit message of the last commit is:\n\n"chore: fix link broken (#13192)\n\n* chore: fix link broken\n\nSigned-off-by: snoppy <michaleli@foxmail.com>\n\n* Update packages/template-compiler/README.md [skip ci]\n\n---------\n\nSigned-off-by: snoppy <michaleli@foxmail.com>\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"', 'context': 'Query: cypher\nMATCH (c:Commit)\nRETURN c.message\nORDER BY c.committedDate DESC\nLIMIT 1\n\\Results: [{\'c.message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}]'}
2024-07-17 21:06:18,606 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-17 21:06:18,607 - wsgi - INFO - Generating response for 'Which project is it?' using 'gpt-3.5-turbo' model
2024-07-17 21:06:18,607 - scripts.generate_response - INFO - Generating response for 'Which project is it?' using 'gpt-3.5-turbo' model
2024-07-17 21:06:19,821 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-17 21:06:20,042 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-17 21:06:20,042 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-17 21:06:20,042 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-17 21:06:20,045 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-17 21:06:20,179 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2024-07-17 21:06:21,417 - langsmith.run_helpers - INFO - See trace: https://smith.langchain.com/o/58548798-405d-54de-9e44-65bcdcc445c3/projects/p/87d8f386-2cf0-40fd-8040-d8f3f3f29b09/r/fbc59732-65c9-4690-8d5b-d5714964ff5a?poll=true
2024-07-17 21:06:21,418 - scripts.generate_response - ERROR - Failed to generate response for 'Which project is it?' using 'gpt-3.5-turbo' model
Traceback (most recent call last):
  File "/root/repochat.tool/scripts/generate_response.py", line 11, in generate_response
    res = kg_chat.query(user_input, learning_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langsmith/run_helpers.py", line 568, in wrapper
    raise e
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langsmith/run_helpers.py", line 565, in wrapper
    function_result = run_container["context"].run(func, *args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/scripts/kg_chat.py", line 80, in query
    response = chain.invoke(user_input)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 166, in invoke
    raise e
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 156, in invoke
    self._call(inputs, run_manager=run_manager)
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 100, in _call
    generated_cypher = self.cypher_generation_chain.run(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/_api/deprecation.py", line 168, in warning_emitting_wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 600, in run
    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/_api/deprecation.py", line 168, in warning_emitting_wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 383, in __call__
    return self.invoke(
           ^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 166, in invoke
    raise e
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 156, in invoke
    self._call(inputs, run_manager=run_manager)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/llm.py", line 127, in _call
    response = self.generate([inputs], run_manager=run_manager)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/llm.py", line 139, in generate
    return self.llm.generate_prompt(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 681, in generate_prompt
    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 538, in generate
    raise e
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 528, in generate
    self._generate_with_cache(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 753, in _generate_with_cache
    result = self._generate(
             ^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_openai/chat_models/base.py", line 547, in _generate
    response = self.client.create(**payload)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/_utils/_utils.py", line 277, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/resources/chat/completions.py", line 643, in create
    return self._post(
           ^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/_base_client.py", line 1261, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/_base_client.py", line 942, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/_base_client.py", line 1041, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************SKm6. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2024-07-17 21:06:39,129 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-17 21:06:39,130 - wsgi - INFO - Generating response for 'who is the most experienced person here?' using 'gpt-3.5-turbo' model
2024-07-17 21:06:39,130 - scripts.generate_response - INFO - Generating response for 'who is the most experienced person here?' using 'gpt-3.5-turbo' model
2024-07-17 21:06:39,989 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-17 21:06:40,207 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-17 21:06:40,207 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-17 21:06:40,207 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-17 21:06:40,209 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-17 21:06:40,296 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 401 Unauthorized"
2024-07-17 21:06:40,966 - langsmith.run_helpers - INFO - See trace: https://smith.langchain.com/o/58548798-405d-54de-9e44-65bcdcc445c3/projects/p/87d8f386-2cf0-40fd-8040-d8f3f3f29b09/r/a95a785d-e93c-4743-b043-0b48dee44eeb?poll=true
2024-07-17 21:06:40,966 - scripts.generate_response - ERROR - Failed to generate response for 'who is the most experienced person here?' using 'gpt-3.5-turbo' model
Traceback (most recent call last):
  File "/root/repochat.tool/scripts/generate_response.py", line 11, in generate_response
    res = kg_chat.query(user_input, learning_type)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langsmith/run_helpers.py", line 568, in wrapper
    raise e
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langsmith/run_helpers.py", line 565, in wrapper
    function_result = run_container["context"].run(func, *args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/scripts/kg_chat.py", line 80, in query
    response = chain.invoke(user_input)
               ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 166, in invoke
    raise e
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 156, in invoke
    self._call(inputs, run_manager=run_manager)
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 100, in _call
    generated_cypher = self.cypher_generation_chain.run(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/_api/deprecation.py", line 168, in warning_emitting_wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 600, in run
    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/_api/deprecation.py", line 168, in warning_emitting_wrapper
    return wrapped(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 383, in __call__
    return self.invoke(
           ^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 166, in invoke
    raise e
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/base.py", line 156, in invoke
    self._call(inputs, run_manager=run_manager)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/llm.py", line 127, in _call
    response = self.generate([inputs], run_manager=run_manager)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain/chains/llm.py", line 139, in generate
    return self.llm.generate_prompt(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 681, in generate_prompt
    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 538, in generate
    raise e
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 528, in generate
    self._generate_with_cache(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_core/language_models/chat_models.py", line 753, in _generate_with_cache
    result = self._generate(
             ^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_openai/chat_models/base.py", line 547, in _generate
    response = self.client.create(**payload)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/_utils/_utils.py", line 277, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/resources/chat/completions.py", line 643, in create
    return self._post(
           ^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/_base_client.py", line 1261, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/_base_client.py", line 942, in request
    return self._request(
           ^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/openai/_base_client.py", line 1041, in _request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-proj-********************************************SKm6. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}
2024-07-18 19:44:01,410 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:44:01,411 - wsgi - INFO - Generating response for 'how many commits are there' using 'gpt-4o' model
2024-07-18 19:44:01,411 - scripts.generate_response - INFO - Generating response for 'how many commits are there' using 'gpt-4o' model
2024-07-18 19:44:02,605 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:44:03,006 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:44:03,006 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-18 19:44:03,006 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:44:03,011 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:44:05,310 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:44:05,329 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)
RETURN count(c) AS commit_count

2024-07-18 19:44:05,329 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)
RETURN count(c) AS commit_count

2024-07-18 19:44:06,255 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:44:06,258 - scripts.generate_response - INFO - Response generated successfully for 'how many commits are there' using 'gpt-4o' model. 
Response: {'query': 'how many commits are there', 'response': 'There are 3,592 commits.', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN count(c) AS commit_count\n\\Results: [{'commit_count': 3592}]"}
2024-07-18 19:44:06,259 - wsgi - INFO - {'result': 'There are 3,592 commits.', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN count(c) AS commit_count\n\\Results: [{'commit_count': 3592}]"}
2024-07-18 19:52:39,882 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:52:39,882 - wsgi - INFO - Generating response for 'hi' using 'gpt-3.5-turbo' model
2024-07-18 19:52:39,882 - scripts.generate_response - INFO - Generating response for 'hi' using 'gpt-3.5-turbo' model
2024-07-18 19:52:40,390 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:52:40,390 - wsgi - INFO - Generating response for 'how many commits are there?' using 'gpt-3.5-turbo' model
2024-07-18 19:52:40,390 - scripts.generate_response - INFO - Generating response for 'how many commits are there?' using 'gpt-3.5-turbo' model
2024-07-18 19:52:40,730 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:52:41,087 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:52:41,087 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:52:41,087 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:52:41,090 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:52:41,233 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:52:41,589 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:52:41,589 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:52:41,589 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:52:41,592 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:52:42,044 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:52:42,061 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database.
2024-07-18 19:52:42,061 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database.
2024-07-18 19:52:42,201 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database."
 ^}
2024-07-18 19:52:42,201 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-18 19:52:42,469 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:52:42,487 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
RETURN COUNT(c) as totalCommits;
2024-07-18 19:52:42,488 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
RETURN COUNT(c) as totalCommits;
2024-07-18 19:52:42,911 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:52:43,000 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database."
 ^} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database."
 ^}
2024-07-18 19:52:43,092 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:52:43,095 - scripts.generate_response - INFO - Response generated successfully for 'how many commits are there?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many commits are there?', 'response': 'There are 3592 commits in the software repository.', 'context': "Query: MATCH (c:Commit)\nRETURN COUNT(c) as totalCommits;\\Results: [{'totalCommits': 3592}]"}
2024-07-18 19:52:43,098 - wsgi - INFO - {'result': 'There are 3592 commits in the software repository.', 'context': "Query: MATCH (c:Commit)\nRETURN COUNT(c) as totalCommits;\\Results: [{'totalCommits': 3592}]"}
2024-07-18 19:52:43,702 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:52:43,705 - scripts.generate_response - INFO - Response generated successfully for 'hi' using 'gpt-3.5-turbo' model. 
Response: {'query': 'hi', 'response': "I'm sorry, I don't have an answer to that. Can I help with anything else?", 'context': "Query: I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database.\\Results: []"}
2024-07-18 19:52:43,705 - wsgi - INFO - {'result': "I'm sorry, I don't have an answer to that. Can I help with anything else?", 'context': "Query: I'm sorry, I can only respond to requests to generate Cypher statements for querying a graph database.\\Results: []"}
2024-07-18 19:52:50,236 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:52:50,236 - wsgi - INFO - Generating response for 'who has the most commits' using 'gpt-3.5-turbo' model
2024-07-18 19:52:50,237 - scripts.generate_response - INFO - Generating response for 'who has the most commits' using 'gpt-3.5-turbo' model
2024-07-18 19:52:51,022 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:52:51,206 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:52:51,206 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:52:51,206 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:52:51,208 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:52:52,171 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:52:52,173 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name, commitCount
ORDER BY commitCount DESC
LIMIT 1;
2024-07-18 19:52:52,173 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name, commitCount
ORDER BY commitCount DESC
LIMIT 1;
2024-07-18 19:52:53,071 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:52:53,075 - scripts.generate_response - INFO - Response generated successfully for 'who has the most commits' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who has the most commits', 'response': 'Evan You has the most commits with a total of 2583 commits.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name, commitCount\nORDER BY commitCount DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'commitCount': 2583}]"}
2024-07-18 19:52:53,076 - wsgi - INFO - {'result': 'Evan You has the most commits with a total of 2583 commits.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name, commitCount\nORDER BY commitCount DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'commitCount': 2583}]"}
2024-07-18 19:53:03,371 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:53:03,371 - wsgi - INFO - Generating response for 'who is the most experienced developer' using 'gpt-4o' model
2024-07-18 19:53:03,372 - scripts.generate_response - INFO - Generating response for 'who is the most experienced developer' using 'gpt-4o' model
2024-07-18 19:53:04,197 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:53:04,354 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:53:04,355 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: few-shot
2024-07-18 19:53:04,355 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:53:04,356 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:53:05,504 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:05,506 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (u:User)-[:author]->(c:Commit)
RETURN u.name AS Developer, count(c) AS TotalCommits
ORDER BY TotalCommits DESC
LIMIT 1

2024-07-18 19:53:05,506 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (u:User)-[:author]->(c:Commit)
RETURN u.name AS Developer, count(c) AS TotalCommits
ORDER BY TotalCommits DESC
LIMIT 1

2024-07-18 19:53:06,199 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:06,203 - scripts.generate_response - INFO - Response generated successfully for 'who is the most experienced developer' using 'gpt-4o' model. 
Response: {'query': 'who is the most experienced developer', 'response': 'The most experienced developer is Evan You, with a total of 2583 commits.', 'context': "Query: cypher\nMATCH (u:User)-[:author]->(c:Commit)\nRETURN u.name AS Developer, count(c) AS TotalCommits\nORDER BY TotalCommits DESC\nLIMIT 1\n\\Results: [{'Developer': 'Evan You', 'TotalCommits': 2583}]"}
2024-07-18 19:53:06,204 - wsgi - INFO - {'result': 'The most experienced developer is Evan You, with a total of 2583 commits.', 'context': "Query: cypher\nMATCH (u:User)-[:author]->(c:Commit)\nRETURN u.name AS Developer, count(c) AS TotalCommits\nORDER BY TotalCommits DESC\nLIMIT 1\n\\Results: [{'Developer': 'Evan You', 'TotalCommits': 2583}]"}
2024-07-18 19:53:11,698 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:53:11,698 - wsgi - INFO - Generating response for 'who is the most experienced guy?' using 'gpt-3.5-turbo' model
2024-07-18 19:53:11,698 - scripts.generate_response - INFO - Generating response for 'who is the most experienced guy?' using 'gpt-3.5-turbo' model
2024-07-18 19:53:12,588 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:53:12,925 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:53:12,926 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:53:12,926 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:53:12,929 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:53:14,061 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:14,080 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)
RETURN u.name, COUNT(DISTINCT n) AS experience
ORDER BY experience DESC
LIMIT 1
2024-07-18 19:53:14,081 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)
RETURN u.name, COUNT(DISTINCT n) AS experience
ORDER BY experience DESC
LIMIT 1
2024-07-18 19:53:15,113 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:15,116 - scripts.generate_response - INFO - Response generated successfully for 'who is the most experienced guy?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who is the most experienced guy?', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)\nRETURN u.name, COUNT(DISTINCT n) AS experience\nORDER BY experience DESC\nLIMIT 1\\Results: []'}
2024-07-18 19:53:15,117 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)\nRETURN u.name, COUNT(DISTINCT n) AS experience\nORDER BY experience DESC\nLIMIT 1\\Results: []'}
2024-07-18 19:53:27,667 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:53:27,668 - wsgi - INFO - Generating response for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model
2024-07-18 19:53:27,668 - scripts.generate_response - INFO - Generating response for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model
2024-07-18 19:53:28,528 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:53:28,690 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:53:28,690 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:53:28,690 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:53:28,692 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:53:29,648 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:29,650 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name
ORDER BY commitCount DESC
LIMIT 1
2024-07-18 19:53:29,651 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name
ORDER BY commitCount DESC
LIMIT 1
2024-07-18 19:53:30,422 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:30,425 - scripts.generate_response - INFO - Response generated successfully for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who is the most experienced guy?\n\n', 'response': 'The most experienced guy is Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name\nORDER BY commitCount DESC\nLIMIT 1\\Results: [{'u.name': 'Evan You'}]"}
2024-07-18 19:53:30,426 - wsgi - INFO - {'result': 'The most experienced guy is Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name\nORDER BY commitCount DESC\nLIMIT 1\\Results: [{'u.name': 'Evan You'}]"}
2024-07-18 19:53:37,216 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:53:37,216 - wsgi - INFO - Generating response for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model
2024-07-18 19:53:37,216 - scripts.generate_response - INFO - Generating response for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model
2024-07-18 19:53:38,010 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:53:38,176 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:53:38,176 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:53:38,176 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:53:38,178 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:53:39,038 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:39,041 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name
ORDER BY commitCount DESC
LIMIT 1
2024-07-18 19:53:39,041 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name
ORDER BY commitCount DESC
LIMIT 1
2024-07-18 19:53:39,652 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:39,656 - scripts.generate_response - INFO - Response generated successfully for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who is the most experienced guy?\n\n', 'response': 'The most experienced guy is Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name\nORDER BY commitCount DESC\nLIMIT 1\\Results: [{'u.name': 'Evan You'}]"}
2024-07-18 19:53:39,656 - wsgi - INFO - {'result': 'The most experienced guy is Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name\nORDER BY commitCount DESC\nLIMIT 1\\Results: [{'u.name': 'Evan You'}]"}
2024-07-18 19:53:43,458 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:53:43,458 - wsgi - INFO - Generating response for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model
2024-07-18 19:53:43,459 - scripts.generate_response - INFO - Generating response for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model
2024-07-18 19:53:44,332 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:53:44,511 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:53:44,511 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:53:44,511 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:53:44,513 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:53:45,484 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:45,486 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name
ORDER BY commitCount DESC
LIMIT 1
2024-07-18 19:53:45,486 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name
ORDER BY commitCount DESC
LIMIT 1
2024-07-18 19:53:46,187 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:53:46,190 - scripts.generate_response - INFO - Response generated successfully for 'who is the most experienced guy?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who is the most experienced guy?\n\n', 'response': 'The most experienced guy is Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name\nORDER BY commitCount DESC\nLIMIT 1\\Results: [{'u.name': 'Evan You'}]"}
2024-07-18 19:53:46,191 - wsgi - INFO - {'result': 'The most experienced guy is Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name\nORDER BY commitCount DESC\nLIMIT 1\\Results: [{'u.name': 'Evan You'}]"}
2024-07-18 19:53:58,631 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:53:58,631 - wsgi - INFO - Generating response for 'who should we call the most experienced?' using 'gpt-3.5-turbo' model
2024-07-18 19:53:58,631 - scripts.generate_response - INFO - Generating response for 'who should we call the most experienced?' using 'gpt-3.5-turbo' model
2024-07-18 19:53:59,515 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:53:59,713 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:53:59,713 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:53:59,714 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:53:59,715 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:54:00,708 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:54:00,711 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)
RETURN u.name, COUNT(DISTINCT n) AS experience
ORDER BY experience DESC
LIMIT 1;
2024-07-18 19:54:00,711 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)
RETURN u.name, COUNT(DISTINCT n) AS experience
ORDER BY experience DESC
LIMIT 1;
2024-07-18 19:54:01,313 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:54:01,317 - scripts.generate_response - INFO - Response generated successfully for 'who should we call the most experienced?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who should we call the most experienced?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)\nRETURN u.name, COUNT(DISTINCT n) AS experience\nORDER BY experience DESC\nLIMIT 1;\\Results: []'}
2024-07-18 19:54:01,318 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)\nRETURN u.name, COUNT(DISTINCT n) AS experience\nORDER BY experience DESC\nLIMIT 1;\\Results: []'}
2024-07-18 19:54:07,379 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:54:07,380 - wsgi - INFO - Generating response for 'who should we call the most experienced?

' using 'gpt-3.5-turbo' model
2024-07-18 19:54:07,380 - scripts.generate_response - INFO - Generating response for 'who should we call the most experienced?

' using 'gpt-3.5-turbo' model
2024-07-18 19:54:08,204 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:54:08,366 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:54:08,366 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:54:08,366 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:54:08,369 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:54:09,644 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:54:09,647 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)
WHERE i.created_at < '2024-07-18T19:54:08Z'
RETURN u.name, COUNT(i) AS experience
ORDER BY experience DESC
LIMIT 1;
2024-07-18 19:54:09,647 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)
WHERE i.created_at < '2024-07-18T19:54:08Z'
RETURN u.name, COUNT(i) AS experience
ORDER BY experience DESC
LIMIT 1;
2024-07-18 19:54:10,661 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:54:10,665 - scripts.generate_response - INFO - Response generated successfully for 'who should we call the most experienced?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who should we call the most experienced?\n\n', 'response': 'The most experienced person we should call is Evan You, with 456 experiences.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)\nWHERE i.created_at < '2024-07-18T19:54:08Z'\nRETURN u.name, COUNT(i) AS experience\nORDER BY experience DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'experience': 456}]"}
2024-07-18 19:54:10,665 - wsgi - INFO - {'result': 'The most experienced person we should call is Evan You, with 456 experiences.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)\nWHERE i.created_at < '2024-07-18T19:54:08Z'\nRETURN u.name, COUNT(i) AS experience\nORDER BY experience DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'experience': 456}]"}
2024-07-18 19:54:18,480 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:54:18,480 - wsgi - INFO - Generating response for 'who should we call the most experienced?

' using 'gpt-3.5-turbo' model
2024-07-18 19:54:18,480 - scripts.generate_response - INFO - Generating response for 'who should we call the most experienced?

' using 'gpt-3.5-turbo' model
2024-07-18 19:54:19,283 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:54:19,496 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:54:19,496 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:54:19,496 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:54:19,498 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:54:20,646 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:54:20,648 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)
RETURN u.name AS most_experienced
ORDER BY COUNT(n) DESC
LIMIT 1;
2024-07-18 19:54:20,648 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)
RETURN u.name AS most_experienced
ORDER BY COUNT(n) DESC
LIMIT 1;
2024-07-18 19:54:20,724 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Cannot use aggregation in ORDER BY if there are no aggregate expressions in the preceding RETURN (line 2, column 1 (offset: 82))
"RETURN u.name AS most_experienced"
 ^}
2024-07-18 19:54:20,725 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-18 19:54:21,738 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:54:22,651 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:54:22,655 - scripts.generate_response - INFO - Response generated successfully for 'who should we call the most experienced?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who should we call the most experienced?\n\n', 'response': 'You should call Evan You the most experienced as he has introduced 456 issues.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)\nRETURN u.name AS most_experienced\nORDER BY COUNT(n) DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'experience': 456}]"}
2024-07-18 19:54:22,655 - wsgi - INFO - {'result': 'You should call Evan You the most experienced as he has introduced 456 issues.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(n:Node)\nRETURN u.name AS most_experienced\nORDER BY COUNT(n) DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'experience': 456}]"}
2024-07-18 19:56:04,920 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:56:04,920 - wsgi - INFO - Generating response for 'who have Evan You worked most with?' using 'gpt-3.5-turbo' model
2024-07-18 19:56:04,921 - scripts.generate_response - INFO - Generating response for 'who have Evan You worked most with?' using 'gpt-3.5-turbo' model
2024-07-18 19:56:05,761 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:56:05,940 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:56:05,940 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:56:05,940 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:56:05,942 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:56:06,910 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:56:06,913 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:assigned]-(otherUser:User)
RETURN otherUser.name, COUNT(*) AS collaborations
ORDER BY collaborations DESC
LIMIT 1;
2024-07-18 19:56:06,913 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:assigned]-(otherUser:User)
RETURN otherUser.name, COUNT(*) AS collaborations
ORDER BY collaborations DESC
LIMIT 1;
2024-07-18 19:56:07,977 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:56:07,981 - scripts.generate_response - INFO - Response generated successfully for 'who have Evan You worked most with?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who have Evan You worked most with?', 'response': 'Evan You has worked most with Evan You, with a total of 44 collaborations.', 'context': "Query: MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:assigned]-(otherUser:User)\nRETURN otherUser.name, COUNT(*) AS collaborations\nORDER BY collaborations DESC\nLIMIT 1;\\Results: [{'otherUser.name': 'Evan You', 'collaborations': 44}]"}
2024-07-18 19:56:07,982 - wsgi - INFO - {'result': 'Evan You has worked most with Evan You, with a total of 44 collaborations.', 'context': "Query: MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:assigned]-(otherUser:User)\nRETURN otherUser.name, COUNT(*) AS collaborations\nORDER BY collaborations DESC\nLIMIT 1;\\Results: [{'otherUser.name': 'Evan You', 'collaborations': 44}]"}
2024-07-18 19:56:29,836 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:56:29,836 - wsgi - INFO - Generating response for 'who has experience working with Evan You?' using 'gpt-3.5-turbo' model
2024-07-18 19:56:29,836 - scripts.generate_response - INFO - Generating response for 'who has experience working with Evan You?' using 'gpt-3.5-turbo' model
2024-07-18 19:56:30,652 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:56:30,838 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:56:30,838 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:56:30,838 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:56:30,840 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:56:31,961 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:56:31,964 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "Evan You"})
RETURN u;
2024-07-18 19:56:31,965 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "Evan You"})
RETURN u;
2024-07-18 19:56:32,558 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:56:32,561 - scripts.generate_response - INFO - Response generated successfully for 'who has experience working with Evan You?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who has experience working with Evan You?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "Evan You"})\nRETURN u;\\Results: []'}
2024-07-18 19:56:32,562 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "Evan You"})\nRETURN u;\\Results: []'}
2024-07-18 19:56:36,240 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:56:36,240 - wsgi - INFO - Generating response for 'who has experience working with Evan You?

' using 'gpt-3.5-turbo' model
2024-07-18 19:56:36,240 - scripts.generate_response - INFO - Generating response for 'who has experience working with Evan You?

' using 'gpt-3.5-turbo' model
2024-07-18 19:56:36,903 - neo4j.io - ERROR - Failed to write data to connection ResolvedIPv4Address(('34.69.128.95', 7687)) (ResolvedIPv4Address(('34.69.128.95', 7687)))
2024-07-18 19:56:36,904 - neo4j.io - ERROR - Failed to write data to connection IPv4Address(('0e99116c.databases.neo4j.io', 7687)) (ResolvedIPv4Address(('34.69.128.95', 7687)))
2024-07-18 19:56:37,062 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:56:37,239 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:56:37,239 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:56:37,239 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:56:37,241 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:56:38,197 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:56:38,201 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "Evan You"})
RETURN u.name
2024-07-18 19:56:38,201 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "Evan You"})
RETURN u.name
2024-07-18 19:56:38,928 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:56:38,931 - scripts.generate_response - INFO - Response generated successfully for 'who has experience working with Evan You?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who has experience working with Evan You?\n\n', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "Evan You"})\nRETURN u.name\\Results: []'}
2024-07-18 19:56:38,932 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "Evan You"})\nRETURN u.name\\Results: []'}
2024-07-18 19:56:48,615 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:56:48,615 - wsgi - INFO - Generating response for 'Who last worked with Evan You?' using 'gpt-3.5-turbo' model
2024-07-18 19:56:48,615 - scripts.generate_response - INFO - Generating response for 'Who last worked with Evan You?' using 'gpt-3.5-turbo' model
2024-07-18 19:56:49,437 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:56:49,635 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:56:49,636 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:56:49,636 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:56:49,638 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:56:50,674 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:56:50,676 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:assigned]-(otherUser:User)
RETURN otherUser.name
ORDER BY otherUser.name DESC
LIMIT 1
2024-07-18 19:56:50,677 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:assigned]-(otherUser:User)
RETURN otherUser.name
ORDER BY otherUser.name DESC
LIMIT 1
2024-07-18 19:56:51,456 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:56:51,459 - scripts.generate_response - INFO - Response generated successfully for 'Who last worked with Evan You?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'Who last worked with Evan You?', 'response': 'The last person who worked with Evan You is ziga.', 'context': "Query: MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:assigned]-(otherUser:User)\nRETURN otherUser.name\nORDER BY otherUser.name DESC\nLIMIT 1\\Results: [{'otherUser.name': 'ziga'}]"}
2024-07-18 19:56:51,460 - wsgi - INFO - {'result': 'The last person who worked with Evan You is ziga.', 'context': "Query: MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:assigned]-(otherUser:User)\nRETURN otherUser.name\nORDER BY otherUser.name DESC\nLIMIT 1\\Results: [{'otherUser.name': 'ziga'}]"}
2024-07-18 19:56:58,039 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:56:58,039 - wsgi - INFO - Generating response for 'Who last worked with Evan You?

' using 'gpt-3.5-turbo' model
2024-07-18 19:56:58,039 - scripts.generate_response - INFO - Generating response for 'Who last worked with Evan You?

' using 'gpt-3.5-turbo' model
2024-07-18 19:56:58,867 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:56:59,029 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:56:59,029 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:56:59,029 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:56:59,031 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:57:00,489 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:57:00,492 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {name: 'Evan You'})-[:author]->(c:Commit)-[:author]->(u2:User)
WHERE c.committedDate <= datetime('2024-07-18T19:56:59Z')
RETURN u2.name as last_user_worked_with_EvanYou
2024-07-18 19:57:00,492 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User {name: 'Evan You'})-[:author]->(c:Commit)<-[:author]-(u2:User)
WHERE c.committedDate <= datetime('2024-07-18T19:56:59Z')
RETURN u2.name as last_user_worked_with_EvanYou
2024-07-18 19:57:01,336 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:57:01,340 - scripts.generate_response - INFO - Response generated successfully for 'Who last worked with Evan You?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'Who last worked with Evan You?\n\n', 'response': "I don't know, can I help with anything else?", 'context': "Query: MATCH (u:User {name: 'Evan You'})-[:author]->(c:Commit)<-[:author]-(u2:User)\nWHERE c.committedDate <= datetime('2024-07-18T19:56:59Z')\nRETURN u2.name as last_user_worked_with_EvanYou\\Results: []"}
2024-07-18 19:57:01,341 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': "Query: MATCH (u:User {name: 'Evan You'})-[:author]->(c:Commit)<-[:author]-(u2:User)\nWHERE c.committedDate <= datetime('2024-07-18T19:56:59Z')\nRETURN u2.name as last_user_worked_with_EvanYou\\Results: []"}
2024-07-18 19:57:39,644 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:57:39,644 - wsgi - INFO - Generating response for 'how many pull requests do we have?' using 'gpt-3.5-turbo' model
2024-07-18 19:57:39,644 - scripts.generate_response - INFO - Generating response for 'how many pull requests do we have?' using 'gpt-3.5-turbo' model
2024-07-18 19:57:40,435 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:57:40,603 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:57:40,603 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:57:40,603 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:57:40,605 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:57:41,620 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:57:41,623 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:assigned]->(:Issue {type: "pull_request"})
RETURN COUNT(*) as pull_request_count;
2024-07-18 19:57:41,624 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:assigned]->(:Issue {type: "pull_request"})
RETURN COUNT(*) as pull_request_count;
2024-07-18 19:57:42,427 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:57:42,432 - scripts.generate_response - INFO - Response generated successfully for 'how many pull requests do we have?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many pull requests do we have?', 'response': 'We currently have 0 pull requests.', 'context': 'Query: MATCH (:User)-[:assigned]->(:Issue {type: "pull_request"})\nRETURN COUNT(*) as pull_request_count;\\Results: [{\'pull_request_count\': 0}]'}
2024-07-18 19:57:42,433 - wsgi - INFO - {'result': 'We currently have 0 pull requests.', 'context': 'Query: MATCH (:User)-[:assigned]->(:Issue {type: "pull_request"})\nRETURN COUNT(*) as pull_request_count;\\Results: [{\'pull_request_count\': 0}]'}
2024-07-18 19:57:50,840 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:57:50,840 - wsgi - INFO - Generating response for 'how many pull requests do we have?

' using 'gpt-3.5-turbo' model
2024-07-18 19:57:50,840 - scripts.generate_response - INFO - Generating response for 'how many pull requests do we have?

' using 'gpt-3.5-turbo' model
2024-07-18 19:57:51,650 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:57:51,810 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:57:51,810 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:57:51,810 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:57:51,812 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:57:52,376 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:57:52,379 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:assigned]->(:Issue {type: "pull_request"})
RETURN COUNT(*) as pull_request_count
2024-07-18 19:57:52,379 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:assigned]->(:Issue {type: "pull_request"})
RETURN COUNT(*) as pull_request_count
2024-07-18 19:57:53,173 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:57:53,178 - scripts.generate_response - INFO - Response generated successfully for 'how many pull requests do we have?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many pull requests do we have?\n\n', 'response': 'We currently have 0 pull requests in the software repository.', 'context': 'Query: MATCH (:User)-[:assigned]->(:Issue {type: "pull_request"})\nRETURN COUNT(*) as pull_request_count\\Results: [{\'pull_request_count\': 0}]'}
2024-07-18 19:57:53,179 - wsgi - INFO - {'result': 'We currently have 0 pull requests in the software repository.', 'context': 'Query: MATCH (:User)-[:assigned]->(:Issue {type: "pull_request"})\nRETURN COUNT(*) as pull_request_count\\Results: [{\'pull_request_count\': 0}]'}
2024-07-18 19:58:01,614 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:58:01,614 - wsgi - INFO - Generating response for 'how many issues do we have?' using 'gpt-3.5-turbo' model
2024-07-18 19:58:01,615 - scripts.generate_response - INFO - Generating response for 'how many issues do we have?' using 'gpt-3.5-turbo' model
2024-07-18 19:58:02,505 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:58:02,691 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:58:02,691 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:58:02,691 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:58:02,693 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:58:03,478 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:58:03,481 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue)
RETURN COUNT(i) as totalIssues;
2024-07-18 19:58:03,482 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue)
RETURN COUNT(i) as totalIssues;
2024-07-18 19:58:04,340 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:58:04,343 - scripts.generate_response - INFO - Response generated successfully for 'how many issues do we have?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many issues do we have?', 'response': 'We currently have 10014 total issues in the software repository.', 'context': "Query: MATCH (i:Issue)\nRETURN COUNT(i) as totalIssues;\\Results: [{'totalIssues': 10014}]"}
2024-07-18 19:58:04,344 - wsgi - INFO - {'result': 'We currently have 10014 total issues in the software repository.', 'context': "Query: MATCH (i:Issue)\nRETURN COUNT(i) as totalIssues;\\Results: [{'totalIssues': 10014}]"}
2024-07-18 19:58:11,094 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:58:11,094 - wsgi - INFO - Generating response for 'how many open issues do we have?' using 'gpt-3.5-turbo' model
2024-07-18 19:58:11,094 - scripts.generate_response - INFO - Generating response for 'how many open issues do we have?' using 'gpt-3.5-turbo' model
2024-07-18 19:58:11,949 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:58:12,141 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:58:12,141 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:58:12,141 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:58:12,143 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:58:12,952 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:58:12,955 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue {state: "open"})
RETURN count(i) as openIssues;
2024-07-18 19:58:12,955 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue {state: "open"})
RETURN count(i) as openIssues;
2024-07-18 19:58:13,799 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:58:13,801 - scripts.generate_response - INFO - Response generated successfully for 'how many open issues do we have?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many open issues do we have?', 'response': 'We currently have 356 open issues in the software repository.', 'context': 'Query: MATCH (i:Issue {state: "open"})\nRETURN count(i) as openIssues;\\Results: [{\'openIssues\': 356}]'}
2024-07-18 19:58:13,802 - wsgi - INFO - {'result': 'We currently have 356 open issues in the software repository.', 'context': 'Query: MATCH (i:Issue {state: "open"})\nRETURN count(i) as openIssues;\\Results: [{\'openIssues\': 356}]'}
2024-07-18 19:58:22,413 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:58:22,413 - wsgi - INFO - Generating response for 'what is the oldest open issue?' using 'gpt-3.5-turbo' model
2024-07-18 19:58:22,414 - scripts.generate_response - INFO - Generating response for 'what is the oldest open issue?' using 'gpt-3.5-turbo' model
2024-07-18 19:58:23,228 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:58:23,407 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:58:23,407 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:58:23,407 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:58:23,409 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:58:24,261 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:58:24,263 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue {state: "open"})
RETURN i
ORDER BY i.created_at ASC
LIMIT 1
2024-07-18 19:58:24,263 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue {state: "open"})
RETURN i
ORDER BY i.created_at ASC
LIMIT 1
2024-07-18 19:58:25,508 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:58:25,511 - scripts.generate_response - INFO - Response generated successfully for 'what is the oldest open issue?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the oldest open issue?', 'response': 'The oldest open issue is number 3650 titled "Allow SSR to render unescaped inlined script tags." It was created on September 9, 2016.', 'context': 'Query: MATCH (i:Issue {state: "open"})\nRETURN i\nORDER BY i.created_at ASC\nLIMIT 1\\Results: [{\'i\': {\'number\': 3650, \'created_at\': \'2016-09-09T09:51:01Z\', \'id\': 3650, \'state\': \'open\', \'type\': \'Issue\', \'title\': \'"Allow SSR to render unescaped inlined script tags."\', \'body\': \'"I have a feature request  - In order to fully replace templating engine server should be able to output raw unescaped contents for some tags like &lt;script&gt;. Currently all the transcluded content or the content provided by v-text/v-html is automatically escaped and the script becomes unusable. \\n\\nExample of usage - output json-ld: \\n\\n```\\n<script type="application/ld+json">\\n{\\n  "@context": "http://schema.org",\\n  "@type": "Person",\\n  "name": "John Doe",\\n  "jobTitle": "Graduate research assistant",\\n  "affiliation": "University of Dreams",\\n  "additionalName": "Johnny",\\n  "url": "http://www.example.com",\\n  "address": {\\n    "@type": "PostalAddress",\\n    "streetAddress": "1234 Peach Drive",\\n    "addressLocality": "Wonderland",\\n    "addressRegion": "Georgia"\\n  }\\n}\\n</script>\\n```\\n"\', \'url\': \'https://github.com/vuejs/vue/issues/3650\'}}]'}
2024-07-18 19:58:25,512 - wsgi - INFO - {'result': 'The oldest open issue is number 3650 titled "Allow SSR to render unescaped inlined script tags." It was created on September 9, 2016.', 'context': 'Query: MATCH (i:Issue {state: "open"})\nRETURN i\nORDER BY i.created_at ASC\nLIMIT 1\\Results: [{\'i\': {\'number\': 3650, \'created_at\': \'2016-09-09T09:51:01Z\', \'id\': 3650, \'state\': \'open\', \'type\': \'Issue\', \'title\': \'"Allow SSR to render unescaped inlined script tags."\', \'body\': \'"I have a feature request  - In order to fully replace templating engine server should be able to output raw unescaped contents for some tags like &lt;script&gt;. Currently all the transcluded content or the content provided by v-text/v-html is automatically escaped and the script becomes unusable. \\n\\nExample of usage - output json-ld: \\n\\n```\\n<script type="application/ld+json">\\n{\\n  "@context": "http://schema.org",\\n  "@type": "Person",\\n  "name": "John Doe",\\n  "jobTitle": "Graduate research assistant",\\n  "affiliation": "University of Dreams",\\n  "additionalName": "Johnny",\\n  "url": "http://www.example.com",\\n  "address": {\\n    "@type": "PostalAddress",\\n    "streetAddress": "1234 Peach Drive",\\n    "addressLocality": "Wonderland",\\n    "addressRegion": "Georgia"\\n  }\\n}\\n</script>\\n```\\n"\', \'url\': \'https://github.com/vuejs/vue/issues/3650\'}}]'}
2024-07-18 19:58:32,168 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:58:32,169 - wsgi - INFO - Generating response for 'who was working on the oldest open issue?' using 'gpt-3.5-turbo' model
2024-07-18 19:58:32,169 - scripts.generate_response - INFO - Generating response for 'who was working on the oldest open issue?' using 'gpt-3.5-turbo' model
2024-07-18 19:58:32,992 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:58:33,176 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:58:33,176 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:58:33,176 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:58:33,178 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:58:34,316 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:58:34,319 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:participates_in]->(:Issue {state: "open"})
RETURN u
ORDER BY u.created_at ASC
LIMIT 1
2024-07-18 19:58:34,319 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:participates_in]->(:Issue {state: "open"})
RETURN u
ORDER BY u.created_at ASC
LIMIT 1
2024-07-18 19:58:35,260 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:58:35,264 - scripts.generate_response - INFO - Response generated successfully for 'who was working on the oldest open issue?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who was working on the oldest open issue?', 'response': "The person working on the oldest open issue is Evan You, with the user login 'yyx990803'.", 'context': 'Query: MATCH (u:User)-[:participates_in]->(:Issue {state: "open"})\nRETURN u\nORDER BY u.created_at ASC\nLIMIT 1\\Results: [{\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}}]'}
2024-07-18 19:58:35,265 - wsgi - INFO - {'result': "The person working on the oldest open issue is Evan You, with the user login 'yyx990803'.", 'context': 'Query: MATCH (u:User)-[:participates_in]->(:Issue {state: "open"})\nRETURN u\nORDER BY u.created_at ASC\nLIMIT 1\\Results: [{\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}}]'}
2024-07-18 19:59:10,357 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:59:10,357 - wsgi - INFO - Generating response for 'and who opened the last issue?' using 'gpt-3.5-turbo' model
2024-07-18 19:59:10,357 - scripts.generate_response - INFO - Generating response for 'and who opened the last issue?' using 'gpt-3.5-turbo' model
2024-07-18 19:59:11,173 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:59:11,351 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:59:11,351 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:59:11,351 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:59:11,353 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:59:12,240 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:12,242 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(i:Issue)
WHERE i.created_at <= '2024-07-18T19:59:11Z'
RETURN u.name as last_issue_opener
2024-07-18 19:59:12,243 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:assigned]->(i:Issue)
WHERE i.created_at <= '2024-07-18T19:59:11Z'
RETURN u.name as last_issue_opener
2024-07-18 19:59:12,968 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:12,970 - scripts.generate_response - INFO - Response generated successfully for 'and who opened the last issue?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'and who opened the last issue?', 'response': 'The last issue was opened by Evan You.', 'context': "Query: MATCH (u:User)-[:assigned]->(i:Issue)\nWHERE i.created_at <= '2024-07-18T19:59:11Z'\nRETURN u.name as last_issue_opener\\Results: [{'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}]"}
2024-07-18 19:59:12,971 - wsgi - INFO - {'result': 'The last issue was opened by Evan You.', 'context': "Query: MATCH (u:User)-[:assigned]->(i:Issue)\nWHERE i.created_at <= '2024-07-18T19:59:11Z'\nRETURN u.name as last_issue_opener\\Results: [{'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}, {'last_issue_opener': 'Evan You'}]"}
2024-07-18 19:59:32,669 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:59:32,670 - wsgi - INFO - Generating response for 'and who opened the last issue?

' using 'gpt-3.5-turbo' model
2024-07-18 19:59:32,670 - scripts.generate_response - INFO - Generating response for 'and who opened the last issue?

' using 'gpt-3.5-turbo' model
2024-07-18 19:59:33,501 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:59:33,734 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:59:33,735 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:59:33,735 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:59:33,737 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:59:34,742 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:34,745 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)
WHERE i.created_at = '2024-07-18T19:59:33Z'
RETURN u.name as last_issue_opener
2024-07-18 19:59:34,746 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)
WHERE i.created_at = '2024-07-18T19:59:33Z'
RETURN u.name as last_issue_opener
2024-07-18 19:59:35,441 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:35,444 - scripts.generate_response - INFO - Response generated successfully for 'and who opened the last issue?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'and who opened the last issue?\n\n', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)\nWHERE i.created_at = '2024-07-18T19:59:33Z'\nRETURN u.name as last_issue_opener\\Results: []"}
2024-07-18 19:59:35,445 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)\nWHERE i.created_at = '2024-07-18T19:59:33Z'\nRETURN u.name as last_issue_opener\\Results: []"}
2024-07-18 19:59:38,227 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:59:38,228 - wsgi - INFO - Generating response for 'and who opened the last issue?

' using 'gpt-3.5-turbo' model
2024-07-18 19:59:38,228 - scripts.generate_response - INFO - Generating response for 'and who opened the last issue?

' using 'gpt-3.5-turbo' model
2024-07-18 19:59:39,013 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:59:39,188 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:59:39,188 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:59:39,188 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:59:39,190 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:59:41,161 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:41,163 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(i:Issue)
WHERE NOT EXISTS(i.closed_at)
RETURN u.name as last_issue_opener
ORDER BY i.created_at DESC
LIMIT 1
2024-07-18 19:59:41,164 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:assigned]->(i:Issue)
WHERE NOT EXISTS(i.closed_at)
RETURN u.name as last_issue_opener
ORDER BY i.created_at DESC
LIMIT 1
2024-07-18 19:59:41,246 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: The property existence syntax `... exists(variable.property)` is no longer supported. Please use `variable.property IS NOT NULL` instead. (line 2, column 11 (offset: 48))
"WHERE NOT EXISTS(i.closed_at)"
           ^}
2024-07-18 19:59:41,246 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-18 19:59:42,963 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:43,777 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:43,781 - scripts.generate_response - INFO - Response generated successfully for 'and who opened the last issue?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'and who opened the last issue?\n\n', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue)\nWHERE NOT EXISTS(i.closed_at)\nRETURN u.name as last_issue_opener\nORDER BY i.created_at DESC\nLIMIT 1\\Results: []'}
2024-07-18 19:59:43,782 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue)\nWHERE NOT EXISTS(i.closed_at)\nRETURN u.name as last_issue_opener\nORDER BY i.created_at DESC\nLIMIT 1\\Results: []'}
2024-07-18 19:59:56,674 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 19:59:56,674 - wsgi - INFO - Generating response for 'when is the first commit?' using 'gpt-3.5-turbo' model
2024-07-18 19:59:56,674 - scripts.generate_response - INFO - Generating response for 'when is the first commit?' using 'gpt-3.5-turbo' model
2024-07-18 19:59:57,520 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 19:59:57,720 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 19:59:57,720 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 19:59:57,720 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 19:59:57,722 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 19:59:58,524 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:58,526 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate ASC
LIMIT 1
2024-07-18 19:59:58,527 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate ASC
LIMIT 1
2024-07-18 19:59:59,406 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 19:59:59,409 - scripts.generate_response - INFO - Response generated successfully for 'when is the first commit?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'when is the first commit?', 'response': 'The first commit was made on April 11, 2016 at 02:47:28 UTC.', 'context': "Query: MATCH (c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate ASC\nLIMIT 1\\Results: [{'c.committedDate': '2016-04-11T02:47:28Z'}]"}
2024-07-18 19:59:59,410 - wsgi - INFO - {'result': 'The first commit was made on April 11, 2016 at 02:47:28 UTC.', 'context': "Query: MATCH (c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate ASC\nLIMIT 1\\Results: [{'c.committedDate': '2016-04-11T02:47:28Z'}]"}
2024-07-18 20:00:07,092 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:00:07,092 - wsgi - INFO - Generating response for 'when is the last commit?' using 'gpt-3.5-turbo' model
2024-07-18 20:00:07,092 - scripts.generate_response - INFO - Generating response for 'when is the last commit?' using 'gpt-3.5-turbo' model
2024-07-18 20:00:07,914 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:00:08,141 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:00:08,141 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:00:08,141 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:00:08,143 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:00:08,789 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:00:08,792 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-18 20:00:08,793 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-18 20:00:09,882 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:00:09,886 - scripts.generate_response - INFO - Response generated successfully for 'when is the last commit?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'when is the last commit?', 'response': 'The last commit was made on June 14, 2024, at 12:52:12 UTC.', 'context': "Query: MATCH (c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: [{'c.committedDate': '2024-06-14T12:52:12Z'}]"}
2024-07-18 20:00:09,887 - wsgi - INFO - {'result': 'The last commit was made on June 14, 2024, at 12:52:12 UTC.', 'context': "Query: MATCH (c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: [{'c.committedDate': '2024-06-14T12:52:12Z'}]"}
2024-07-18 20:00:20,798 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:00:20,798 - wsgi - INFO - Generating response for 'what is the first commit of year 2020' using 'gpt-3.5-turbo' model
2024-07-18 20:00:20,798 - scripts.generate_response - INFO - Generating response for 'what is the first commit of year 2020' using 'gpt-3.5-turbo' model
2024-07-18 20:00:21,609 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:00:21,799 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:00:21,799 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:00:21,799 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:00:21,800 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:00:23,607 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:00:23,609 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
WHERE c.committedDate >= '2020-01-01T00:00:00Z' AND c.committedDate < '2021-01-01T00:00:00Z'
RETURN c
ORDER BY c.committedDate
LIMIT 1
2024-07-18 20:00:23,609 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
WHERE c.committedDate >= '2020-01-01T00:00:00Z' AND c.committedDate < '2021-01-01T00:00:00Z'
RETURN c
ORDER BY c.committedDate
LIMIT 1
2024-07-18 20:00:25,090 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:00:25,094 - scripts.generate_response - INFO - Response generated successfully for 'what is the first commit of year 2020' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the first commit of year 2020', 'response': 'The first commit of the year 2020 is with the message "chore: update backers [ci skip] (#10969)", which was committed on January 1st, 2020 at 14:38:45 UTC. It had 24 additions and 20 deletions.', 'context': 'Query: MATCH (c:Commit)\nWHERE c.committedDate >= \'2020-01-01T00:00:00Z\' AND c.committedDate < \'2021-01-01T00:00:00Z\'\nRETURN c\nORDER BY c.committedDate\nLIMIT 1\\Results: [{\'c\': {\'additions\': 24, \'committedDate\': \'2020-01-01T14:38:45Z\', \'deletions\': 20, \'id\': \'b34518254f403bddb9bdfcfaa8ee625433d8966f\', \'type\': \'Commit\', \'message\': \'"chore: update backers [ci skip] (#10969)"\'}}]'}
2024-07-18 20:00:25,096 - wsgi - INFO - {'result': 'The first commit of the year 2020 is with the message "chore: update backers [ci skip] (#10969)", which was committed on January 1st, 2020 at 14:38:45 UTC. It had 24 additions and 20 deletions.', 'context': 'Query: MATCH (c:Commit)\nWHERE c.committedDate >= \'2020-01-01T00:00:00Z\' AND c.committedDate < \'2021-01-01T00:00:00Z\'\nRETURN c\nORDER BY c.committedDate\nLIMIT 1\\Results: [{\'c\': {\'additions\': 24, \'committedDate\': \'2020-01-01T14:38:45Z\', \'deletions\': 20, \'id\': \'b34518254f403bddb9bdfcfaa8ee625433d8966f\', \'type\': \'Commit\', \'message\': \'"chore: update backers [ci skip] (#10969)"\'}}]'}
2024-07-18 20:01:09,331 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:01:09,332 - wsgi - INFO - Generating response for 'when is the last commit of year 2020' using 'gpt-3.5-turbo' model
2024-07-18 20:01:09,332 - scripts.generate_response - INFO - Generating response for 'when is the last commit of year 2020' using 'gpt-3.5-turbo' model
2024-07-18 20:01:10,167 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:01:10,338 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:01:10,338 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:01:10,338 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:01:10,340 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:01:11,320 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:01:11,322 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
WHERE datetime(c.committedDate).year = 2020
RETURN c
ORDER BY datetime(c.committedDate) DESC
LIMIT 1
2024-07-18 20:01:11,322 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
WHERE datetime(c.committedDate).year = 2020
RETURN c
ORDER BY datetime(c.committedDate) DESC
LIMIT 1
2024-07-18 20:01:12,224 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:01:12,228 - scripts.generate_response - INFO - Response generated successfully for 'when is the last commit of year 2020' using 'gpt-3.5-turbo' model. 
Response: {'query': 'when is the last commit of year 2020', 'response': 'The last commit of the year 2020 was made on December 28th, 2020 at 21:49:13 UTC.', 'context': 'Query: MATCH (c:Commit)\nWHERE datetime(c.committedDate).year = 2020\nRETURN c\nORDER BY datetime(c.committedDate) DESC\nLIMIT 1\\Results: [{\'c\': {\'additions\': 22, \'committedDate\': \'2020-12-28T21:49:13Z\', \'deletions\': 12, \'id\': \'4063f3ce9bfba0132ade75ad5f907c923a561304\', \'type\': \'Commit\', \'message\': \'"chore: update sponsors [ci skip] (#11843)"\'}}]'}
2024-07-18 20:01:12,228 - wsgi - INFO - {'result': 'The last commit of the year 2020 was made on December 28th, 2020 at 21:49:13 UTC.', 'context': 'Query: MATCH (c:Commit)\nWHERE datetime(c.committedDate).year = 2020\nRETURN c\nORDER BY datetime(c.committedDate) DESC\nLIMIT 1\\Results: [{\'c\': {\'additions\': 22, \'committedDate\': \'2020-12-28T21:49:13Z\', \'deletions\': 12, \'id\': \'4063f3ce9bfba0132ade75ad5f907c923a561304\', \'type\': \'Commit\', \'message\': \'"chore: update sponsors [ci skip] (#11843)"\'}}]'}
2024-07-18 20:01:24,316 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:01:24,316 - wsgi - INFO - Generating response for 'who is the last contributor of last year?' using 'gpt-3.5-turbo' model
2024-07-18 20:01:24,317 - scripts.generate_response - INFO - Generating response for 'who is the last contributor of last year?' using 'gpt-3.5-turbo' model
2024-07-18 20:01:25,135 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:01:25,301 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:01:25,301 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:01:25,301 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:01:25,303 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:01:26,513 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:01:26,516 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
WHERE datetime(c.committedDate).year = 2023
RETURN u.name
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-18 20:01:26,516 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
WHERE datetime(c.committedDate).year = 2023
RETURN u.name
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-18 20:01:27,315 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:01:27,319 - scripts.generate_response - INFO - Response generated successfully for 'who is the last contributor of last year?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who is the last contributor of last year?', 'response': 'The last contributor of last year is Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWHERE datetime(c.committedDate).year = 2023\nRETURN u.name\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: [{'u.name': 'Evan You'}]"}
2024-07-18 20:01:27,320 - wsgi - INFO - {'result': 'The last contributor of last year is Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWHERE datetime(c.committedDate).year = 2023\nRETURN u.name\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: [{'u.name': 'Evan You'}]"}
2024-07-18 20:02:34,085 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:02:34,085 - wsgi - INFO - Generating response for 'who closed most issues?' using 'gpt-3.5-turbo' model
2024-07-18 20:02:34,085 - scripts.generate_response - INFO - Generating response for 'who closed most issues?' using 'gpt-3.5-turbo' model
2024-07-18 20:02:34,920 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:02:35,118 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:02:35,118 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:02:35,118 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:02:35,120 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:02:36,196 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:02:36,199 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(i:Issue {state: "closed"})
RETURN u.name, COUNT(i) AS closed_issues
ORDER BY closed_issues DESC
LIMIT 1;
2024-07-18 20:02:36,199 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:assigned]->(i:Issue {state: "closed"})
RETURN u.name, COUNT(i) AS closed_issues
ORDER BY closed_issues DESC
LIMIT 1;
2024-07-18 20:02:37,242 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:02:37,246 - scripts.generate_response - INFO - Response generated successfully for 'who closed most issues?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who closed most issues?', 'response': 'Evan You closed the most issues, with a total of 43 closed issues.', 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue {state: "closed"})\nRETURN u.name, COUNT(i) AS closed_issues\nORDER BY closed_issues DESC\nLIMIT 1;\\Results: [{\'u.name\': \'Evan You\', \'closed_issues\': 43}]'}
2024-07-18 20:02:37,247 - wsgi - INFO - {'result': 'Evan You closed the most issues, with a total of 43 closed issues.', 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue {state: "closed"})\nRETURN u.name, COUNT(i) AS closed_issues\nORDER BY closed_issues DESC\nLIMIT 1;\\Results: [{\'u.name\': \'Evan You\', \'closed_issues\': 43}]'}
2024-07-18 20:02:42,001 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:02:42,001 - wsgi - INFO - Generating response for 'who opened most issues?' using 'gpt-3.5-turbo' model
2024-07-18 20:02:42,002 - scripts.generate_response - INFO - Generating response for 'who opened most issues?' using 'gpt-3.5-turbo' model
2024-07-18 20:02:42,826 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:02:42,994 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:02:42,994 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:02:42,994 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:02:42,996 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:02:44,263 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:02:44,269 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)
RETURN u.name, COUNT(i) AS opened_issues
ORDER BY opened_issues DESC
LIMIT 1;
2024-07-18 20:02:44,269 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)
RETURN u.name, COUNT(i) AS opened_issues
ORDER BY opened_issues DESC
LIMIT 1;
2024-07-18 20:02:44,944 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:02:44,947 - scripts.generate_response - INFO - Response generated successfully for 'who opened most issues?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who opened most issues?', 'response': 'Evan You opened the most issues, with a total of 456 opened issues.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)\nRETURN u.name, COUNT(i) AS opened_issues\nORDER BY opened_issues DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'opened_issues': 456}]"}
2024-07-18 20:02:44,948 - wsgi - INFO - {'result': 'Evan You opened the most issues, with a total of 456 opened issues.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)\nRETURN u.name, COUNT(i) AS opened_issues\nORDER BY opened_issues DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'opened_issues': 456}]"}
2024-07-18 20:02:54,710 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:02:54,710 - wsgi - INFO - Generating response for 'who has opened the most issues after Evan You?' using 'gpt-3.5-turbo' model
2024-07-18 20:02:54,710 - scripts.generate_response - INFO - Generating response for 'who has opened the most issues after Evan You?' using 'gpt-3.5-turbo' model
2024-07-18 20:02:55,534 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:02:55,697 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:02:55,698 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:02:55,698 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:02:55,699 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:02:57,253 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:02:57,257 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:author]-(otherUser:User)
RETURN otherUser.name, COUNT(DISTINCT otherUser) AS openedIssues
ORDER BY openedIssues DESC
LIMIT 1;
2024-07-18 20:02:57,257 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is 
2024-07-18 20:02:57,257 - scripts.core.graph_cypher_chain_patch - INFO - No cypher statement generated
2024-07-18 20:02:57,796 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:02:57,799 - scripts.generate_response - INFO - Response generated successfully for 'who has opened the most issues after Evan You?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who has opened the most issues after Evan You?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-18 20:02:57,800 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-18 20:03:01,450 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:03:01,450 - wsgi - INFO - Generating response for 'who has opened the most issues after Evan You?

' using 'gpt-3.5-turbo' model
2024-07-18 20:03:01,450 - scripts.generate_response - INFO - Generating response for 'who has opened the most issues after Evan You?

' using 'gpt-3.5-turbo' model
2024-07-18 20:03:02,295 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:03:02,534 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:03:02,534 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:03:02,534 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:03:02,536 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:03:03,556 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:03:03,559 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {name: 'Evan You'})-[:participates_in]->(:Issue)<-[:author]-(otherUser:User)
RETURN otherUser.name, COUNT(*) AS isuesOpened
ORDER BY isuesOpened DESC
LIMIT 1
2024-07-18 20:03:03,559 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is 
2024-07-18 20:03:03,559 - scripts.core.graph_cypher_chain_patch - INFO - No cypher statement generated
2024-07-18 20:03:05,138 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:03:05,142 - scripts.generate_response - INFO - Response generated successfully for 'who has opened the most issues after Evan You?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who has opened the most issues after Evan You?\n\n', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-18 20:03:05,143 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-18 20:03:17,650 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:03:17,650 - wsgi - INFO - Generating response for 'Rank the top 5 people who opened the most issues' using 'gpt-3.5-turbo' model
2024-07-18 20:03:17,650 - scripts.generate_response - INFO - Generating response for 'Rank the top 5 people who opened the most issues' using 'gpt-3.5-turbo' model
2024-07-18 20:03:18,486 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:03:18,645 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:03:18,645 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:03:18,645 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:03:18,646 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:03:19,613 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:03:19,617 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Issue)
RETURN u.name, COUNT(*) AS total_issues
ORDER BY total_issues DESC
LIMIT 5;
2024-07-18 20:03:19,617 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is 
2024-07-18 20:03:19,617 - scripts.core.graph_cypher_chain_patch - INFO - No cypher statement generated
2024-07-18 20:03:20,283 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:03:20,287 - scripts.generate_response - INFO - Response generated successfully for 'Rank the top 5 people who opened the most issues' using 'gpt-3.5-turbo' model. 
Response: {'query': 'Rank the top 5 people who opened the most issues', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-18 20:03:20,288 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-18 20:03:23,789 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:03:23,789 - wsgi - INFO - Generating response for 'Rank the top 5 people who opened the most issues

' using 'gpt-3.5-turbo' model
2024-07-18 20:03:23,789 - scripts.generate_response - INFO - Generating response for 'Rank the top 5 people who opened the most issues

' using 'gpt-3.5-turbo' model
2024-07-18 20:03:24,673 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:03:24,847 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:03:24,847 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:03:24,847 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:03:24,849 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:03:26,036 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:03:26,040 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Issue)
RETURN u.name, COUNT(*) AS isssues_opened
ORDER BY isssues_opened DESC
LIMIT 5
2024-07-18 20:03:26,040 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is 
2024-07-18 20:03:26,040 - scripts.core.graph_cypher_chain_patch - INFO - No cypher statement generated
2024-07-18 20:03:26,697 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:03:26,700 - scripts.generate_response - INFO - Response generated successfully for 'Rank the top 5 people who opened the most issues

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'Rank the top 5 people who opened the most issues\n\n', 'response': "I don't know, can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-18 20:03:26,701 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-18 20:03:43,152 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:03:43,152 - wsgi - INFO - Generating response for 'Rank the top 5 developers with the most commits
' using 'gpt-3.5-turbo' model
2024-07-18 20:03:43,153 - scripts.generate_response - INFO - Generating response for 'Rank the top 5 developers with the most commits
' using 'gpt-3.5-turbo' model
2024-07-18 20:03:43,961 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:03:44,224 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:03:44,224 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:03:44,224 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:03:44,226 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:03:45,194 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:03:45,197 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
RETURN u.name, COUNT(c) AS commitCount
ORDER BY commitCount DESC
LIMIT 5
2024-07-18 20:03:45,197 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
RETURN u.name, COUNT(c) AS commitCount
ORDER BY commitCount DESC
LIMIT 5
2024-07-18 20:03:46,250 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:03:46,253 - scripts.generate_response - INFO - Response generated successfully for 'Rank the top 5 developers with the most commits
' using 'gpt-3.5-turbo' model. 
Response: {'query': 'Rank the top 5 developers with the most commits\n', 'response': 'The top 5 developers with the most commits are:\n1. Evan You with 2583 commits\n2. vue-bot with 113 commits\n3. Hanks with 80 commits\n4. Eduardo San Martin Morote with 47 commits', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nRETURN u.name, COUNT(c) AS commitCount\nORDER BY commitCount DESC\nLIMIT 5\\Results: [{'u.name': 'Evan You', 'commitCount': 2583}, {'u.name': 'vue-bot', 'commitCount': 113}, {'u.name': None, 'commitCount': 80}, {'u.name': 'Hanks', 'commitCount': 47}, {'u.name': 'Eduardo San Martin Morote', 'commitCount': 43}]"}
2024-07-18 20:03:46,254 - wsgi - INFO - {'result': 'The top 5 developers with the most commits are:\n1. Evan You with 2583 commits\n2. vue-bot with 113 commits\n3. Hanks with 80 commits\n4. Eduardo San Martin Morote with 47 commits', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nRETURN u.name, COUNT(c) AS commitCount\nORDER BY commitCount DESC\nLIMIT 5\\Results: [{'u.name': 'Evan You', 'commitCount': 2583}, {'u.name': 'vue-bot', 'commitCount': 113}, {'u.name': None, 'commitCount': 80}, {'u.name': 'Hanks', 'commitCount': 47}, {'u.name': 'Eduardo San Martin Morote', 'commitCount': 43}]"}
2024-07-18 20:04:01,276 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:04:01,276 - wsgi - INFO - Generating response for 'who is the least experienced?' using 'gpt-3.5-turbo' model
2024-07-18 20:04:01,276 - scripts.generate_response - INFO - Generating response for 'who is the least experienced?' using 'gpt-3.5-turbo' model
2024-07-18 20:04:02,099 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:04:02,360 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:04:02,360 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:04:02,360 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:04:02,363 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:04:03,442 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:04:03,444 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name
ORDER BY commitCount ASC
LIMIT 1;
2024-07-18 20:04:03,445 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
WITH u, COUNT(c) as commitCount
RETURN u.name
ORDER BY commitCount ASC
LIMIT 1;
2024-07-18 20:04:04,251 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:04:04,255 - scripts.generate_response - INFO - Response generated successfully for 'who is the least experienced?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who is the least experienced?', 'response': 'The least experienced person is Snoppy.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name\nORDER BY commitCount ASC\nLIMIT 1;\\Results: [{'u.name': 'Snoppy'}]"}
2024-07-18 20:04:04,256 - wsgi - INFO - {'result': 'The least experienced person is Snoppy.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWITH u, COUNT(c) as commitCount\nRETURN u.name\nORDER BY commitCount ASC\nLIMIT 1;\\Results: [{'u.name': 'Snoppy'}]"}
2024-07-18 20:04:13,094 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:04:13,094 - wsgi - INFO - Generating response for 'should we fire the least experienced developer?' using 'gpt-3.5-turbo' model
2024-07-18 20:04:13,094 - scripts.generate_response - INFO - Generating response for 'should we fire the least experienced developer?' using 'gpt-3.5-turbo' model
2024-07-18 20:04:13,943 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:04:14,105 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:04:14,105 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:04:14,105 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:04:14,107 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:04:14,933 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:04:14,936 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE u.experience = "least experienced"
RETURN u, c, i
2024-07-18 20:04:14,936 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE u.experience = "least experienced"
RETURN u, c, i
2024-07-18 20:04:15,070 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: experience)} {position: line: 2, column: 9, offset: 65} for query: 'MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE u.experience = "least experienced"\nRETURN u, c, i'
2024-07-18 20:04:15,862 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:04:15,866 - scripts.generate_response - INFO - Response generated successfully for 'should we fire the least experienced developer?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'should we fire the least experienced developer?', 'response': "I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE u.experience = "least experienced"\nRETURN u, c, i\\Results: []'}
2024-07-18 20:04:15,867 - wsgi - INFO - {'result': "I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE u.experience = "least experienced"\nRETURN u, c, i\\Results: []'}
2024-07-18 20:04:43,295 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:04:43,295 - wsgi - INFO - Generating response for 'when did the least experienced developer joined the project' using 'gpt-3.5-turbo' model
2024-07-18 20:04:43,295 - scripts.generate_response - INFO - Generating response for 'when did the least experienced developer joined the project' using 'gpt-3.5-turbo' model
2024-07-18 20:04:44,075 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:04:44,253 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:04:44,253 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:04:44,253 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:04:44,255 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:04:45,430 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:04:45,439 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(i:Issue)-[:impacted]->(n:Node)
WHERE u.type = "developer"
RETURN MIN(u.joinedDate) as least_experienced_joined_date
2024-07-18 20:04:45,439 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:assigned]->(i:Issue)-[:impacted]->(n:Node)
WHERE u.type = "developer"
RETURN MIN(u.joinedDate) as least_experienced_joined_date
2024-07-18 20:04:45,559 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: joinedDate)} {position: line: 3, column: 14, offset: 100} for query: 'MATCH (u:User)-[:assigned]->(i:Issue)-[:impacted]->(n:Node)\nWHERE u.type = "developer"\nRETURN MIN(u.joinedDate) as least_experienced_joined_date'
2024-07-18 20:04:46,118 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:04:46,121 - scripts.generate_response - INFO - Response generated successfully for 'when did the least experienced developer joined the project' using 'gpt-3.5-turbo' model. 
Response: {'query': 'when did the least experienced developer joined the project', 'response': 'The least experienced developer joined the project on an unknown date.', 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue)-[:impacted]->(n:Node)\nWHERE u.type = "developer"\nRETURN MIN(u.joinedDate) as least_experienced_joined_date\\Results: [{\'least_experienced_joined_date\': None}]'}
2024-07-18 20:04:46,121 - wsgi - INFO - {'result': 'The least experienced developer joined the project on an unknown date.', 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue)-[:impacted]->(n:Node)\nWHERE u.type = "developer"\nRETURN MIN(u.joinedDate) as least_experienced_joined_date\\Results: [{\'least_experienced_joined_date\': None}]'}
2024-07-18 20:04:55,745 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:04:55,745 - wsgi - INFO - Generating response for 'when did the least experienced developer joined the project

' using 'gpt-3.5-turbo' model
2024-07-18 20:04:55,745 - scripts.generate_response - INFO - Generating response for 'when did the least experienced developer joined the project

' using 'gpt-3.5-turbo' model
2024-07-18 20:04:56,554 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:04:56,737 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:04:56,737 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:04:56,738 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:04:56,739 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:04:57,683 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:04:57,685 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(i:Issue)
WHERE u.type = "developer"
RETURN MIN(i.created_at) as joined_date
2024-07-18 20:04:57,685 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:assigned]->(i:Issue)
WHERE u.type = "developer"
RETURN MIN(i.created_at) as joined_date
2024-07-18 20:04:58,327 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:04:58,331 - scripts.generate_response - INFO - Response generated successfully for 'when did the least experienced developer joined the project

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'when did the least experienced developer joined the project\n\n', 'response': 'The least experienced developer joined the project on an unspecified date.', 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue)\nWHERE u.type = "developer"\nRETURN MIN(i.created_at) as joined_date\\Results: [{\'joined_date\': None}]'}
2024-07-18 20:04:58,332 - wsgi - INFO - {'result': 'The least experienced developer joined the project on an unspecified date.', 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue)\nWHERE u.type = "developer"\nRETURN MIN(i.created_at) as joined_date\\Results: [{\'joined_date\': None}]'}
2024-07-18 20:06:53,836 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:06:53,836 - wsgi - INFO - Generating response for 'rank the top 3 people who fixed the most bugs' using 'gpt-3.5-turbo' model
2024-07-18 20:06:53,836 - scripts.generate_response - INFO - Generating response for 'rank the top 3 people who fixed the most bugs' using 'gpt-3.5-turbo' model
2024-07-18 20:06:54,638 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:06:54,804 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:06:54,805 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:06:54,805 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:06:54,806 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:06:55,662 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:06:55,665 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue)
WHERE u.type = 'Person'
RETURN u.name, COUNT(i) AS num_bugs_fixed
ORDER BY num_bugs_fixed DESC
LIMIT 3
2024-07-18 20:06:55,665 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue)
WHERE u.type = 'Person'
RETURN u.name, COUNT(i) AS num_bugs_fixed
ORDER BY num_bugs_fixed DESC
LIMIT 3
2024-07-18 20:06:56,670 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:06:56,673 - scripts.generate_response - INFO - Response generated successfully for 'rank the top 3 people who fixed the most bugs' using 'gpt-3.5-turbo' model. 
Response: {'query': 'rank the top 3 people who fixed the most bugs', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue)\nWHERE u.type = 'Person'\nRETURN u.name, COUNT(i) AS num_bugs_fixed\nORDER BY num_bugs_fixed DESC\nLIMIT 3\\Results: []"}
2024-07-18 20:06:56,674 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue)\nWHERE u.type = 'Person'\nRETURN u.name, COUNT(i) AS num_bugs_fixed\nORDER BY num_bugs_fixed DESC\nLIMIT 3\\Results: []"}
2024-07-18 20:07:05,326 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-18 20:07:05,326 - wsgi - INFO - Generating response for 'rank the top 3 people who fixed the most bugs

' using 'gpt-3.5-turbo' model
2024-07-18 20:07:05,326 - scripts.generate_response - INFO - Generating response for 'rank the top 3 people who fixed the most bugs

' using 'gpt-3.5-turbo' model
2024-07-18 20:07:06,133 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-18 20:07:06,338 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-18 20:07:06,338 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-18 20:07:06,338 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-18 20:07:06,340 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-18 20:07:07,448 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:07:07,451 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue)
WHERE i.type = 'bug'
RETURN u.name, COUNT(i) AS num_bugs_fixed
ORDER BY num_bugs_fixed DESC
LIMIT 3
2024-07-18 20:07:07,452 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue)
WHERE i.type = 'bug'
RETURN u.name, COUNT(i) AS num_bugs_fixed
ORDER BY num_bugs_fixed DESC
LIMIT 3
2024-07-18 20:07:08,222 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-18 20:07:08,226 - scripts.generate_response - INFO - Response generated successfully for 'rank the top 3 people who fixed the most bugs

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'rank the top 3 people who fixed the most bugs\n\n', 'response': "I'm sorry, but I don't have the information to rank the top 3 people who fixed the most bugs. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue)\nWHERE i.type = 'bug'\nRETURN u.name, COUNT(i) AS num_bugs_fixed\nORDER BY num_bugs_fixed DESC\nLIMIT 3\\Results: []"}
2024-07-18 20:07:08,226 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to rank the top 3 people who fixed the most bugs. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue)\nWHERE i.type = 'bug'\nRETURN u.name, COUNT(i) AS num_bugs_fixed\nORDER BY num_bugs_fixed DESC\nLIMIT 3\\Results: []"}
2024-07-19 14:10:58,620 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 14:10:58,620 - wsgi - INFO - Generating response for 'when did the project start' using 'gpt-3.5-turbo' model
2024-07-19 14:10:58,620 - scripts.generate_response - INFO - Generating response for 'when did the project start' using 'gpt-3.5-turbo' model
2024-07-19 14:11:01,072 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 14:11:01,566 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 14:11:01,566 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 14:11:01,566 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 14:11:01,570 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 14:11:02,438 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 14:11:02,454 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (n:Node)-[:introduced]->(i:Issue)
RETURN i.created_at
ORDER BY i.created_at ASC
LIMIT 1
2024-07-19 14:11:02,455 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (n:Node)-[:introduced]->(i:Issue)
RETURN i.created_at
ORDER BY i.created_at ASC
LIMIT 1
2024-07-19 14:11:03,614 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 14:11:03,618 - scripts.generate_response - INFO - Response generated successfully for 'when did the project start' using 'gpt-3.5-turbo' model. 
Response: {'query': 'when did the project start', 'response': 'The project started on February 3, 2014 at 17:15:53 UTC.', 'context': "Query: MATCH (n:Node)-[:introduced]->(i:Issue)\nRETURN i.created_at\nORDER BY i.created_at ASC\nLIMIT 1\\Results: [{'i.created_at': '2014-02-03T17:15:53Z'}]"}
2024-07-19 14:11:03,619 - wsgi - INFO - {'result': 'The project started on February 3, 2014 at 17:15:53 UTC.', 'context': "Query: MATCH (n:Node)-[:introduced]->(i:Issue)\nRETURN i.created_at\nORDER BY i.created_at ASC\nLIMIT 1\\Results: [{'i.created_at': '2014-02-03T17:15:53Z'}]"}
2024-07-19 14:11:40,952 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 14:11:40,952 - wsgi - INFO - Generating response for 'when did the project start' using 'gpt-4o' model
2024-07-19 14:11:40,953 - scripts.generate_response - INFO - Generating response for 'when did the project start' using 'gpt-4o' model
2024-07-19 14:11:41,951 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 14:11:42,506 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 14:11:42,506 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 14:11:42,506 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 14:11:42,510 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 14:11:43,615 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 14:11:43,630 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate ASC
LIMIT 1

2024-07-19 14:11:43,630 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate ASC
LIMIT 1

2024-07-19 14:11:44,635 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 14:11:44,639 - scripts.generate_response - INFO - Response generated successfully for 'when did the project start' using 'gpt-4o' model. 
Response: {'query': 'when did the project start', 'response': 'The project started on April 11, 2016.', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate ASC\nLIMIT 1\n\\Results: [{'c.committedDate': '2016-04-11T02:47:28Z'}]"}
2024-07-19 14:11:44,640 - wsgi - INFO - {'result': 'The project started on April 11, 2016.', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate ASC\nLIMIT 1\n\\Results: [{'c.committedDate': '2016-04-11T02:47:28Z'}]"}
2024-07-19 15:14:12,205 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:14:12,206 - wsgi - INFO - Generating response for 'who fixed the most bugs?' using 'gpt-4o' model
2024-07-19 15:14:12,206 - scripts.generate_response - INFO - Generating response for 'who fixed the most bugs?' using 'gpt-4o' model
2024-07-19 15:14:13,311 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:14:13,520 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:14:13,520 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 15:14:13,520 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:14:13,522 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:14:14,746 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:14:14,750 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
RETURN u.name AS user, COUNT(i) AS bug_fixes
ORDER BY bug_fixes DESC
LIMIT 1

2024-07-19 15:14:14,751 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
RETURN u.name AS user, COUNT(i) AS bug_fixes
ORDER BY bug_fixes DESC
LIMIT 1

2024-07-19 15:14:16,215 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:14:16,218 - scripts.generate_response - INFO - Response generated successfully for 'who fixed the most bugs?' using 'gpt-4o' model. 
Response: {'query': 'who fixed the most bugs?', 'response': 'The user who fixed the most bugs is Evan You, with a total of 429 bug fixes.', 'context': "Query: cypher\nMATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nRETURN u.name AS user, COUNT(i) AS bug_fixes\nORDER BY bug_fixes DESC\nLIMIT 1\n\\Results: [{'user': 'Evan You', 'bug_fixes': 429}]"}
2024-07-19 15:14:16,218 - wsgi - INFO - {'result': 'The user who fixed the most bugs is Evan You, with a total of 429 bug fixes.', 'context': "Query: cypher\nMATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nRETURN u.name AS user, COUNT(i) AS bug_fixes\nORDER BY bug_fixes DESC\nLIMIT 1\n\\Results: [{'user': 'Evan You', 'bug_fixes': 429}]"}
2024-07-19 15:14:57,490 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:14:57,490 - wsgi - INFO - Generating response for 'what is the latest issue about?' using 'gpt-4o' model
2024-07-19 15:14:57,490 - scripts.generate_response - INFO - Generating response for 'what is the latest issue about?' using 'gpt-4o' model
2024-07-19 15:14:58,497 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:14:58,864 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:14:58,864 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 15:14:58,864 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:14:58,869 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:15:00,275 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:15:00,298 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (i:Issue)
RETURN i.title, i.body
ORDER BY i.created_at DESC
LIMIT 1

2024-07-19 15:15:00,298 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (i:Issue)
RETURN i.title, i.body
ORDER BY i.created_at DESC
LIMIT 1

2024-07-19 15:15:06,185 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:15:06,189 - scripts.generate_response - INFO - Response generated successfully for 'what is the latest issue about?' using 'gpt-4o' model. 
Response: {'query': 'what is the latest issue about?', 'response': 'The latest issue is titled "Dynamic component not rendering slot tree." The issue body provides detailed information, including:\n\n- **Vue version**: 2.6.12\n- **Link to minimal reproduction**: [CodePen link](https://codepen.io/Dimi_0-o/pen/QWPKENG?editors=1010)\n- **Steps to reproduce**:\n  1. Open the provided CodePen link with Chrome at full width.\n  2. Click the "Open Create Modal"; the modal with the text-field renders properly.\n  3. Decrease the width of the window to hit the mobile media query (max-width: 800px).\n  4. The modal is now in fullscreen, but the label of the text-field is not rendered.\n\n- **Expected behavior**: The label of the text-field should be rendered.\n- **Actual behavior**: After a dynamic update of the drawer component, the label of the text-field (slot) is not rendered.\n\nThe issue mentions that it is similar to a previously reported issue (https://github.com/vuejs/vue/issues/6891), which was supposedly fixed in version 2.5.3, but the bug still appears in version 2.6.12. The system information section has no response, and no additional comments are provided except for the reference to the past issue.', 'context': 'Query: cypher\nMATCH (i:Issue)\nRETURN i.title, i.body\nORDER BY i.created_at DESC\nLIMIT 1\n\\Results: [{\'i.title\': \'"Dynamic component not rendering slot tree"\', \'i.body\': \'"### Vue version\\n\\n2.6.12\\n\\n### Link to minimal reproduction\\n\\nhttps://codepen.io/Dimi_0-o/pen/QWPKENG?editors=1010\\n\\n### Steps to reproduce\\n\\n1. Open https://codepen.io/Dimi_0-o/pen/QWPKENG?editors=1010 with chrome, full width,\\r\\n2. click the "Open Create Modal", the modal with text-field renders properly\\r\\n3. Decrease the width of the window so that you hit the mobile media query (max-width: 800px)\\r\\n4. the modal is now in fullscreen but label of text-field is not rendered\\n\\n### What is expected?\\n\\nthe label of text-field should be rendered\\n\\n### What is actually happening?\\n\\nonce a dynamic update of the drawer component, the label of text-field (slot) is not rendered\\n\\n### System Info\\n\\n_No response_\\n\\n### Any additional comments?\\n\\nIts the same issue as this one https://github.com/vuejs/vue/issues/6891, however, git history shows that there were fixes to this issue in version 2.5.3, but the bug still appears in 2.6.12"\'}]'}
2024-07-19 15:15:06,191 - wsgi - INFO - {'result': 'The latest issue is titled "Dynamic component not rendering slot tree." The issue body provides detailed information, including:\n\n- **Vue version**: 2.6.12\n- **Link to minimal reproduction**: [CodePen link](https://codepen.io/Dimi_0-o/pen/QWPKENG?editors=1010)\n- **Steps to reproduce**:\n  1. Open the provided CodePen link with Chrome at full width.\n  2. Click the "Open Create Modal"; the modal with the text-field renders properly.\n  3. Decrease the width of the window to hit the mobile media query (max-width: 800px).\n  4. The modal is now in fullscreen, but the label of the text-field is not rendered.\n\n- **Expected behavior**: The label of the text-field should be rendered.\n- **Actual behavior**: After a dynamic update of the drawer component, the label of the text-field (slot) is not rendered.\n\nThe issue mentions that it is similar to a previously reported issue (https://github.com/vuejs/vue/issues/6891), which was supposedly fixed in version 2.5.3, but the bug still appears in version 2.6.12. The system information section has no response, and no additional comments are provided except for the reference to the past issue.', 'context': 'Query: cypher\nMATCH (i:Issue)\nRETURN i.title, i.body\nORDER BY i.created_at DESC\nLIMIT 1\n\\Results: [{\'i.title\': \'"Dynamic component not rendering slot tree"\', \'i.body\': \'"### Vue version\\n\\n2.6.12\\n\\n### Link to minimal reproduction\\n\\nhttps://codepen.io/Dimi_0-o/pen/QWPKENG?editors=1010\\n\\n### Steps to reproduce\\n\\n1. Open https://codepen.io/Dimi_0-o/pen/QWPKENG?editors=1010 with chrome, full width,\\r\\n2. click the "Open Create Modal", the modal with text-field renders properly\\r\\n3. Decrease the width of the window so that you hit the mobile media query (max-width: 800px)\\r\\n4. the modal is now in fullscreen but label of text-field is not rendered\\n\\n### What is expected?\\n\\nthe label of text-field should be rendered\\n\\n### What is actually happening?\\n\\nonce a dynamic update of the drawer component, the label of text-field (slot) is not rendered\\n\\n### System Info\\n\\n_No response_\\n\\n### Any additional comments?\\n\\nIts the same issue as this one https://github.com/vuejs/vue/issues/6891, however, git history shows that there were fixes to this issue in version 2.5.3, but the bug still appears in 2.6.12"\'}]'}
2024-07-19 15:32:32,587 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:32:32,587 - wsgi - INFO - Generating response for 'which person committed this commit? "#13192"' using 'gpt-3.5-turbo' model
2024-07-19 15:32:32,588 - scripts.generate_response - INFO - Generating response for 'which person committed this commit? "#13192"' using 'gpt-3.5-turbo' model
2024-07-19 15:32:33,472 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:32:33,701 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:32:33,701 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:32:33,701 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:32:33,703 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:32:34,766 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:32:34,769 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit {id: "#13192"})-[:author]->(u:User)
RETURN u;
2024-07-19 15:32:34,769 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit {id: "#13192"})<-[:author]-(u:User)
RETURN u;
2024-07-19 15:32:35,679 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:32:35,715 - scripts.generate_response - INFO - Response generated successfully for 'which person committed this commit? "#13192"' using 'gpt-3.5-turbo' model. 
Response: {'query': 'which person committed this commit? "#13192"', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:Commit {id: "#13192"})<-[:author]-(u:User)\nRETURN u;\\Results: []'}
2024-07-19 15:32:35,716 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:Commit {id: "#13192"})<-[:author]-(u:User)\nRETURN u;\\Results: []'}
2024-07-19 15:32:55,931 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:32:55,931 - wsgi - INFO - Generating response for 'which repository are we working with?' using 'gpt-3.5-turbo' model
2024-07-19 15:32:55,931 - scripts.generate_response - INFO - Generating response for 'which repository are we working with?' using 'gpt-3.5-turbo' model
2024-07-19 15:32:56,749 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:32:56,907 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:32:56,907 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:32:56,907 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:32:56,909 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:32:57,522 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:32:57,525 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:changed]->(f:File)
RETURN f.filename
2024-07-19 15:32:57,525 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:changed]->(f:File)
RETURN f.filename
2024-07-19 15:32:59,315 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:32:59,319 - scripts.generate_response - INFO - Response generated successfully for 'which repository are we working with?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'which repository are we working with?', 'response': 'The repository we are working with includes files such as README.md, config.yml, CHANGELOG.md, package.json, and init.ts.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:changed]->(f:File)\nRETURN f.filename\\Results: [{'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'config.yml'}, {'f.filename': 'README.md'}, {'f.filename': 'CHANGELOG.md'}, {'f.filename': 'package.json'}, {'f.filename': 'CHANGELOG.md'}, {'f.filename': 'init.ts'}, {'f.filename': 'package.json'}, {'f.filename': 'CHANGELOG.md'}]"}
2024-07-19 15:32:59,320 - wsgi - INFO - {'result': 'The repository we are working with includes files such as README.md, config.yml, CHANGELOG.md, package.json, and init.ts.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)-[:changed]->(f:File)\nRETURN f.filename\\Results: [{'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'config.yml'}, {'f.filename': 'README.md'}, {'f.filename': 'CHANGELOG.md'}, {'f.filename': 'package.json'}, {'f.filename': 'CHANGELOG.md'}, {'f.filename': 'init.ts'}, {'f.filename': 'package.json'}, {'f.filename': 'CHANGELOG.md'}]"}
2024-07-19 15:33:16,106 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:33:16,106 - wsgi - INFO - Generating response for 'can you give me the name of this repository?' using 'gpt-3.5-turbo' model
2024-07-19 15:33:16,106 - scripts.generate_response - INFO - Generating response for 'can you give me the name of this repository?' using 'gpt-3.5-turbo' model
2024-07-19 15:33:16,928 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:33:17,160 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:33:17,160 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:33:17,160 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:33:17,162 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:33:18,317 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:33:18,326 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "repository_id"})
RETURN "repository_name"
2024-07-19 15:33:18,326 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "repository_id"})
RETURN "repository_name"
2024-07-19 15:33:19,386 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:33:19,389 - scripts.generate_response - INFO - Response generated successfully for 'can you give me the name of this repository?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'can you give me the name of this repository?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "repository_id"})\nRETURN "repository_name"\\Results: []'}
2024-07-19 15:33:19,390 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "repository_id"})\nRETURN "repository_name"\\Results: []'}
2024-07-19 15:35:02,853 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:35:02,853 - wsgi - INFO - Generating response for 'who committed this PR? #13192' using 'gpt-3.5-turbo' model
2024-07-19 15:35:02,853 - scripts.generate_response - INFO - Generating response for 'who committed this PR? #13192' using 'gpt-3.5-turbo' model
2024-07-19 15:35:03,724 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:35:03,889 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:35:03,889 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:35:03,889 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:35:03,891 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:35:04,763 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:35:04,765 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(:Issue {number: 13192})
RETURN u;
2024-07-19 15:35:04,766 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(:Issue {number: 13192})
RETURN u;
2024-07-19 15:35:05,465 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:35:05,468 - scripts.generate_response - INFO - Response generated successfully for 'who committed this PR? #13192' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who committed this PR? #13192', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(:Issue {number: 13192})\nRETURN u;\\Results: []'}
2024-07-19 15:35:05,469 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(:Issue {number: 13192})\nRETURN u;\\Results: []'}
2024-07-19 15:35:27,323 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:35:27,323 - wsgi - INFO - Generating response for 'who committed this PR? #13192' using 'gpt-4o' model
2024-07-19 15:35:27,323 - scripts.generate_response - INFO - Generating response for 'who committed this PR? #13192' using 'gpt-4o' model
2024-07-19 15:35:28,160 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:35:28,325 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:35:28,325 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 15:35:28,326 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:35:28,327 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:35:30,253 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:35:30,257 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (i:Issue {number: 13192})<-[:fixes]-(c:Commit)<-[:author]-(u:User)
RETURN u.name AS committer_name, u.email AS committer_email

2024-07-19 15:35:30,257 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (i:Issue {number: 13192})<-[:fixes]-(c:Commit)<-[:author]-(u:User)
RETURN u.name AS committer_name, u.email AS committer_email

2024-07-19 15:35:31,066 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:35:31,068 - scripts.generate_response - INFO - Response generated successfully for 'who committed this PR? #13192' using 'gpt-4o' model. 
Response: {'query': 'who committed this PR? #13192', 'response': "I don't know who committed this PR. #13192. Can I help with anything else?", 'context': 'Query: cypher\nMATCH (i:Issue {number: 13192})<-[:fixes]-(c:Commit)<-[:author]-(u:User)\nRETURN u.name AS committer_name, u.email AS committer_email\n\\Results: []'}
2024-07-19 15:35:31,069 - wsgi - INFO - {'result': "I don't know who committed this PR. #13192. Can I help with anything else?", 'context': 'Query: cypher\nMATCH (i:Issue {number: 13192})<-[:fixes]-(c:Commit)<-[:author]-(u:User)\nRETURN u.name AS committer_name, u.email AS committer_email\n\\Results: []'}
2024-07-19 15:36:15,845 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:36:15,845 - wsgi - INFO - Generating response for 'give me the list of files in this repo' using 'gpt-3.5-turbo' model
2024-07-19 15:36:15,845 - scripts.generate_response - INFO - Generating response for 'give me the list of files in this repo' using 'gpt-3.5-turbo' model
2024-07-19 15:36:16,693 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:36:16,860 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:36:16,860 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:36:16,860 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:36:16,862 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:36:17,583 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:36:17,587 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)-[:changed]->(f:File)
RETURN f.filename
2024-07-19 15:36:17,587 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)-[:changed]->(f:File)
RETURN f.filename
2024-07-19 15:36:19,461 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:36:19,465 - scripts.generate_response - INFO - Response generated successfully for 'give me the list of files in this repo' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me the list of files in this repo', 'response': 'The list of files in this repository includes README.md.', 'context': "Query: MATCH (c:Commit)-[:changed]->(f:File)\nRETURN f.filename\\Results: [{'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}]"}
2024-07-19 15:36:19,466 - wsgi - INFO - {'result': 'The list of files in this repository includes README.md.', 'context': "Query: MATCH (c:Commit)-[:changed]->(f:File)\nRETURN f.filename\\Results: [{'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}, {'f.filename': 'README.md'}]"}
2024-07-19 15:38:40,339 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:38:40,340 - wsgi - INFO - Generating response for 'who committed this commit? "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model
2024-07-19 15:38:40,340 - scripts.generate_response - INFO - Generating response for 'who committed this commit? "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model
2024-07-19 15:38:41,511 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:38:41,707 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:38:41,707 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:38:41,708 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:38:41,709 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:38:42,973 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:38:42,977 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN u;
2024-07-19 15:38:42,977 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN u;
2024-07-19 15:38:44,154 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:38:44,157 - scripts.generate_response - INFO - Response generated successfully for 'who committed this commit? "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who committed this commit? "73486cb5f5862a443b42c2aff68b82320218cbcd"', 'response': 'The commit "73486cb5f5862a443b42c2aff68b82320218cbcd" was committed by the user named Snoppy with the user login xiaoxianBoy.', 'context': 'Query: MATCH (u:User)-[:author]->(:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN u;\\Results: [{\'u\': {\'name\': \'Snoppy\', \'user_login\': \'xiaoxianBoy\', \'id\': \'xiaoxianBoy\', \'type\': \'User\', \'email\': \'\'}}]'}
2024-07-19 15:38:44,158 - wsgi - INFO - {'result': 'The commit "73486cb5f5862a443b42c2aff68b82320218cbcd" was committed by the user named Snoppy with the user login xiaoxianBoy.', 'context': 'Query: MATCH (u:User)-[:author]->(:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN u;\\Results: [{\'u\': {\'name\': \'Snoppy\', \'user_login\': \'xiaoxianBoy\', \'id\': \'xiaoxianBoy\', \'type\': \'User\', \'email\': \'\'}}]'}
2024-07-19 15:47:53,148 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:47:53,148 - wsgi - INFO - Generating response for 'was there any coauthor on that commit?' using 'gpt-3.5-turbo' model
2024-07-19 15:47:53,148 - scripts.generate_response - INFO - Generating response for 'was there any coauthor on that commit?' using 'gpt-3.5-turbo' model
2024-07-19 15:47:53,975 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:47:54,184 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:47:54,184 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:47:54,184 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:47:54,186 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:47:55,103 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:47:55,106 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit {abbreviatedOid: '0e6edd9'})-[:author]-(coauthor:User)
RETURN coauthor;
2024-07-19 15:47:55,107 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit {abbreviatedOid: '0e6edd9'})-[:author]-(coauthor:User)
RETURN coauthor;
2024-07-19 15:47:55,211 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 17, offset: 16} for query: "MATCH (:Commit {abbreviatedOid: '0e6edd9'})-[:author]-(coauthor:User)\nRETURN coauthor;"
2024-07-19 15:47:55,981 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:47:55,983 - scripts.generate_response - INFO - Response generated successfully for 'was there any coauthor on that commit?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'was there any coauthor on that commit?', 'response': "I don't know, can I help with anything else?", 'context': "Query: MATCH (:Commit {abbreviatedOid: '0e6edd9'})-[:author]-(coauthor:User)\nRETURN coauthor;\\Results: []"}
2024-07-19 15:47:55,984 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': "Query: MATCH (:Commit {abbreviatedOid: '0e6edd9'})-[:author]-(coauthor:User)\nRETURN coauthor;\\Results: []"}
2024-07-19 15:48:12,007 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:48:12,007 - wsgi - INFO - Generating response for 'was there any coauthor on commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:48:12,007 - scripts.generate_response - INFO - Generating response for 'was there any coauthor on commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:48:12,841 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:48:13,019 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:48:13,019 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:48:13,019 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:48:13,021 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:48:13,857 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:48:13,860 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit {abbreviatedOid: "73486cb"})-[:author]->(u:User)-[:author]->(:Commit)
RETURN COUNT(u) > 1 as coauthor_present
2024-07-19 15:48:13,861 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit)
RETURN COUNT(u) > 1 as coauthor_present
2024-07-19 15:48:14,025 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 17, offset: 16} for query: 'MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit)\nRETURN COUNT(u) > 1 as coauthor_present'
2024-07-19 15:48:14,997 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:48:14,999 - scripts.generate_response - INFO - Response generated successfully for 'was there any coauthor on commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'was there any coauthor on commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?', 'response': 'No, there was no coauthor on commit "73486cb5f5862a443b42c2aff68b82320218cbcd".', 'context': 'Query: MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit)\nRETURN COUNT(u) > 1 as coauthor_present\\Results: [{\'coauthor_present\': False}]'}
2024-07-19 15:48:15,000 - wsgi - INFO - {'result': 'No, there was no coauthor on commit "73486cb5f5862a443b42c2aff68b82320218cbcd".', 'context': 'Query: MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit)\nRETURN COUNT(u) > 1 as coauthor_present\\Results: [{\'coauthor_present\': False}]'}
2024-07-19 15:48:28,922 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:48:28,922 - wsgi - INFO - Generating response for 'was there any co-author on commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:48:28,922 - scripts.generate_response - INFO - Generating response for 'was there any co-author on commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:48:29,780 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:48:30,115 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:48:30,115 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:48:30,115 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:48:30,117 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:48:31,501 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:48:31,503 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit {abbreviatedOid: "73486cb"})-[:author]->(u:User)-[:author]->(:Commit {abbreviatedOid: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN COUNT(u) > 0 as co_author_exists
2024-07-19 15:48:31,504 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit {abbreviatedOid: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN COUNT(u) > 0 as co_author_exists
2024-07-19 15:48:31,623 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 17, offset: 16} for query: 'MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit {abbreviatedOid: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN COUNT(u) > 0 as co_author_exists'
2024-07-19 15:48:31,623 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 86, offset: 85} for query: 'MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit {abbreviatedOid: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN COUNT(u) > 0 as co_author_exists'
2024-07-19 15:48:32,689 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:48:32,692 - scripts.generate_response - INFO - Response generated successfully for 'was there any co-author on commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'was there any co-author on commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?', 'response': 'No, there was no co-author on the commit "73486cb5f5862a443b42c2aff68b82320218cbcd".', 'context': 'Query: MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit {abbreviatedOid: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN COUNT(u) > 0 as co_author_exists\\Results: [{\'co_author_exists\': False}]'}
2024-07-19 15:48:32,693 - wsgi - INFO - {'result': 'No, there was no co-author on the commit "73486cb5f5862a443b42c2aff68b82320218cbcd".', 'context': 'Query: MATCH (:Commit {abbreviatedOid: "73486cb"})<-[:author]-(u:User)-[:author]->(:Commit {abbreviatedOid: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN COUNT(u) > 0 as co_author_exists\\Results: [{\'co_author_exists\': False}]'}
2024-07-19 15:49:16,833 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:49:16,833 - wsgi - INFO - Generating response for 'give me a list of commits made by user xiaoxianBoy' using 'gpt-3.5-turbo' model
2024-07-19 15:49:16,833 - scripts.generate_response - INFO - Generating response for 'give me a list of commits made by user xiaoxianBoy' using 'gpt-3.5-turbo' model
2024-07-19 15:49:17,649 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:49:17,831 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:49:17,831 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:49:17,831 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:49:17,833 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:49:18,667 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:49:18,669 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {name: 'xiaoxianBoy'})-[:author]->(c:Commit)
RETURN c;
2024-07-19 15:49:18,669 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User {name: 'xiaoxianBoy'})-[:author]->(c:Commit)
RETURN c;
2024-07-19 15:49:19,687 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:49:19,690 - scripts.generate_response - INFO - Response generated successfully for 'give me a list of commits made by user xiaoxianBoy' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me a list of commits made by user xiaoxianBoy', 'response': "I don't know, can I help with anything else?", 'context': "Query: MATCH (u:User {name: 'xiaoxianBoy'})-[:author]->(c:Commit)\nRETURN c;\\Results: []"}
2024-07-19 15:49:19,691 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': "Query: MATCH (u:User {name: 'xiaoxianBoy'})-[:author]->(c:Commit)\nRETURN c;\\Results: []"}
2024-07-19 15:49:44,833 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:49:44,834 - wsgi - INFO - Generating response for 'when was commit "73486cb5f5862a443b42c2aff68b82320218cbcd" made?' using 'gpt-3.5-turbo' model
2024-07-19 15:49:44,834 - scripts.generate_response - INFO - Generating response for 'when was commit "73486cb5f5862a443b42c2aff68b82320218cbcd" made?' using 'gpt-3.5-turbo' model
2024-07-19 15:49:45,667 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:49:45,874 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:49:45,874 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:49:45,874 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:49:45,877 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:49:46,876 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:49:46,880 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN c.committedDate;
2024-07-19 15:49:46,880 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN c.committedDate;
2024-07-19 15:49:47,763 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:49:47,765 - scripts.generate_response - INFO - Response generated successfully for 'when was commit "73486cb5f5862a443b42c2aff68b82320218cbcd" made?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'when was commit "73486cb5f5862a443b42c2aff68b82320218cbcd" made?', 'response': 'Commit "73486cb5f5862a443b42c2aff68b82320218cbcd" was made on June 14, 2024 at 12:52:12 UTC.', 'context': 'Query: MATCH (c:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN c.committedDate;\\Results: [{\'c.committedDate\': \'2024-06-14T12:52:12Z\'}]'}
2024-07-19 15:49:47,766 - wsgi - INFO - {'result': 'Commit "73486cb5f5862a443b42c2aff68b82320218cbcd" was made on June 14, 2024 at 12:52:12 UTC.', 'context': 'Query: MATCH (c:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN c.committedDate;\\Results: [{\'c.committedDate\': \'2024-06-14T12:52:12Z\'}]'}
2024-07-19 15:50:12,974 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:50:12,974 - wsgi - INFO - Generating response for 'give me information about commit "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model
2024-07-19 15:50:12,974 - scripts.generate_response - INFO - Generating response for 'give me information about commit "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model
2024-07-19 15:50:13,791 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:50:13,972 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:50:13,972 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:50:13,972 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:50:13,974 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:50:15,082 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:50:15,085 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN u, c
2024-07-19 15:50:15,086 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN u, c
2024-07-19 15:50:17,013 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:50:17,016 - scripts.generate_response - INFO - Response generated successfully for 'give me information about commit "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me information about commit "73486cb5f5862a443b42c2aff68b82320218cbcd"', 'response': 'The commit with id "73486cb5f5862a443b42c2aff68b82320218cbcd" was authored by user Snoppy (username: xiaoxianBoy) on June 14, 2024, at 12:52:12 UTC. The commit message was "chore: fix link broken (#13192)" and it included 1 addition and 1 deletion. The commit fixed a broken link and updated a file in the packages/template-compiler/README.md.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN u, c\\Results: [{\'u\': {\'name\': \'Snoppy\', \'user_login\': \'xiaoxianBoy\', \'id\': \'xiaoxianBoy\', \'type\': \'User\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-06-14T12:52:12Z\', \'id\': \'73486cb5f5862a443b42c2aff68b82320218cbcd\', \'type\': \'Commit\', \'message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}}]'}
2024-07-19 15:50:17,017 - wsgi - INFO - {'result': 'The commit with id "73486cb5f5862a443b42c2aff68b82320218cbcd" was authored by user Snoppy (username: xiaoxianBoy) on June 14, 2024, at 12:52:12 UTC. The commit message was "chore: fix link broken (#13192)" and it included 1 addition and 1 deletion. The commit fixed a broken link and updated a file in the packages/template-compiler/README.md.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN u, c\\Results: [{\'u\': {\'name\': \'Snoppy\', \'user_login\': \'xiaoxianBoy\', \'id\': \'xiaoxianBoy\', \'type\': \'User\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-06-14T12:52:12Z\', \'id\': \'73486cb5f5862a443b42c2aff68b82320218cbcd\', \'type\': \'Commit\', \'message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}}]'}
2024-07-19 15:55:45,948 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:55:45,949 - wsgi - INFO - Generating response for 'give me the line changes made in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model
2024-07-19 15:55:45,949 - scripts.generate_response - INFO - Generating response for 'give me the line changes made in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model
2024-07-19 15:55:46,766 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:55:46,938 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:55:46,938 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:55:46,939 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:55:46,940 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:55:54,286 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:55:54,288 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
-[:changed]->(f:File)
RETURN f.additions, f.deletions
2024-07-19 15:55:54,288 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
-[:changed]->(f:File)
RETURN f.additions, f.deletions
2024-07-19 15:55:54,417 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 18, offset: 17} for query: 'MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN f.additions, f.deletions'
2024-07-19 15:55:55,494 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:55:55,497 - scripts.generate_response - INFO - Response generated successfully for 'give me the line changes made in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me the line changes made in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"', 'response': 'I\'m sorry, but I don\'t have the information about the line changes made in commit "73486cb5f5862a443b42c2aff68b82320218cbcd". Can I help with anything else?', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN f.additions, f.deletions\\Results: []'}
2024-07-19 15:55:55,498 - wsgi - INFO - {'result': 'I\'m sorry, but I don\'t have the information about the line changes made in commit "73486cb5f5862a443b42c2aff68b82320218cbcd". Can I help with anything else?', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN f.additions, f.deletions\\Results: []'}
2024-07-19 15:56:27,094 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:56:27,094 - wsgi - INFO - Generating response for 'what files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:56:27,094 - scripts.generate_response - INFO - Generating response for 'what files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:56:27,906 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:56:28,079 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:56:28,079 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:56:28,079 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:56:28,081 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:56:28,993 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:56:28,997 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(file:File)
RETURN file.filename
2024-07-19 15:56:28,997 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(file:File)
RETURN file.filename
2024-07-19 15:56:29,093 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 17, offset: 16} for query: 'MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(file:File)\nRETURN file.filename'
2024-07-19 15:56:29,803 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:56:29,806 - scripts.generate_response - INFO - Response generated successfully for 'what files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(file:File)\nRETURN file.filename\\Results: []'}
2024-07-19 15:56:29,807 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(file:File)\nRETURN file.filename\\Results: []'}
2024-07-19 15:58:38,187 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:58:38,187 - wsgi - INFO - Generating response for 'give me the name of the file that was changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:58:38,187 - scripts.generate_response - INFO - Generating response for 'give me the name of the file that was changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:58:39,017 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:58:39,204 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:58:39,204 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:58:39,204 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:58:39,205 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:58:39,966 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:58:39,969 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(f:File)
RETURN f.filename as changedFileName;
2024-07-19 15:58:39,970 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(f:File)
RETURN f.filename as changedFileName;
2024-07-19 15:58:40,102 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 17, offset: 16} for query: 'MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(f:File)\nRETURN f.filename as changedFileName;'
2024-07-19 15:58:40,921 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:58:40,924 - scripts.generate_response - INFO - Response generated successfully for 'give me the name of the file that was changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me the name of the file that was changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?', 'response': "I'm sorry, but I don't have the information to answer your question. Can I help with anything else?", 'context': 'Query: MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(f:File)\nRETURN f.filename as changedFileName;\\Results: []'}
2024-07-19 15:58:40,925 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer your question. Can I help with anything else?", 'context': 'Query: MATCH (:Commit {abbreviatedOid: "73486cb"})-[:changed]->(f:File)\nRETURN f.filename as changedFileName;\\Results: []'}
2024-07-19 15:59:04,415 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:59:04,416 - wsgi - INFO - Generating response for 'how many lines were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:59:04,416 - scripts.generate_response - INFO - Generating response for 'how many lines were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:59:05,253 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:59:05,439 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:59:05,440 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:59:05,440 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:59:05,441 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:59:06,480 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:59:06,484 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
MATCH (c)-[:changed]->(f:File)
RETURN SUM(f.additions + f.deletions) as total_lines_changed
2024-07-19 15:59:06,485 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
MATCH (c)-[:changed]->(f:File)
RETURN SUM(f.additions + f.deletions) as total_lines_changed
2024-07-19 15:59:06,631 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 18, offset: 17} for query: 'MATCH (c:Commit {abbreviatedOid: "73486cb"})\nMATCH (c)-[:changed]->(f:File)\nRETURN SUM(f.additions + f.deletions) as total_lines_changed'
2024-07-19 15:59:07,533 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:59:07,536 - scripts.generate_response - INFO - Response generated successfully for 'how many lines were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many lines were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?', 'response': 'In commit "73486cb5f5862a443b42c2aff68b82320218cbcd", a total of 0 lines were changed.', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\nMATCH (c)-[:changed]->(f:File)\nRETURN SUM(f.additions + f.deletions) as total_lines_changed\\Results: [{\'total_lines_changed\': 0}]'}
2024-07-19 15:59:07,537 - wsgi - INFO - {'result': 'In commit "73486cb5f5862a443b42c2aff68b82320218cbcd", a total of 0 lines were changed.', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\nMATCH (c)-[:changed]->(f:File)\nRETURN SUM(f.additions + f.deletions) as total_lines_changed\\Results: [{\'total_lines_changed\': 0}]'}
2024-07-19 15:59:34,999 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:59:34,999 - wsgi - INFO - Generating response for 'how many lines were added and removed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:59:34,999 - scripts.generate_response - INFO - Generating response for 'how many lines were added and removed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:59:35,851 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:59:36,040 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:59:36,040 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:59:36,040 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:59:36,042 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:59:37,037 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:59:37,040 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
-[:changed]->(f:File)
RETURN f.additions, f.deletions;
2024-07-19 15:59:37,041 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
-[:changed]->(f:File)
RETURN f.additions, f.deletions;
2024-07-19 15:59:37,146 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 18, offset: 17} for query: 'MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN f.additions, f.deletions;'
2024-07-19 15:59:37,846 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:59:37,849 - scripts.generate_response - INFO - Response generated successfully for 'how many lines were added and removed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many lines were added and removed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN f.additions, f.deletions;\\Results: []'}
2024-07-19 15:59:37,850 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN f.additions, f.deletions;\\Results: []'}
2024-07-19 15:59:50,911 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 15:59:50,911 - wsgi - INFO - Generating response for 'how many lines were updated in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:59:50,911 - scripts.generate_response - INFO - Generating response for 'how many lines were updated in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 15:59:51,788 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 15:59:51,966 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 15:59:51,966 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 15:59:51,966 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 15:59:51,968 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 15:59:52,840 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:59:52,842 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
-[:changed {change_type: "M"}]->(f:File)
RETURN SUM(f.additions + f.deletions) as total_lines_updated
2024-07-19 15:59:52,842 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
-[:changed {change_type: "M"}]->(f:File)
RETURN SUM(f.additions + f.deletions) as total_lines_updated
2024-07-19 15:59:52,984 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 18, offset: 17} for query: 'MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed {change_type: "M"}]->(f:File)\nRETURN SUM(f.additions + f.deletions) as total_lines_updated'
2024-07-19 15:59:53,962 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 15:59:53,965 - scripts.generate_response - INFO - Response generated successfully for 'how many lines were updated in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many lines were updated in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?', 'response': 'In commit "73486cb5f5862a443b42c2aff68b82320218cbcd", a total of 0 lines were updated.', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed {change_type: "M"}]->(f:File)\nRETURN SUM(f.additions + f.deletions) as total_lines_updated\\Results: [{\'total_lines_updated\': 0}]'}
2024-07-19 15:59:53,966 - wsgi - INFO - {'result': 'In commit "73486cb5f5862a443b42c2aff68b82320218cbcd", a total of 0 lines were updated.', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed {change_type: "M"}]->(f:File)\nRETURN SUM(f.additions + f.deletions) as total_lines_updated\\Results: [{\'total_lines_updated\': 0}]'}
2024-07-19 16:04:34,558 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:04:34,558 - wsgi - INFO - Generating response for 'how many files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 16:04:34,558 - scripts.generate_response - INFO - Generating response for 'how many files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model
2024-07-19 16:04:35,437 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:04:35,612 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:04:35,612 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:04:35,612 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:04:35,613 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:04:36,579 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:04:36,582 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
-[:changed]->(f:File)
RETURN COUNT(f) as numFilesChanged
2024-07-19 16:04:36,582 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {abbreviatedOid: "73486cb"})
-[:changed]->(f:File)
RETURN COUNT(f) as numFilesChanged
2024-07-19 16:04:36,681 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 18, offset: 17} for query: 'MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN COUNT(f) as numFilesChanged'
2024-07-19 16:04:37,649 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:04:37,653 - scripts.generate_response - INFO - Response generated successfully for 'how many files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd"?', 'response': 'No files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd".', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN COUNT(f) as numFilesChanged\\Results: [{\'numFilesChanged\': 0}]'}
2024-07-19 16:04:37,654 - wsgi - INFO - {'result': 'No files were changed in commit "73486cb5f5862a443b42c2aff68b82320218cbcd".', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "73486cb"})\n-[:changed]->(f:File)\nRETURN COUNT(f) as numFilesChanged\\Results: [{\'numFilesChanged\': 0}]'}
2024-07-19 16:05:28,535 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:05:28,535 - wsgi - INFO - Generating response for 'give me information about this pull request "13198"' using 'gpt-3.5-turbo' model
2024-07-19 16:05:28,535 - scripts.generate_response - INFO - Generating response for 'give me information about this pull request "13198"' using 'gpt-3.5-turbo' model
2024-07-19 16:05:29,392 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:05:29,576 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:05:29,576 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:05:29,576 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:05:29,577 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:05:30,448 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:05:30,451 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(:Issue)-[:fixes]->(:Issue)-[:impacted]->(f:File)
WHERE f.path = "13198"
RETURN u, f
2024-07-19 16:05:30,451 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is 
2024-07-19 16:05:30,451 - scripts.core.graph_cypher_chain_patch - INFO - No cypher statement generated
2024-07-19 16:05:31,053 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:05:31,057 - scripts.generate_response - INFO - Response generated successfully for 'give me information about this pull request "13198"' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me information about this pull request "13198"', 'response': 'I\'m sorry, but I don\'t have information about the pull request "13198". Can I help with anything else?', 'context': 'Query: \\Results: []'}
2024-07-19 16:05:31,058 - wsgi - INFO - {'result': 'I\'m sorry, but I don\'t have information about the pull request "13198". Can I help with anything else?', 'context': 'Query: \\Results: []'}
2024-07-19 16:10:09,789 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:10:09,790 - wsgi - INFO - Generating response for 'what is this repository about ?' using 'gpt-3.5-turbo' model
2024-07-19 16:10:09,790 - scripts.generate_response - INFO - Generating response for 'what is this repository about ?' using 'gpt-3.5-turbo' model
2024-07-19 16:10:10,620 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:10:10,833 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:10:10,833 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:10:10,833 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:10:10,835 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:10:11,736 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:10:11,739 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue)-[:introduced]->(n:Node)
RETURN i.title, i.body
2024-07-19 16:10:11,739 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue)<-[:introduced]-(n:Node)
RETURN i.title, i.body
2024-07-19 16:10:12,820 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:10:12,824 - scripts.generate_response - INFO - Response generated successfully for 'what is this repository about ?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is this repository about ?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (i:Issue)<-[:introduced]-(n:Node)\nRETURN i.title, i.body\\Results: [{\'i.title\': \'"Form inputs in a repeating element not updating computed properties as expected when an array is mutated"\', \'i.body\': \'"When using `push` to add objects to an array hooked up to a template element which contains form inputs, it appears that newly-created input elements are not bound in the same way as input elements created based on the initial data object provided when instantiating the Vue instance.\\n\\nThe newly-created input elements have the correct value after `push` is called, but typing in them doesnt cause a property computed on the array to change.\\n\\nThis commit has a functional test which demonstrates this:\\n\\nhttps://github.com/daines/vue/commit/b5ec5494ef3de5a787c1c39c40f9e3f868d5a06d\\n\\nStrangely, this test passes when run with casper but fails in the browser. (Ive tried Safari, Chrome, and Firefox.)\\n"\'}, {\'i.title\': \'"bug of function removeClass"\', \'i.body\': \'" vue.js(for dev) ,  Line 817, removeClass funciton,`else` branch\\n\\n```\\n             //assume el.className=red yellow green\\n             el.className = (  + red yellow green +  )\\n            .replace(  + yellow +  , )\\n            .trim()\\n            // will be redgreen,not red green \\n```\\n"\'}, {\'i.title\': \'"plugin interface spec"\', \'i.body\': \'"Verbose version\\n\\n``` js\\nvar vueTouch = require(vue-touch)\\nVue.use(vueTouch)\\n```\\n\\nShorthand equivalent\\n\\n``` js\\nVue.use(vue-touch)\\n```\\n\\nInside plugin...\\n\\n``` js\\nexports.install = function (Vue) {\\n    // Vue.require exposes internal modules\\n}\\n```\\n\\nThe `use` function...\\n\\n``` js\\nVue.use = function (plugin) {\\n    // if string require it\\n    plugin.install(Vue)\\n}\\n```\\n"\'}, {\'i.title\': \'"The plugin shorthand syntax does not (cannot?) work with Browserify"\', \'i.body\': \'"Browserify can only analyze static requires: https://github.com/substack/node-browserify/issues/377#issuecomment-16213577\\n"\'}, {\'i.title\': \'"Default value of paramAttributes options"\', \'i.body\': \'"If a `paramAttributes` option does not exists on the element, its default value is `0`:\\n\\nhttp://jsfiddle.net/H5BX5/\\n\\nI think it should be `null`, it would allow to easily define default options:\\n\\n``` js\\nVue.component({\\n    paramAttributes: [bar],\\n    created: function() {\\n        if (this.bar === null) this.bar = default value\\n    }\\n})\\n```\\n"\'}, {\'i.title\': \'"`dataAttributes` option"\', \'i.body\': \'"``` html\\n<component width="100" height="100"></component>\\n```\\n\\n``` js\\nVue.component(component, {\\n    dataAttributes: [width, height],\\n    ready: function () {\\n        console.log(this.width)\\n        console.log(this.height)\\n    }\\n})\\n```\\n\\nThis seems to be a better solution than `v-data`, which is confusing. `v-data` will likely be removed in the next release.\\n"\'}, {\'i.title\': \'"parent option in Vue.extend"\', \'i.body\': \'"http://jsfiddle.net/samtgarson/9pZPe/\\n"\'}, {\'i.title\': \'"Strange Behavior with Vue.extend() and components"\', \'i.body\': \'"When creating two classes extending Vue with the same component name, the last defined component shadows the previously defined component in another class.  Also, this shadowing component is visible in the Vue class.\\n\\nhttp://jsfiddle.net/lithiumjake/BfPdc/\\n"\'}, {\'i.title\': \'"The $on()’s callback is bound to the event object"\', \'i.body\': \'"``` js\\nvar vm = new Vue({\\n    created: function() {\\n        console.log(this === vm) // true\\n\\n        this.$watch(foo, function() {\\n            console.log(this === vm) // true\\n        })\\n\\n        this.$on(bar, function(value) {\\n            console.log(this === vm) // false\\n        })\\n    }\\n})\\n```\\n\\nShouldn’t `this` be the current VM here? Maybe the event could be passed as a second parameter.\\n"\'}, {\'i.title\': \'"How to stop click event from bubbling?"\', \'i.body\': \'"For DOM tree like this:\\n\\n``` jade\\n#outside(v-on=click: doOut)\\n  #inside(v-on=click: doIn)\\n```\\n\\nclicking `#inside` triggers `doOut` too, despite of `event.stopPropagation()`.\\nWhat is the right way to prevent events in Vue?\\n"\'}]'}
2024-07-19 16:10:12,824 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (i:Issue)<-[:introduced]-(n:Node)\nRETURN i.title, i.body\\Results: [{\'i.title\': \'"Form inputs in a repeating element not updating computed properties as expected when an array is mutated"\', \'i.body\': \'"When using `push` to add objects to an array hooked up to a template element which contains form inputs, it appears that newly-created input elements are not bound in the same way as input elements created based on the initial data object provided when instantiating the Vue instance.\\n\\nThe newly-created input elements have the correct value after `push` is called, but typing in them doesnt cause a property computed on the array to change.\\n\\nThis commit has a functional test which demonstrates this:\\n\\nhttps://github.com/daines/vue/commit/b5ec5494ef3de5a787c1c39c40f9e3f868d5a06d\\n\\nStrangely, this test passes when run with casper but fails in the browser. (Ive tried Safari, Chrome, and Firefox.)\\n"\'}, {\'i.title\': \'"bug of function removeClass"\', \'i.body\': \'" vue.js(for dev) ,  Line 817, removeClass funciton,`else` branch\\n\\n```\\n             //assume el.className=red yellow green\\n             el.className = (  + red yellow green +  )\\n            .replace(  + yellow +  , )\\n            .trim()\\n            // will be redgreen,not red green \\n```\\n"\'}, {\'i.title\': \'"plugin interface spec"\', \'i.body\': \'"Verbose version\\n\\n``` js\\nvar vueTouch = require(vue-touch)\\nVue.use(vueTouch)\\n```\\n\\nShorthand equivalent\\n\\n``` js\\nVue.use(vue-touch)\\n```\\n\\nInside plugin...\\n\\n``` js\\nexports.install = function (Vue) {\\n    // Vue.require exposes internal modules\\n}\\n```\\n\\nThe `use` function...\\n\\n``` js\\nVue.use = function (plugin) {\\n    // if string require it\\n    plugin.install(Vue)\\n}\\n```\\n"\'}, {\'i.title\': \'"The plugin shorthand syntax does not (cannot?) work with Browserify"\', \'i.body\': \'"Browserify can only analyze static requires: https://github.com/substack/node-browserify/issues/377#issuecomment-16213577\\n"\'}, {\'i.title\': \'"Default value of paramAttributes options"\', \'i.body\': \'"If a `paramAttributes` option does not exists on the element, its default value is `0`:\\n\\nhttp://jsfiddle.net/H5BX5/\\n\\nI think it should be `null`, it would allow to easily define default options:\\n\\n``` js\\nVue.component({\\n    paramAttributes: [bar],\\n    created: function() {\\n        if (this.bar === null) this.bar = default value\\n    }\\n})\\n```\\n"\'}, {\'i.title\': \'"`dataAttributes` option"\', \'i.body\': \'"``` html\\n<component width="100" height="100"></component>\\n```\\n\\n``` js\\nVue.component(component, {\\n    dataAttributes: [width, height],\\n    ready: function () {\\n        console.log(this.width)\\n        console.log(this.height)\\n    }\\n})\\n```\\n\\nThis seems to be a better solution than `v-data`, which is confusing. `v-data` will likely be removed in the next release.\\n"\'}, {\'i.title\': \'"parent option in Vue.extend"\', \'i.body\': \'"http://jsfiddle.net/samtgarson/9pZPe/\\n"\'}, {\'i.title\': \'"Strange Behavior with Vue.extend() and components"\', \'i.body\': \'"When creating two classes extending Vue with the same component name, the last defined component shadows the previously defined component in another class.  Also, this shadowing component is visible in the Vue class.\\n\\nhttp://jsfiddle.net/lithiumjake/BfPdc/\\n"\'}, {\'i.title\': \'"The $on()’s callback is bound to the event object"\', \'i.body\': \'"``` js\\nvar vm = new Vue({\\n    created: function() {\\n        console.log(this === vm) // true\\n\\n        this.$watch(foo, function() {\\n            console.log(this === vm) // true\\n        })\\n\\n        this.$on(bar, function(value) {\\n            console.log(this === vm) // false\\n        })\\n    }\\n})\\n```\\n\\nShouldn’t `this` be the current VM here? Maybe the event could be passed as a second parameter.\\n"\'}, {\'i.title\': \'"How to stop click event from bubbling?"\', \'i.body\': \'"For DOM tree like this:\\n\\n``` jade\\n#outside(v-on=click: doOut)\\n  #inside(v-on=click: doIn)\\n```\\n\\nclicking `#inside` triggers `doOut` too, despite of `event.stopPropagation()`.\\nWhat is the right way to prevent events in Vue?\\n"\'}]'}
2024-07-19 16:11:34,051 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:11:34,051 - wsgi - INFO - Generating response for 'what is the name of this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:11:34,051 - scripts.generate_response - INFO - Generating response for 'what is the name of this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:11:34,874 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:11:35,057 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:11:35,057 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:11:35,057 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:11:35,059 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:11:36,105 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:11:36,107 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "this_repo_id"})
RETURN "this_repo_name"
2024-07-19 16:11:36,107 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "this_repo_id"})
RETURN "this_repo_name"
2024-07-19 16:11:37,131 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:11:37,135 - scripts.generate_response - INFO - Response generated successfully for 'what is the name of this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the name of this repo?', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "this_repo_id"})\nRETURN "this_repo_name"\\Results: []'}
2024-07-19 16:11:37,136 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(:Node {id: "this_repo_id"})\nRETURN "this_repo_name"\\Results: []'}
2024-07-19 16:12:10,198 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:12:10,198 - wsgi - INFO - Generating response for 'how many commits are in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:12:10,198 - scripts.generate_response - INFO - Generating response for 'how many commits are in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:12:11,045 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:12:11,199 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:12:11,199 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:12:11,199 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:12:11,200 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:12:11,794 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:12:11,797 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit)
RETURN COUNT(*) as totalCommits;
2024-07-19 16:12:11,797 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit)
RETURN COUNT(*) as totalCommits;
2024-07-19 16:12:12,322 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:12:12,326 - scripts.generate_response - INFO - Response generated successfully for 'how many commits are in this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many commits are in this repo?', 'response': 'There are 3592 commits in this repository.', 'context': "Query: MATCH (:Commit)\nRETURN COUNT(*) as totalCommits;\\Results: [{'totalCommits': 3592}]"}
2024-07-19 16:12:12,327 - wsgi - INFO - {'result': 'There are 3592 commits in this repository.', 'context': "Query: MATCH (:Commit)\nRETURN COUNT(*) as totalCommits;\\Results: [{'totalCommits': 3592}]"}
2024-07-19 16:12:22,478 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:12:22,479 - wsgi - INFO - Generating response for 'who is the most active contributor?' using 'gpt-3.5-turbo' model
2024-07-19 16:12:22,479 - scripts.generate_response - INFO - Generating response for 'who is the most active contributor?' using 'gpt-3.5-turbo' model
2024-07-19 16:12:23,305 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:12:23,493 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:12:23,493 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:12:23,493 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:12:23,495 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:12:24,487 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:12:24,490 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
RETURN u.name, COUNT(c) AS commitCount
ORDER BY commitCount DESC
LIMIT 1;
2024-07-19 16:12:24,490 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
RETURN u.name, COUNT(c) AS commitCount
ORDER BY commitCount DESC
LIMIT 1;
2024-07-19 16:12:25,261 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:12:25,265 - scripts.generate_response - INFO - Response generated successfully for 'who is the most active contributor?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who is the most active contributor?', 'response': 'The most active contributor is Evan You with 2583 commits.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nRETURN u.name, COUNT(c) AS commitCount\nORDER BY commitCount DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'commitCount': 2583}]"}
2024-07-19 16:12:25,266 - wsgi - INFO - {'result': 'The most active contributor is Evan You with 2583 commits.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nRETURN u.name, COUNT(c) AS commitCount\nORDER BY commitCount DESC\nLIMIT 1;\\Results: [{'u.name': 'Evan You', 'commitCount': 2583}]"}
2024-07-19 16:12:41,488 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:12:41,488 - wsgi - INFO - Generating response for 'can I see the dependency graph of this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:12:41,488 - scripts.generate_response - INFO - Generating response for 'can I see the dependency graph of this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:12:42,285 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:12:42,494 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:12:42,494 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:12:42,494 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:12:42,495 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:12:43,433 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:12:43,436 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)-[:changed]->(f:File)
RETURN c, f
2024-07-19 16:12:43,436 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)-[:changed]->(f:File)
RETURN c, f
2024-07-19 16:12:46,727 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:12:46,730 - scripts.generate_response - INFO - Response generated successfully for 'can I see the dependency graph of this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'can I see the dependency graph of this repo?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (c:Commit)-[:changed]->(f:File)\nRETURN c, f\\Results: [{\'c\': {\'additions\': 8, \'deletions\': 4, \'committedDate\': \'2023-12-31T09:32:08Z\', \'id\': \'0191d50c31404afb730cd2a60f4500c20771f32f\', \'type\': \'Commit\', \'message\': \'"chore: eol readme (#13142)"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 15942, \'deletions\': 2, \'committedDate\': \'2016-04-26T17:29:27Z\', \'id\': \'2792f3c95e0ce5e1166e0a677cedb55e37de9535\', \'type\': \'Commit\', \'message\': \'"readme, version, add dist files"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 142, \'deletions\': 1, \'committedDate\': \'2016-05-16T20:29:08Z\', \'id\': \'4618914ceb46c860fcaca09bc6130884befcfa14\', \'type\': \'Commit\', \'message\': \'"Added benchmark for SSR (#2842)\\n\\n- Includes `renderToStream` and `renderToString`\\r\\n- Added SSR benchmark README.md\\r\\n- Added npm `bench:ssr` script\\r\\n- Renders table with 1000 rows with 10 columns (10 thousand components)"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 14, \'deletions\': 20, \'committedDate\': \'2016-05-16T22:26:25Z\', \'id\': \'94d186b09564f6736a8e6dbabf299dfc04b95115\', \'type\': \'Commit\', \'message\': \'"update ssr benchmark"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2016-04-27T18:13:58Z\', \'id\': \'b756a6418df7fcb38060660f6f7508aeb2aea24e\', \'type\': \'Commit\', \'message\': \'"add links to readme [ci skip]"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 10, \'deletions\': 0, \'committedDate\': \'2016-06-10T23:38:58Z\', \'id\': \'687dcee0e3d53c62d9825669cb9b8c771193640b\', \'type\': \'Commit\', \'message\': \'"readme placeholders for packages"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2016-05-14T01:23:59Z\', \'id\': \'d3878c2292042ad7efed06ea670ec8fb89a1855a\', \'type\': \'Commit\', \'message\': \'"add coverage badge"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2016-06-08T15:28:16Z\', \'id\': \'0d598650c16268621436b1f71407ed617d24d786\', \'type\': \'Commit\', \'message\': \'"update coverage badge link"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 8, \'deletions\': 0, \'committedDate\': \'2016-06-28T09:45:01Z\', \'id\': \'8de6dec40feb3ec9bb0233cc2abbbc4ac056f0ad\', \'type\': \'Commit\', \'message\': \'"add a section about externals"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 17, \'deletions\': 3, \'committedDate\': \'2016-06-29T20:50:21Z\', \'id\': \'49213f337276a9e8a9d6e8cc28e2bea5d762174d\', \'type\': \'Commit\', \'message\': \'"update ssr docs on cache"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}]'}
2024-07-19 16:12:46,731 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (c:Commit)-[:changed]->(f:File)\nRETURN c, f\\Results: [{\'c\': {\'additions\': 8, \'deletions\': 4, \'committedDate\': \'2023-12-31T09:32:08Z\', \'id\': \'0191d50c31404afb730cd2a60f4500c20771f32f\', \'type\': \'Commit\', \'message\': \'"chore: eol readme (#13142)"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 15942, \'deletions\': 2, \'committedDate\': \'2016-04-26T17:29:27Z\', \'id\': \'2792f3c95e0ce5e1166e0a677cedb55e37de9535\', \'type\': \'Commit\', \'message\': \'"readme, version, add dist files"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 142, \'deletions\': 1, \'committedDate\': \'2016-05-16T20:29:08Z\', \'id\': \'4618914ceb46c860fcaca09bc6130884befcfa14\', \'type\': \'Commit\', \'message\': \'"Added benchmark for SSR (#2842)\\n\\n- Includes `renderToStream` and `renderToString`\\r\\n- Added SSR benchmark README.md\\r\\n- Added npm `bench:ssr` script\\r\\n- Renders table with 1000 rows with 10 columns (10 thousand components)"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 14, \'deletions\': 20, \'committedDate\': \'2016-05-16T22:26:25Z\', \'id\': \'94d186b09564f6736a8e6dbabf299dfc04b95115\', \'type\': \'Commit\', \'message\': \'"update ssr benchmark"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2016-04-27T18:13:58Z\', \'id\': \'b756a6418df7fcb38060660f6f7508aeb2aea24e\', \'type\': \'Commit\', \'message\': \'"add links to readme [ci skip]"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 10, \'deletions\': 0, \'committedDate\': \'2016-06-10T23:38:58Z\', \'id\': \'687dcee0e3d53c62d9825669cb9b8c771193640b\', \'type\': \'Commit\', \'message\': \'"readme placeholders for packages"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2016-05-14T01:23:59Z\', \'id\': \'d3878c2292042ad7efed06ea670ec8fb89a1855a\', \'type\': \'Commit\', \'message\': \'"add coverage badge"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2016-06-08T15:28:16Z\', \'id\': \'0d598650c16268621436b1f71407ed617d24d786\', \'type\': \'Commit\', \'message\': \'"update coverage badge link"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 8, \'deletions\': 0, \'committedDate\': \'2016-06-28T09:45:01Z\', \'id\': \'8de6dec40feb3ec9bb0233cc2abbbc4ac056f0ad\', \'type\': \'Commit\', \'message\': \'"add a section about externals"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}, {\'c\': {\'additions\': 17, \'deletions\': 3, \'committedDate\': \'2016-06-29T20:50:21Z\', \'id\': \'49213f337276a9e8a9d6e8cc28e2bea5d762174d\', \'type\': \'Commit\', \'message\': \'"update ssr docs on cache"\'}, \'f\': {\'path\': \'README.md\', \'filename\': \'README.md\', \'additions\': 10, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'README.md\', \'type\': \'File\'}}]'}
2024-07-19 16:13:36,462 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:13:36,463 - wsgi - INFO - Generating response for 'how often are prs made to this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:13:36,463 - scripts.generate_response - INFO - Generating response for 'how often are prs made to this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:13:37,288 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:13:37,450 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:13:37,450 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:13:37,450 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:13:37,452 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:13:38,156 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:13:38,159 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:assigned]->(:Issue {type: "PR"})-[:impacted]->(:Node)
RETURN count(*) as pr_count;
2024-07-19 16:13:38,159 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:assigned]->(:Issue {type: "PR"})-[:impacted]->(:Node)
RETURN count(*) as pr_count;
2024-07-19 16:13:39,192 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:13:39,196 - scripts.generate_response - INFO - Response generated successfully for 'how often are prs made to this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how often are prs made to this repo?', 'response': 'PRs are not frequently made to this repository as the count of PRs impacting nodes is 0.', 'context': 'Query: MATCH (:User)-[:assigned]->(:Issue {type: "PR"})-[:impacted]->(:Node)\nRETURN count(*) as pr_count;\\Results: [{\'pr_count\': 0}]'}
2024-07-19 16:13:39,197 - wsgi - INFO - {'result': 'PRs are not frequently made to this repository as the count of PRs impacting nodes is 0.', 'context': 'Query: MATCH (:User)-[:assigned]->(:Issue {type: "PR"})-[:impacted]->(:Node)\nRETURN count(*) as pr_count;\\Results: [{\'pr_count\': 0}]'}
2024-07-19 16:14:27,107 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:14:27,107 - wsgi - INFO - Generating response for 'what is the latest release of this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:14:27,107 - scripts.generate_response - INFO - Generating response for 'what is the latest release of this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:14:27,927 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:14:28,113 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:14:28,114 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:14:28,114 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:14:28,116 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:14:29,220 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:14:29,223 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)-[:introduced]->(i:Issue)
WHERE i.state = 'closed' AND i.closed_at <= '2024-07-19T16:14:28Z'
RETURN i.title, i.closed_at
ORDER BY i.closed_at DESC
LIMIT 1
2024-07-19 16:14:29,223 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)-[:introduced]->(i:Issue)
WHERE i.state = 'closed' AND i.closed_at <= '2024-07-19T16:14:28Z'
RETURN i.title, i.closed_at
ORDER BY i.closed_at DESC
LIMIT 1
2024-07-19 16:14:30,401 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:14:30,405 - scripts.generate_response - INFO - Response generated successfully for 'what is the latest release of this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the latest release of this repo?', 'response': 'The latest release of this repo is version 2.7.15, which introduced breaking changes about getCurrentScope and was closed on December 14, 2023.', 'context': 'Query: MATCH (c:Commit)-[:introduced]->(i:Issue)\nWHERE i.state = \'closed\' AND i.closed_at <= \'2024-07-19T16:14:28Z\'\nRETURN i.title, i.closed_at\nORDER BY i.closed_at DESC\nLIMIT 1\\Results: [{\'i.title\': \'"Version 2.7.15 introduced breaking changes about getCurrentScope"\', \'i.closed_at\': \'2023-12-14T01:21:46Z\'}]'}
2024-07-19 16:14:30,406 - wsgi - INFO - {'result': 'The latest release of this repo is version 2.7.15, which introduced breaking changes about getCurrentScope and was closed on December 14, 2023.', 'context': 'Query: MATCH (c:Commit)-[:introduced]->(i:Issue)\nWHERE i.state = \'closed\' AND i.closed_at <= \'2024-07-19T16:14:28Z\'\nRETURN i.title, i.closed_at\nORDER BY i.closed_at DESC\nLIMIT 1\\Results: [{\'i.title\': \'"Version 2.7.15 introduced breaking changes about getCurrentScope"\', \'i.closed_at\': \'2023-12-14T01:21:46Z\'}]'}
2024-07-19 16:15:11,501 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:15:11,501 - wsgi - INFO - Generating response for 'how many branches?' using 'gpt-3.5-turbo' model
2024-07-19 16:15:11,501 - scripts.generate_response - INFO - Generating response for 'how many branches?' using 'gpt-3.5-turbo' model
2024-07-19 16:15:12,359 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:15:12,643 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:15:12,643 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:15:12,643 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:15:12,645 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:15:13,849 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:15:13,851 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit)-[:parent_of]->(:Commit)
RETURN COUNT(*) as num_branches
2024-07-19 16:15:13,852 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit)-[:parent_of]->(:Commit)
RETURN COUNT(*) as num_branches
2024-07-19 16:15:14,306 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:15:14,326 - scripts.generate_response - INFO - Response generated successfully for 'how many branches?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many branches?', 'response': 'There are 3604 branches.', 'context': "Query: MATCH (:Commit)-[:parent_of]->(:Commit)\nRETURN COUNT(*) as num_branches\\Results: [{'num_branches': 3604}]"}
2024-07-19 16:15:14,328 - wsgi - INFO - {'result': 'There are 3604 branches.', 'context': "Query: MATCH (:Commit)-[:parent_of]->(:Commit)\nRETURN COUNT(*) as num_branches\\Results: [{'num_branches': 3604}]"}
2024-07-19 16:15:29,589 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:15:29,589 - wsgi - INFO - Generating response for 'are you sure about the number of branches?
' using 'gpt-3.5-turbo' model
2024-07-19 16:15:29,589 - scripts.generate_response - INFO - Generating response for 'are you sure about the number of branches?
' using 'gpt-3.5-turbo' model
2024-07-19 16:15:30,419 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:15:30,578 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:15:30,578 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:15:30,578 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:15:30,580 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:15:31,614 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:15:31,617 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:parent_of*]->(c2:Commit)
WHERE c.committedDate < datetime({datetime: '2024-07-19T16:15:30Z'})
RETURN u, c, c2
2024-07-19 16:15:31,617 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:parent_of*]->(c2:Commit)
WHERE c.committedDate < datetime({datetime: '2024-07-19T16:15:30Z'})
RETURN u, c, c2
2024-07-19 16:15:31,916 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T16:15:30Z")}
2024-07-19 16:15:31,916 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:15:33,292 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:15:34,081 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:15:34,084 - scripts.generate_response - INFO - Response generated successfully for 'are you sure about the number of branches?
' using 'gpt-3.5-turbo' model. 
Response: {'query': 'are you sure about the number of branches?\n', 'response': "I don't know, can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)-[:parent_of*]->(c2:Commit)\nWHERE c.committedDate < datetime({datetime: '2024-07-19T16:15:30Z'})\nRETURN u, c, c2\\Results: []"}
2024-07-19 16:15:34,085 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)-[:parent_of*]->(c2:Commit)\nWHERE c.committedDate < datetime({datetime: '2024-07-19T16:15:30Z'})\nRETURN u, c, c2\\Results: []"}
2024-07-19 16:15:52,816 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:15:52,816 - wsgi - INFO - Generating response for 'there are 15 branches in the repo, why did you say 3604?' using 'gpt-3.5-turbo' model
2024-07-19 16:15:52,816 - scripts.generate_response - INFO - Generating response for 'there are 15 branches in the repo, why did you say 3604?' using 'gpt-3.5-turbo' model
2024-07-19 16:15:53,642 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:15:53,804 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:15:53,804 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:15:53,804 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:15:53,805 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:15:54,742 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:15:54,744 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)
WHERE f.path = "repo"
RETURN COUNT(DISTINCT u) * COUNT(DISTINCT c) as result;
2024-07-19 16:15:54,745 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)
WHERE f.path = "repo"
RETURN COUNT(DISTINCT u) * COUNT(DISTINCT c) as result;
2024-07-19 16:15:55,782 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:15:55,787 - scripts.generate_response - INFO - Response generated successfully for 'there are 15 branches in the repo, why did you say 3604?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'there are 15 branches in the repo, why did you say 3604?', 'response': "I'm sorry, but based on the provided context, the query result is 0, not 3604. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nWHERE f.path = "repo"\nRETURN COUNT(DISTINCT u) * COUNT(DISTINCT c) as result;\\Results: [{\'result\': 0}]'}
2024-07-19 16:15:55,787 - wsgi - INFO - {'result': "I'm sorry, but based on the provided context, the query result is 0, not 3604. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nWHERE f.path = "repo"\nRETURN COUNT(DISTINCT u) * COUNT(DISTINCT c) as result;\\Results: [{\'result\': 0}]'}
2024-07-19 16:16:14,745 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:16:14,745 - wsgi - INFO - Generating response for 'what is the most active branch in the repo?
' using 'gpt-3.5-turbo' model
2024-07-19 16:16:14,745 - scripts.generate_response - INFO - Generating response for 'what is the most active branch in the repo?
' using 'gpt-3.5-turbo' model
2024-07-19 16:16:15,568 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:16:15,776 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:16:15,776 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:16:15,776 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:16:15,778 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:16:21,887 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:16:21,890 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)-[:parent_of*]->(c2:Commit)
WHERE NOT (c)-[:parent_of]->()
RETURN c, COUNT(c2) as activity
ORDER BY activity DESC
LIMIT 1
2024-07-19 16:16:21,891 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)-[:parent_of*]->(c2:Commit)
WHERE NOT (c)-[:parent_of]->()
RETURN c, COUNT(c2) as activity
ORDER BY activity DESC
LIMIT 1
2024-07-19 16:16:22,973 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:16:22,976 - scripts.generate_response - INFO - Response generated successfully for 'what is the most active branch in the repo?
' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the most active branch in the repo?\n', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (c:Commit)-[:parent_of*]->(c2:Commit)\nWHERE NOT (c)-[:parent_of]->()\nRETURN c, COUNT(c2) as activity\nORDER BY activity DESC\nLIMIT 1\\Results: []'}
2024-07-19 16:16:22,977 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (c:Commit)-[:parent_of*]->(c2:Commit)\nWHERE NOT (c)-[:parent_of]->()\nRETURN c, COUNT(c2) as activity\nORDER BY activity DESC\nLIMIT 1\\Results: []'}
2024-07-19 16:16:37,145 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:16:37,145 - wsgi - INFO - Generating response for 'what is the most common commit type message?' using 'gpt-3.5-turbo' model
2024-07-19 16:16:37,145 - scripts.generate_response - INFO - Generating response for 'what is the most common commit type message?' using 'gpt-3.5-turbo' model
2024-07-19 16:16:37,992 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:16:38,182 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:16:38,183 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:16:38,183 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:16:38,184 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:16:39,284 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:16:39,288 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
RETURN c.type, COUNT(c.type)
ORDER BY COUNT(c.type) DESC
LIMIT 1;
2024-07-19 16:16:39,288 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
RETURN c.type, COUNT(c.type)
ORDER BY COUNT(c.type) DESC
LIMIT 1;
2024-07-19 16:16:39,903 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:16:39,906 - scripts.generate_response - INFO - Response generated successfully for 'what is the most common commit type message?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the most common commit type message?', 'response': "The most common commit type message is 'Commit' with a count of 3592.", 'context': "Query: MATCH (c:Commit)\nRETURN c.type, COUNT(c.type)\nORDER BY COUNT(c.type) DESC\nLIMIT 1;\\Results: [{'c.type': 'Commit', 'COUNT(c.type)': 3592}]"}
2024-07-19 16:16:39,907 - wsgi - INFO - {'result': "The most common commit type message is 'Commit' with a count of 3592.", 'context': "Query: MATCH (c:Commit)\nRETURN c.type, COUNT(c.type)\nORDER BY COUNT(c.type) DESC\nLIMIT 1;\\Results: [{'c.type': 'Commit', 'COUNT(c.type)': 3592}]"}
2024-07-19 16:16:49,367 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:16:49,367 - wsgi - INFO - Generating response for 'are you sure?' using 'gpt-3.5-turbo' model
2024-07-19 16:16:49,367 - scripts.generate_response - INFO - Generating response for 'are you sure?' using 'gpt-3.5-turbo' model
2024-07-19 16:16:50,153 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:16:50,330 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:16:50,330 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:16:50,330 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:16:50,331 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:16:51,730 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:16:51,733 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE i.closed_at < '2024-07-19T16:16:50Z'
RETURN u, c, i
2024-07-19 16:16:51,734 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE i.closed_at < '2024-07-19T16:16:50Z'
RETURN u, c, i
2024-07-19 16:16:52,607 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:16:52,611 - scripts.generate_response - INFO - Response generated successfully for 'are you sure?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'are you sure?', 'response': 'Yes, I am sure.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE i.closed_at < \'2024-07-19T16:16:50Z\'\nRETURN u, c, i\\Results: [{\'u\': {\'name\': \'不见月\', \'user_login\': \'nooooooom\', \'id\': \'nooooooom\', \'type\': \'User\', \'login\': \'nooooooom\', \'email\': \'\'}, \'c\': {\'additions\': 13, \'deletions\': 2, \'committedDate\': \'2022-08-23T01:22:45Z\', \'id\': \'e0b26c483a1ba407a818b1fcba1a439df24e84a8\', \'type\': \'Commit\', \'message\': \'"fix: fix parent of multi-nested HOC $el not updating (#12757)\\n\\nfix #12589"\'}, \'i\': {\'number\': 12589, \'closed_at\': \'2022-08-23T01:22:47Z\', \'created_at\': \'2022-06-29T15:28:00Z\', \'id\': 12589, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"`$el` in nested HOC wont change when the child components root element changes"\', \'body\': \'"### Version\\r\\n2.6.14\\r\\n\\r\\n### Reproduction link\\r\\n[codepen.io](https://codepen.io/twodogwang/pen/eYMYPrg)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nOpen link,click ` true ` then check the console\\r\\n\\r\\n### What is expected?\\r\\ncomponent-a `$el` as same as its `$vnode`s `elm` when component-c `data` changes\\r\\n\\r\\n### What is actually happening?\\r\\ncompoent-a `$el` wont change\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12589\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 2, \'deletions\': 2, \'committedDate\': \'2022-08-23T01:18:36Z\', \'id\': \'46ca7bcddc06c50796ccff82d8c45693f1f14f47\', \'type\': \'Commit\', \'message\': \'"fix(compiler-sfc): avoid deindent when lang is jsx/tsx\\n\\nfix #12755"\'}, \'i\': {\'number\': 12755, \'closed_at\': \'2022-08-23T01:19:16Z\', \'created_at\': \'2022-08-21T13:02:42Z\', \'id\': 12755, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"SyntaxError when tsx/jsx  and setup script are used together"\', \'body\': \'"### Version\\r\\n2.7.9\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/ivan-94/vue-jsx-setup)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\n- set .prettierrc "vueIndentScriptAndStyle"  to true\\r\\n- run `npm run serve`\\r\\n\\r\\n### What is expected?\\r\\nrun without issues\\r\\n\\r\\n### What is actually happening?\\r\\nSyntaxError: src/App.vue: Unterminated string constant\\r\\n\\r\\n---\\r\\nhttps://github.com/vuejs/vue/blob/15618888cb6aae2b6f0151b32c261b1fc19db1b8/packages/compiler-sfc/src/parseComponent.ts#L181\\r\\n\\r\\njsx/tsx script indent trim unexpected\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12755\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 64, \'deletions\': 8, \'committedDate\': \'2022-08-19T04:22:51Z\', \'id\': \'8521f9d3f63d26bde99b747f0cb14d0ac5ba5971\', \'type\': \'Commit\', \'message\': \'"fix(types): fix missing error for accessing undefined instance properties\\n\\nfix #12718"\'}, \'i\': {\'number\': 12718, \'closed_at\': \'2022-08-19T04:23:18Z\', \'created_at\': \'2022-07-29T12:23:29Z\', \'id\': 12718, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Defining unknown properties as exist properties is wrong"\', \'body\': \'"### Version\\r\\n2.7.8\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/johnsoncodehk/volar/issues/1350)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nThis issue was created first in Vetur & later fixed in @vuejs/composition-api as below\\r\\nhttps://github.com/vuejs/vetur/issues/2505 <br />\\r\\nhttps://github.com/vuejs/composition-api/issues/609\\r\\n\\r\\nRecently the same issue is created in Volar and closed mentioning common.ts definitions in vuejs/composition-api\\r\\nhttps://github.com/johnsoncodehk/volar/issues/1350\\r\\n\\r\\n### What is expected?\\r\\nError has to be displayed when unknown property or data in template (typescript code)\\r\\n\\r\\n### What is actually happening?\\r\\nNo error is displayed when unknown property or data in template (typescript code) due to \\r\\nexport type Data = { [key: string]: unknown }\\r\\nin types/common.d.ts\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12718\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 16, \'deletions\': 4, \'committedDate\': \'2022-08-18T10:14:50Z\', \'id\': \'7161176cd0dff10d65ab58e266018aff2660610f\', \'type\': \'Commit\', \'message\': \'"fix: fix effect scope tracking for manually created instances\\n\\nfix #12705"\'}, \'i\': {\'number\': 12705, \'closed_at\': \'2022-08-18T10:15:49Z\', \'created_at\': \'2022-07-27T15:13:33Z\', \'id\': 12705, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Computed properties on an instance can get tied to the active scope VM rather than the instance itself"\', \'body\': \'"### Version\\r\\n2.7.8\\r\\n\\r\\n### Reproduction link\\r\\n[jsfiddle.net/p0Leh19d/](https://jsfiddle.net/p0Leh19d/)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\n1. In the fiddle, hit the "increase X" button to see the watcher working.\\r\\n2. Click "Use new instance of component"\\r\\n3. Hit "increase X"\\r\\n4. The computed doesnt update\\r\\n\\r\\nIf you change the URL to Vue 2.6, the example does work.\\r\\n\\r\\nIn Vue 2.7.x, computed properties can get destroyed and stop working if their instance is created inside of another components `created`, but the instance is also used again by another component later.\\r\\n\\r\\n### What is expected?\\r\\nComputed properties should only be torn down by their own instance\\r\\n\\r\\n### What is actually happening?\\r\\nComputed properties are getting torn down by another instance destroying\\r\\n\\r\\n---\\r\\nTo me it looks like the conditional on [this line](https://github.com/vuejs/vue/blob/1d8b892fcd9edcef1feeed74ad586beabb9f6df2/src/core/observer/watcher.ts#L74) should be reversed: shouldnt it be `vm._scope || activeEffectScope`?\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12705\'}}, {\'u\': {\'name\': \'Alexander Lichter\', \'user_login\': \'manniL\', \'id\': \'manniL\', \'type\': \'User\', \'login\': \'manniL\', \'email\': \'github@lichter.io\'}, \'c\': {\'additions\': 103, \'deletions\': 2, \'committedDate\': \'2022-08-18T08:22:55Z\', \'id\': \'165a14a6c6c406176037465d2961259c5c980399\', \'type\': \'Commit\', \'message\': \'"fix(ssr): fix on-component directives rendering (#12661)\\n\\nfix #10733"\'}, \'i\': {\'number\': 10733, \'closed_at\': \'2022-08-18T08:22:56Z\', \'created_at\': \'2019-10-20T16:02:54Z\', \'id\': 10733, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"vue-server-renderer: directive not applied to imported component"\', \'body\': \'"### What problem does this feature solve?\\r\\nCurrently, SSR directives are not applied to used (sub-)components but only to HTML-tags and elements.\\r\\n\\r\\n### Reproduction\\r\\n\\r\\n```js\\r\\n// Step 1: Create a Vue instance\\r\\nconst Vue = require("vue");\\r\\n\\r\\nconst Test = {\\r\\n  template: `<div>This should be red</div>`\\r\\n}\\r\\n\\r\\nconst app = new Vue({\\r\\n  template: `\\r\\n  <div>\\r\\n    <Test v-make-red/>\\r\\n    <div v-make-red>This is red</div>\\r\\n  </div>\\r\\n  `,\\r\\n  components: {\\r\\n    Test\\r\\n  }\\r\\n});\\r\\n\\r\\nconst makeRed = (node, dir) => {\\r\\n  const style = node.data.style || (node.data.style = {});\\r\\n  if (Array.isArray(style)) {\\r\\n    style.push({ backgroundColor: "red" });\\r\\n  } else {\\r\\n    style.backgroundColor = "red";\\r\\n  }\\r\\n};\\r\\n\\r\\n// Step 2: Create a renderer\\r\\nconst renderer = require("vue-server-renderer").createRenderer({\\r\\n  directives: {\\r\\n    makeRed\\r\\n  }\\r\\n});\\r\\n\\r\\n// Step 3: Render the Vue instance to HTML\\r\\nrenderer.renderToString(app, (err, html) => {\\r\\n  if (err) throw err;\\r\\n  console.log(html);\\r\\n  // <div data-server-rendered="true"><div>This should be red</div> <div style="background-color:red;">This is red</div></div>\\r\\n  // But should include red background-color style for the first div as well\\r\\n});\\r\\n```\\r\\n\\r\\nRelated: https://github.com/nuxt/nuxt.js/issues/6575\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/10733\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 36, \'deletions\': 12, \'committedDate\': \'2023-12-06T07:10:49Z\', \'id\': \'08382f008016c3b3b93f84594266f2e191fee91d\', \'type\': \'Commit\', \'message\': \'"fix(props): should not unwrap props that are raw refs\\n\\nclose #12930"\'}, \'i\': {\'number\': 12930, \'closed_at\': \'2023-12-06T07:11:45Z\', \'created_at\': \'2023-01-16T02:44:53Z\', \'id\': 12930, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"[Bug] v2.7 props are unwrapped, the same doesnt hold true for v3."\', \'body\': \'"### Version\\r\\n2.7.14\\r\\n\\r\\n### Reproduction link\\r\\n[stackblitz.com](https://stackblitz.com/edit/vue2-vue-cli-jpxihu?file=src%2FApp.vue)\\r\\n\\r\\n### Steps to reproduce\\r\\n[In v2.7, props are unwrapped](https://stackblitz.com/edit/vue2-vue-cli-jpxihu?file=src%2FApp.vue).\\r\\n[The same doesnt hold true for v3](https://sfc.vuejs.org/#eNqNUUFugzAQ/MrKF4hEzB2lkao+oB/whcASQMG21oZWQvy9axOiKFWinOxdj2dndmbxaa2cRhSFOLiKOuuPSneDNeRhhhqbTuOX4Vqj9hm0GRA2sEBDZoCEPyY3eIBd+zIPReDlZwCl8TdCmK8cL/G8503ngHLoR5vuIBbAc/xIGrjxcYQ2DeCMJQ3uXAQNadIYk+xg2QX4onS4HPKbB5GJVdd+KK3sndFsMVKr64NTotiGKcFaQ61E6711RZ67pgoGeicNnXO+SRq17waU6Ib9icyPQ2JiJbI7jpybE9KeUNdISK84H6D/eDdjbGVb57sxPST0bgSWDOvclhJX/X3qsfJRSvS5phSBz6JK6m5KspVMMomcysuIz3Ja/gAMftx6).\\r\\n\\r\\n### What is expected?\\r\\nProps arent unwrapped.\\r\\n\\r\\n### What is actually happening?\\r\\nProps are unwrapped.\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12930\'}}, {\'u\': {\'name\': \'xonx\', \'user_login\': \'xonx4l\', \'id\': \'xonx4l\', \'type\': \'User\', \'login\': \'xonx4l\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2023-10-23T06:58:47Z\', \'id\': \'67c1d26cb0af3eb2db0a11fc7768a8299e7f7d58\', \'type\': \'Commit\', \'message\': \'"fix(types): correct serverPrefetch this type (#13068)\\n\\nclose #12488"\'}, \'i\': {\'number\': 12488, \'closed_at\': \'2023-10-23T06:58:48Z\', \'created_at\': \'2022-03-01T18:19:52Z\', \'id\': 12488, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"serverPrefetchs `this` type doesnt include component properties"\', \'body\': \'"### Version\\r\\n2.6.14\\r\\n\\r\\n### Reproduction link\\r\\n[codesandbox.io](https://codesandbox.io/s/vue-typescript-example-forked-yvrrbl?file=/src/App.vue:473-560)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nComment the `helloWorld` method, then uncomment it. This will trigger the type checking.\\r\\n\\r\\nYou should now see this syntax error on serverPrefetch code:\\r\\n![Screenshot 2022-03-01 at 19 17 18](https://user-images.githubusercontent.com/1819575/156225764-15f2d064-f73b-44c3-835b-202f4d784f39.png)\\r\\n\\r\\n### What is expected?\\r\\nmethods, props and data properties should be available inside serverPrefetchs `this` type.\\r\\n\\r\\n### What is actually happening?\\r\\n`serverPrefetch`s `this` is a generic Vue type that doesnt include current component info.\\r\\n\\r\\n---\\r\\nThis seems to be a leftover. This issue was fixed for multiple ComponentOptions with [this commit]( https://github.com/vuejs/vue/commit/db138e2254d71f6b96e033acf66ba43ad269841a#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38L34-L42).\\r\\n\\r\\nThen `ssrPrefetch` was added including the `this: V` type with [this commit](https://github.com/vuejs/vue/commit/d7a533d6f85aae52aed03202fa5ccb774f0cb2ec#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38R99) and further `serverPrefetch` kept it [this commit](https://github.com/vuejs/vue/commit/42fdf3f8378e5dc379808a4fa67b39c4a74ae191#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38R99).\\r\\n\\r\\nThis type is not needed:\\r\\n\\r\\n```diff\\r\\ndiff --git a/types/options.d.ts b/types/options.d.ts\\r\\n-  serverPrefetch?(this: V): Promise<void>;\\r\\n+  serverPrefetch?(): Promise<void>;\\r\\n```\\r\\n\\r\\nI got to this bug trying to use a Vuex mapped mutation inside serverPrefetch.\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12488\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 39, \'deletions\': 21, \'committedDate\': \'2022-07-04T02:56:36Z\', \'id\': \'e452e9d4368aaba173e8c942e5fd82f999cf65ae\', \'type\': \'Commit\', \'message\': \'"fix: export proxyRefs\\n\\nclose #12600"\'}, \'i\': {\'number\': 12600, \'closed_at\': \'2022-07-04T02:56:50Z\', \'created_at\': \'2022-07-02T06:14:31Z\', \'id\': 12600, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Vue 2.7 does not expose proxyRefs"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/vuejs/composition-api)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nWith composition-api, you could import `proxyRefs` and use it as a simpler replacement for reactive/shallowReactive to avoid various reactivity issues/limitations or just plain bugs in composition API. Can we get access to proxyRefs in Vue 2.7?\\r\\n\\r\\n```js\\r\\n// Does not work\\r\\nimport { proxyRefs } from vue\\r\\n\\r\\n// Works\\r\\nimport { proxyRefs } from @vue/composition-api\\r\\n```\\r\\n\\r\\n### What is expected?\\r\\nVue 2 exploses proxyRefs\\r\\n\\r\\n### What is actually happening?\\r\\nModule "vue" has no exported member proxyRefs\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12600\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 11, \'deletions\': 0, \'committedDate\': \'2022-07-04T02:39:36Z\', \'id\': \'bcb62d1a001125bfac91c1dd4f8bd51ac42b5a0f\', \'type\': \'Commit\', \'message\': \'"test: test case for #12597"\'}, \'i\': {\'number\': 12597, \'closed_at\': \'2022-07-04T02:33:44Z\', \'created_at\': \'2022-07-01T12:22:15Z\', \'id\': 12597, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"`shallowReactive` will unwrap `refs`"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[codesandbox.io](https://codesandbox.io/s/vue-v2-7-shallowreactive-bx2u4t?file=/src/index.js)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nSee the reproduction link above\\r\\n\\r\\n### What is expected?\\r\\nDoes not unwrap `refs`\\r\\n\\r\\n### What is actually happening?\\r\\nDoes unwrap `refs`\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12597\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 26, \'deletions\': 1, \'committedDate\': \'2022-07-04T02:37:22Z\', \'id\': \'ff5acb12cfa64f975f216a55aafa976b07052665\', \'type\': \'Commit\', \'message\': \'"fix: fix NaN comparison on state change\\n\\nfix #12595"\'}, \'i\': {\'number\': 12595, \'closed_at\': \'2022-07-04T02:39:50Z\', \'created_at\': \'2022-07-01T09:53:52Z\', \'id\': 12595, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Cannot assign to a NaN variable"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[codepen.io](https://codepen.io/andychyl/pen/KKowLWj)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\ndata() {\\r\\n  return {\\r\\n    test: NaN\\r\\n  }\\r\\n}\\r\\n\\r\\ncreated(){\\r\\n  this.test = 10\\r\\n  console.log(this.test) // output:NaN\\r\\n}\\r\\n\\r\\n### What is expected?\\r\\n10\\r\\n\\r\\n### What is actually happening?\\r\\nNaN\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12595\'}}]'}
2024-07-19 16:16:52,612 - wsgi - INFO - {'result': 'Yes, I am sure.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE i.closed_at < \'2024-07-19T16:16:50Z\'\nRETURN u, c, i\\Results: [{\'u\': {\'name\': \'不见月\', \'user_login\': \'nooooooom\', \'id\': \'nooooooom\', \'type\': \'User\', \'login\': \'nooooooom\', \'email\': \'\'}, \'c\': {\'additions\': 13, \'deletions\': 2, \'committedDate\': \'2022-08-23T01:22:45Z\', \'id\': \'e0b26c483a1ba407a818b1fcba1a439df24e84a8\', \'type\': \'Commit\', \'message\': \'"fix: fix parent of multi-nested HOC $el not updating (#12757)\\n\\nfix #12589"\'}, \'i\': {\'number\': 12589, \'closed_at\': \'2022-08-23T01:22:47Z\', \'created_at\': \'2022-06-29T15:28:00Z\', \'id\': 12589, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"`$el` in nested HOC wont change when the child components root element changes"\', \'body\': \'"### Version\\r\\n2.6.14\\r\\n\\r\\n### Reproduction link\\r\\n[codepen.io](https://codepen.io/twodogwang/pen/eYMYPrg)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nOpen link,click ` true ` then check the console\\r\\n\\r\\n### What is expected?\\r\\ncomponent-a `$el` as same as its `$vnode`s `elm` when component-c `data` changes\\r\\n\\r\\n### What is actually happening?\\r\\ncompoent-a `$el` wont change\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12589\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 2, \'deletions\': 2, \'committedDate\': \'2022-08-23T01:18:36Z\', \'id\': \'46ca7bcddc06c50796ccff82d8c45693f1f14f47\', \'type\': \'Commit\', \'message\': \'"fix(compiler-sfc): avoid deindent when lang is jsx/tsx\\n\\nfix #12755"\'}, \'i\': {\'number\': 12755, \'closed_at\': \'2022-08-23T01:19:16Z\', \'created_at\': \'2022-08-21T13:02:42Z\', \'id\': 12755, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"SyntaxError when tsx/jsx  and setup script are used together"\', \'body\': \'"### Version\\r\\n2.7.9\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/ivan-94/vue-jsx-setup)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\n- set .prettierrc "vueIndentScriptAndStyle"  to true\\r\\n- run `npm run serve`\\r\\n\\r\\n### What is expected?\\r\\nrun without issues\\r\\n\\r\\n### What is actually happening?\\r\\nSyntaxError: src/App.vue: Unterminated string constant\\r\\n\\r\\n---\\r\\nhttps://github.com/vuejs/vue/blob/15618888cb6aae2b6f0151b32c261b1fc19db1b8/packages/compiler-sfc/src/parseComponent.ts#L181\\r\\n\\r\\njsx/tsx script indent trim unexpected\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12755\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 64, \'deletions\': 8, \'committedDate\': \'2022-08-19T04:22:51Z\', \'id\': \'8521f9d3f63d26bde99b747f0cb14d0ac5ba5971\', \'type\': \'Commit\', \'message\': \'"fix(types): fix missing error for accessing undefined instance properties\\n\\nfix #12718"\'}, \'i\': {\'number\': 12718, \'closed_at\': \'2022-08-19T04:23:18Z\', \'created_at\': \'2022-07-29T12:23:29Z\', \'id\': 12718, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Defining unknown properties as exist properties is wrong"\', \'body\': \'"### Version\\r\\n2.7.8\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/johnsoncodehk/volar/issues/1350)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nThis issue was created first in Vetur & later fixed in @vuejs/composition-api as below\\r\\nhttps://github.com/vuejs/vetur/issues/2505 <br />\\r\\nhttps://github.com/vuejs/composition-api/issues/609\\r\\n\\r\\nRecently the same issue is created in Volar and closed mentioning common.ts definitions in vuejs/composition-api\\r\\nhttps://github.com/johnsoncodehk/volar/issues/1350\\r\\n\\r\\n### What is expected?\\r\\nError has to be displayed when unknown property or data in template (typescript code)\\r\\n\\r\\n### What is actually happening?\\r\\nNo error is displayed when unknown property or data in template (typescript code) due to \\r\\nexport type Data = { [key: string]: unknown }\\r\\nin types/common.d.ts\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12718\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 16, \'deletions\': 4, \'committedDate\': \'2022-08-18T10:14:50Z\', \'id\': \'7161176cd0dff10d65ab58e266018aff2660610f\', \'type\': \'Commit\', \'message\': \'"fix: fix effect scope tracking for manually created instances\\n\\nfix #12705"\'}, \'i\': {\'number\': 12705, \'closed_at\': \'2022-08-18T10:15:49Z\', \'created_at\': \'2022-07-27T15:13:33Z\', \'id\': 12705, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Computed properties on an instance can get tied to the active scope VM rather than the instance itself"\', \'body\': \'"### Version\\r\\n2.7.8\\r\\n\\r\\n### Reproduction link\\r\\n[jsfiddle.net/p0Leh19d/](https://jsfiddle.net/p0Leh19d/)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\n1. In the fiddle, hit the "increase X" button to see the watcher working.\\r\\n2. Click "Use new instance of component"\\r\\n3. Hit "increase X"\\r\\n4. The computed doesnt update\\r\\n\\r\\nIf you change the URL to Vue 2.6, the example does work.\\r\\n\\r\\nIn Vue 2.7.x, computed properties can get destroyed and stop working if their instance is created inside of another components `created`, but the instance is also used again by another component later.\\r\\n\\r\\n### What is expected?\\r\\nComputed properties should only be torn down by their own instance\\r\\n\\r\\n### What is actually happening?\\r\\nComputed properties are getting torn down by another instance destroying\\r\\n\\r\\n---\\r\\nTo me it looks like the conditional on [this line](https://github.com/vuejs/vue/blob/1d8b892fcd9edcef1feeed74ad586beabb9f6df2/src/core/observer/watcher.ts#L74) should be reversed: shouldnt it be `vm._scope || activeEffectScope`?\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12705\'}}, {\'u\': {\'name\': \'Alexander Lichter\', \'user_login\': \'manniL\', \'id\': \'manniL\', \'type\': \'User\', \'login\': \'manniL\', \'email\': \'github@lichter.io\'}, \'c\': {\'additions\': 103, \'deletions\': 2, \'committedDate\': \'2022-08-18T08:22:55Z\', \'id\': \'165a14a6c6c406176037465d2961259c5c980399\', \'type\': \'Commit\', \'message\': \'"fix(ssr): fix on-component directives rendering (#12661)\\n\\nfix #10733"\'}, \'i\': {\'number\': 10733, \'closed_at\': \'2022-08-18T08:22:56Z\', \'created_at\': \'2019-10-20T16:02:54Z\', \'id\': 10733, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"vue-server-renderer: directive not applied to imported component"\', \'body\': \'"### What problem does this feature solve?\\r\\nCurrently, SSR directives are not applied to used (sub-)components but only to HTML-tags and elements.\\r\\n\\r\\n### Reproduction\\r\\n\\r\\n```js\\r\\n// Step 1: Create a Vue instance\\r\\nconst Vue = require("vue");\\r\\n\\r\\nconst Test = {\\r\\n  template: `<div>This should be red</div>`\\r\\n}\\r\\n\\r\\nconst app = new Vue({\\r\\n  template: `\\r\\n  <div>\\r\\n    <Test v-make-red/>\\r\\n    <div v-make-red>This is red</div>\\r\\n  </div>\\r\\n  `,\\r\\n  components: {\\r\\n    Test\\r\\n  }\\r\\n});\\r\\n\\r\\nconst makeRed = (node, dir) => {\\r\\n  const style = node.data.style || (node.data.style = {});\\r\\n  if (Array.isArray(style)) {\\r\\n    style.push({ backgroundColor: "red" });\\r\\n  } else {\\r\\n    style.backgroundColor = "red";\\r\\n  }\\r\\n};\\r\\n\\r\\n// Step 2: Create a renderer\\r\\nconst renderer = require("vue-server-renderer").createRenderer({\\r\\n  directives: {\\r\\n    makeRed\\r\\n  }\\r\\n});\\r\\n\\r\\n// Step 3: Render the Vue instance to HTML\\r\\nrenderer.renderToString(app, (err, html) => {\\r\\n  if (err) throw err;\\r\\n  console.log(html);\\r\\n  // <div data-server-rendered="true"><div>This should be red</div> <div style="background-color:red;">This is red</div></div>\\r\\n  // But should include red background-color style for the first div as well\\r\\n});\\r\\n```\\r\\n\\r\\nRelated: https://github.com/nuxt/nuxt.js/issues/6575\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/10733\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 36, \'deletions\': 12, \'committedDate\': \'2023-12-06T07:10:49Z\', \'id\': \'08382f008016c3b3b93f84594266f2e191fee91d\', \'type\': \'Commit\', \'message\': \'"fix(props): should not unwrap props that are raw refs\\n\\nclose #12930"\'}, \'i\': {\'number\': 12930, \'closed_at\': \'2023-12-06T07:11:45Z\', \'created_at\': \'2023-01-16T02:44:53Z\', \'id\': 12930, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"[Bug] v2.7 props are unwrapped, the same doesnt hold true for v3."\', \'body\': \'"### Version\\r\\n2.7.14\\r\\n\\r\\n### Reproduction link\\r\\n[stackblitz.com](https://stackblitz.com/edit/vue2-vue-cli-jpxihu?file=src%2FApp.vue)\\r\\n\\r\\n### Steps to reproduce\\r\\n[In v2.7, props are unwrapped](https://stackblitz.com/edit/vue2-vue-cli-jpxihu?file=src%2FApp.vue).\\r\\n[The same doesnt hold true for v3](https://sfc.vuejs.org/#eNqNUUFugzAQ/MrKF4hEzB2lkao+oB/whcASQMG21oZWQvy9axOiKFWinOxdj2dndmbxaa2cRhSFOLiKOuuPSneDNeRhhhqbTuOX4Vqj9hm0GRA2sEBDZoCEPyY3eIBd+zIPReDlZwCl8TdCmK8cL/G8503ngHLoR5vuIBbAc/xIGrjxcYQ2DeCMJQ3uXAQNadIYk+xg2QX4onS4HPKbB5GJVdd+KK3sndFsMVKr64NTotiGKcFaQ61E6711RZ67pgoGeicNnXO+SRq17waU6Ib9icyPQ2JiJbI7jpybE9KeUNdISK84H6D/eDdjbGVb57sxPST0bgSWDOvclhJX/X3qsfJRSvS5phSBz6JK6m5KspVMMomcysuIz3Ja/gAMftx6).\\r\\n\\r\\n### What is expected?\\r\\nProps arent unwrapped.\\r\\n\\r\\n### What is actually happening?\\r\\nProps are unwrapped.\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12930\'}}, {\'u\': {\'name\': \'xonx\', \'user_login\': \'xonx4l\', \'id\': \'xonx4l\', \'type\': \'User\', \'login\': \'xonx4l\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2023-10-23T06:58:47Z\', \'id\': \'67c1d26cb0af3eb2db0a11fc7768a8299e7f7d58\', \'type\': \'Commit\', \'message\': \'"fix(types): correct serverPrefetch this type (#13068)\\n\\nclose #12488"\'}, \'i\': {\'number\': 12488, \'closed_at\': \'2023-10-23T06:58:48Z\', \'created_at\': \'2022-03-01T18:19:52Z\', \'id\': 12488, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"serverPrefetchs `this` type doesnt include component properties"\', \'body\': \'"### Version\\r\\n2.6.14\\r\\n\\r\\n### Reproduction link\\r\\n[codesandbox.io](https://codesandbox.io/s/vue-typescript-example-forked-yvrrbl?file=/src/App.vue:473-560)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nComment the `helloWorld` method, then uncomment it. This will trigger the type checking.\\r\\n\\r\\nYou should now see this syntax error on serverPrefetch code:\\r\\n![Screenshot 2022-03-01 at 19 17 18](https://user-images.githubusercontent.com/1819575/156225764-15f2d064-f73b-44c3-835b-202f4d784f39.png)\\r\\n\\r\\n### What is expected?\\r\\nmethods, props and data properties should be available inside serverPrefetchs `this` type.\\r\\n\\r\\n### What is actually happening?\\r\\n`serverPrefetch`s `this` is a generic Vue type that doesnt include current component info.\\r\\n\\r\\n---\\r\\nThis seems to be a leftover. This issue was fixed for multiple ComponentOptions with [this commit]( https://github.com/vuejs/vue/commit/db138e2254d71f6b96e033acf66ba43ad269841a#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38L34-L42).\\r\\n\\r\\nThen `ssrPrefetch` was added including the `this: V` type with [this commit](https://github.com/vuejs/vue/commit/d7a533d6f85aae52aed03202fa5ccb774f0cb2ec#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38R99) and further `serverPrefetch` kept it [this commit](https://github.com/vuejs/vue/commit/42fdf3f8378e5dc379808a4fa67b39c4a74ae191#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38R99).\\r\\n\\r\\nThis type is not needed:\\r\\n\\r\\n```diff\\r\\ndiff --git a/types/options.d.ts b/types/options.d.ts\\r\\n-  serverPrefetch?(this: V): Promise<void>;\\r\\n+  serverPrefetch?(): Promise<void>;\\r\\n```\\r\\n\\r\\nI got to this bug trying to use a Vuex mapped mutation inside serverPrefetch.\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12488\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 39, \'deletions\': 21, \'committedDate\': \'2022-07-04T02:56:36Z\', \'id\': \'e452e9d4368aaba173e8c942e5fd82f999cf65ae\', \'type\': \'Commit\', \'message\': \'"fix: export proxyRefs\\n\\nclose #12600"\'}, \'i\': {\'number\': 12600, \'closed_at\': \'2022-07-04T02:56:50Z\', \'created_at\': \'2022-07-02T06:14:31Z\', \'id\': 12600, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Vue 2.7 does not expose proxyRefs"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/vuejs/composition-api)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nWith composition-api, you could import `proxyRefs` and use it as a simpler replacement for reactive/shallowReactive to avoid various reactivity issues/limitations or just plain bugs in composition API. Can we get access to proxyRefs in Vue 2.7?\\r\\n\\r\\n```js\\r\\n// Does not work\\r\\nimport { proxyRefs } from vue\\r\\n\\r\\n// Works\\r\\nimport { proxyRefs } from @vue/composition-api\\r\\n```\\r\\n\\r\\n### What is expected?\\r\\nVue 2 exploses proxyRefs\\r\\n\\r\\n### What is actually happening?\\r\\nModule "vue" has no exported member proxyRefs\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12600\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 11, \'deletions\': 0, \'committedDate\': \'2022-07-04T02:39:36Z\', \'id\': \'bcb62d1a001125bfac91c1dd4f8bd51ac42b5a0f\', \'type\': \'Commit\', \'message\': \'"test: test case for #12597"\'}, \'i\': {\'number\': 12597, \'closed_at\': \'2022-07-04T02:33:44Z\', \'created_at\': \'2022-07-01T12:22:15Z\', \'id\': 12597, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"`shallowReactive` will unwrap `refs`"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[codesandbox.io](https://codesandbox.io/s/vue-v2-7-shallowreactive-bx2u4t?file=/src/index.js)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nSee the reproduction link above\\r\\n\\r\\n### What is expected?\\r\\nDoes not unwrap `refs`\\r\\n\\r\\n### What is actually happening?\\r\\nDoes unwrap `refs`\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12597\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 26, \'deletions\': 1, \'committedDate\': \'2022-07-04T02:37:22Z\', \'id\': \'ff5acb12cfa64f975f216a55aafa976b07052665\', \'type\': \'Commit\', \'message\': \'"fix: fix NaN comparison on state change\\n\\nfix #12595"\'}, \'i\': {\'number\': 12595, \'closed_at\': \'2022-07-04T02:39:50Z\', \'created_at\': \'2022-07-01T09:53:52Z\', \'id\': 12595, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Cannot assign to a NaN variable"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[codepen.io](https://codepen.io/andychyl/pen/KKowLWj)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\ndata() {\\r\\n  return {\\r\\n    test: NaN\\r\\n  }\\r\\n}\\r\\n\\r\\ncreated(){\\r\\n  this.test = 10\\r\\n  console.log(this.test) // output:NaN\\r\\n}\\r\\n\\r\\n### What is expected?\\r\\n10\\r\\n\\r\\n### What is actually happening?\\r\\nNaN\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12595\'}}]'}
2024-07-19 16:20:41,438 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:20:41,439 - wsgi - INFO - Generating response for 'what was the very first commit to this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:20:41,439 - scripts.generate_response - INFO - Generating response for 'what was the very first commit to this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:20:42,289 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:20:42,480 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:20:42,480 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:20:42,480 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:20:42,482 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:20:43,454 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:20:43,457 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
RETURN c
ORDER BY c.committedDate ASC
LIMIT 1
2024-07-19 16:20:43,457 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
RETURN c
ORDER BY c.committedDate ASC
LIMIT 1
2024-07-19 16:20:44,595 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:20:44,599 - scripts.generate_response - INFO - Response generated successfully for 'what was the very first commit to this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what was the very first commit to this repo?', 'response': 'The very first commit to this repository was made on April 11, 2016 at 02:47:28 UTC. The commit had 3671 additions and 0 deletions, with the commit message being "init".', 'context': 'Query: MATCH (c:Commit)\nRETURN c\nORDER BY c.committedDate ASC\nLIMIT 1\\Results: [{\'c\': {\'additions\': 3671, \'deletions\': 0, \'committedDate\': \'2016-04-11T02:47:28Z\', \'id\': \'a879ec06ef9504db8df2a19aac0d07609fe36131\', \'type\': \'Commit\', \'message\': \'"init"\'}}]'}
2024-07-19 16:20:44,600 - wsgi - INFO - {'result': 'The very first commit to this repository was made on April 11, 2016 at 02:47:28 UTC. The commit had 3671 additions and 0 deletions, with the commit message being "init".', 'context': 'Query: MATCH (c:Commit)\nRETURN c\nORDER BY c.committedDate ASC\nLIMIT 1\\Results: [{\'c\': {\'additions\': 3671, \'deletions\': 0, \'committedDate\': \'2016-04-11T02:47:28Z\', \'id\': \'a879ec06ef9504db8df2a19aac0d07609fe36131\', \'type\': \'Commit\', \'message\': \'"init"\'}}]'}
2024-07-19 16:20:58,167 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:20:58,168 - wsgi - INFO - Generating response for 'who made the commit?' using 'gpt-3.5-turbo' model
2024-07-19 16:20:58,168 - scripts.generate_response - INFO - Generating response for 'who made the commit?' using 'gpt-3.5-turbo' model
2024-07-19 16:20:58,962 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:20:59,154 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:20:59,154 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:20:59,154 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:20:59,156 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:20:59,949 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:20:59,953 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)
RETURN u;
2024-07-19 16:20:59,953 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)
RETURN u;
2024-07-19 16:21:01,031 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:21:01,035 - scripts.generate_response - INFO - Response generated successfully for 'who made the commit?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who made the commit?', 'response': 'The commits were made by Snoppy, Artfaith, and Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)\nRETURN u;\\Results: [{'u': {'name': 'Snoppy', 'user_login': 'xiaoxianBoy', 'id': 'xiaoxianBoy', 'type': 'User', 'email': ''}}, {'u': {'name': 'Artfaith', 'user_login': 'artshade', 'id': 'artshade', 'type': 'User', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}]"}
2024-07-19 16:21:01,035 - wsgi - INFO - {'result': 'The commits were made by Snoppy, Artfaith, and Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(:Commit)\nRETURN u;\\Results: [{'u': {'name': 'Snoppy', 'user_login': 'xiaoxianBoy', 'id': 'xiaoxianBoy', 'type': 'User', 'email': ''}}, {'u': {'name': 'Artfaith', 'user_login': 'artshade', 'id': 'artshade', 'type': 'User', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}, {'u': {'name': 'Evan You', 'user_login': 'yyx990803', 'id': 'yyx990803', 'type': 'User', 'login': 'yyx990803', 'email': ''}}]"}
2024-07-19 16:21:20,919 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:21:20,919 - wsgi - INFO - Generating response for 'how many pending issues are there in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:21:20,919 - scripts.generate_response - INFO - Generating response for 'how many pending issues are there in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:21:21,707 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:21:21,876 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:21:21,876 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:21:21,876 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:21:21,878 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:21:22,493 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:21:22,496 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue {state: "open"})
RETURN COUNT(i) as pending_issues;
2024-07-19 16:21:22,496 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue {state: "open"})
RETURN COUNT(i) as pending_issues;
2024-07-19 16:21:23,262 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:21:23,265 - scripts.generate_response - INFO - Response generated successfully for 'how many pending issues are there in this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many pending issues are there in this repo?', 'response': 'There are 356 pending issues in this repository.', 'context': 'Query: MATCH (i:Issue {state: "open"})\nRETURN COUNT(i) as pending_issues;\\Results: [{\'pending_issues\': 356}]'}
2024-07-19 16:21:23,266 - wsgi - INFO - {'result': 'There are 356 pending issues in this repository.', 'context': 'Query: MATCH (i:Issue {state: "open"})\nRETURN COUNT(i) as pending_issues;\\Results: [{\'pending_issues\': 356}]'}
2024-07-19 16:21:53,032 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:21:53,032 - wsgi - INFO - Generating response for 'what are the categories of these pending issues and what is the count for each category?
' using 'gpt-3.5-turbo' model
2024-07-19 16:21:53,032 - scripts.generate_response - INFO - Generating response for 'what are the categories of these pending issues and what is the count for each category?
' using 'gpt-3.5-turbo' model
2024-07-19 16:21:53,863 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:21:54,021 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:21:54,021 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:21:54,021 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:21:54,023 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:21:54,735 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:21:54,737 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(i:Issue {state: "pending"})
RETURN i.type, count(i) as count;
2024-07-19 16:21:54,738 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:assigned]->(i:Issue {state: "pending"})
RETURN i.type, count(i) as count;
2024-07-19 16:21:59,572 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:22:01,520 - scripts.generate_response - INFO - Response generated successfully for 'what are the categories of these pending issues and what is the count for each category?
' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what are the categories of these pending issues and what is the count for each category?\n', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue {state: "pending"})\nRETURN i.type, count(i) as count;\\Results: []'}
2024-07-19 16:22:01,520 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue {state: "pending"})\nRETURN i.type, count(i) as count;\\Results: []'}
2024-07-19 16:22:32,671 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:22:32,671 - wsgi - INFO - Generating response for 'which contributor has the most number of abandoned PRs?' using 'gpt-3.5-turbo' model
2024-07-19 16:22:32,672 - scripts.generate_response - INFO - Generating response for 'which contributor has the most number of abandoned PRs?' using 'gpt-3.5-turbo' model
2024-07-19 16:22:33,509 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:22:33,702 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:22:33,702 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:22:33,702 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:22:33,704 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:22:35,090 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:22:35,096 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(i:Issue {state: "closed"})-[:fixes]->(:Commit)-[:parent_of]->(:Commit)-[:fixes]->(abandonedPR:Issue {state: "open"})
RETURN u.name, COUNT(abandonedPR) AS abandonedPRs
ORDER BY abandonedPRs DESC
LIMIT 1
2024-07-19 16:22:35,097 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:assigned]->(i:Issue {state: "closed"})<-[:fixes]-(:Commit)-[:parent_of]->(:Commit)-[:fixes]->(abandonedPR:Issue {state: "open"})
RETURN u.name, COUNT(abandonedPR) AS abandonedPRs
ORDER BY abandonedPRs DESC
LIMIT 1
2024-07-19 16:22:35,938 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:22:35,941 - scripts.generate_response - INFO - Response generated successfully for 'which contributor has the most number of abandoned PRs?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'which contributor has the most number of abandoned PRs?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue {state: "closed"})<-[:fixes]-(:Commit)-[:parent_of]->(:Commit)-[:fixes]->(abandonedPR:Issue {state: "open"})\nRETURN u.name, COUNT(abandonedPR) AS abandonedPRs\nORDER BY abandonedPRs DESC\nLIMIT 1\\Results: []'}
2024-07-19 16:22:35,942 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue {state: "closed"})<-[:fixes]-(:Commit)-[:parent_of]->(:Commit)-[:fixes]->(abandonedPR:Issue {state: "open"})\nRETURN u.name, COUNT(abandonedPR) AS abandonedPRs\nORDER BY abandonedPRs DESC\nLIMIT 1\\Results: []'}
2024-07-19 16:24:02,896 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:24:02,896 - wsgi - INFO - Generating response for 'what is the most active fork from this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:24:02,896 - scripts.generate_response - INFO - Generating response for 'what is the most active fork from this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:24:03,757 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:24:03,944 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:24:03,944 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:24:03,944 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:24:03,946 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:24:05,133 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:24:05,136 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:parent_of*]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(n:Node)
RETURN n.id, COUNT(*) AS activity
ORDER BY activity DESC
LIMIT 1
2024-07-19 16:24:05,137 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:parent_of*]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(n:Node)
RETURN n.id, COUNT(*) AS activity
ORDER BY activity DESC
LIMIT 1
2024-07-19 16:24:06,003 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:24:06,006 - scripts.generate_response - INFO - Response generated successfully for 'what is the most active fork from this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the most active fork from this repo?', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:parent_of*]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(n:Node)\nRETURN n.id, COUNT(*) AS activity\nORDER BY activity DESC\nLIMIT 1\\Results: []'}
2024-07-19 16:24:06,007 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:parent_of*]->(:Commit)-[:changed]->(:File)-[:introduced]->(:Issue)-[:impacted]->(n:Node)\nRETURN n.id, COUNT(*) AS activity\nORDER BY activity DESC\nLIMIT 1\\Results: []'}
2024-07-19 16:28:06,054 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:28:06,054 - wsgi - INFO - Generating response for 'what is the license of this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:28:06,054 - scripts.generate_response - INFO - Generating response for 'what is the license of this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:28:06,876 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:28:07,045 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:28:07,045 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:28:07,045 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:28:07,047 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:28:07,870 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:28:07,872 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File {path: "LICENSE"})
RETURN LICENSE
2024-07-19 16:28:07,872 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File {path: "LICENSE"})
RETURN LICENSE
2024-07-19 16:28:07,962 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `LICENSE` not defined (line 2, column 8 (offset: 80))
"RETURN LICENSE"
        ^}
2024-07-19 16:28:07,963 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:28:08,691 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:28:08,774 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `LICENSE` not defined (line 2, column 8 (offset: 80))
"RETURN LICENSE"
        ^} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Variable `LICENSE` not defined (line 2, column 8 (offset: 80))
"RETURN LICENSE"
        ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `LICENSE` not defined (line 2, column 8 (offset: 80))
"RETURN LICENSE"
        ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Variable `LICENSE` not defined (line 2, column 8 (offset: 80))
"RETURN LICENSE"
        ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `LICENSE` not defined (line 2, column 8 (offset: 80))
"RETURN LICENSE"
        ^}
2024-07-19 16:28:09,264 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:28:09,267 - scripts.generate_response - INFO - Response generated successfully for 'what is the license of this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the license of this repo?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File {path: "LICENSE"})\nRETURN LICENSE\\Results: []'}
2024-07-19 16:28:09,268 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:changed]->(:File {path: "LICENSE"})\nRETURN LICENSE\\Results: []'}
2024-07-19 16:28:33,067 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:28:33,067 - wsgi - INFO - Generating response for 'what PR has the longest thread?' using 'gpt-3.5-turbo' model
2024-07-19 16:28:33,067 - scripts.generate_response - INFO - Generating response for 'what PR has the longest thread?' using 'gpt-3.5-turbo' model
2024-07-19 16:28:33,892 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:28:34,062 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:28:34,063 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:28:34,063 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:28:34,064 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:28:35,222 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:28:35,226 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:parent_of*]->(:Commit)-[:fixes]->(i:Issue)
RETURN i.title, COUNT(*) AS thread_length
ORDER BY thread_length DESC
LIMIT 1
2024-07-19 16:28:35,226 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:parent_of*]->(:Commit)-[:fixes]->(i:Issue)
RETURN i.title, COUNT(*) AS thread_length
ORDER BY thread_length DESC
LIMIT 1
2024-07-19 16:29:13,593 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:29:13,594 - wsgi - INFO - Generating response for 'what is the error?' using 'gpt-3.5-turbo' model
2024-07-19 16:29:13,594 - scripts.generate_response - INFO - Generating response for 'what is the error?' using 'gpt-3.5-turbo' model
2024-07-19 16:29:14,746 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:29:14,928 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:29:14,929 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:29:14,929 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:29:14,930 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:29:16,386 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:29:16,389 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE i.closed_at < '2024-07-19T16:29:14+00:00Z'
RETURN u, c, i
2024-07-19 16:29:16,389 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE i.closed_at < '2024-07-19T16:29:14+00:00Z'
RETURN u, c, i
2024-07-19 16:29:18,140 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:29:18,145 - scripts.generate_response - INFO - Response generated successfully for 'what is the error?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the error?', 'response': 'The error is related to the issue titled "Cannot assign to a NaN variable". The issue involves assigning a value to a variable that is NaN, resulting in unexpected behavior where the variable remains NaN instead of the expected value.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE i.closed_at < \'2024-07-19T16:29:14+00:00Z\'\nRETURN u, c, i\\Results: [{\'u\': {\'name\': \'不见月\', \'user_login\': \'nooooooom\', \'id\': \'nooooooom\', \'type\': \'User\', \'login\': \'nooooooom\', \'email\': \'\'}, \'c\': {\'additions\': 13, \'deletions\': 2, \'committedDate\': \'2022-08-23T01:22:45Z\', \'id\': \'e0b26c483a1ba407a818b1fcba1a439df24e84a8\', \'type\': \'Commit\', \'message\': \'"fix: fix parent of multi-nested HOC $el not updating (#12757)\\n\\nfix #12589"\'}, \'i\': {\'number\': 12589, \'closed_at\': \'2022-08-23T01:22:47Z\', \'created_at\': \'2022-06-29T15:28:00Z\', \'id\': 12589, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"`$el` in nested HOC wont change when the child components root element changes"\', \'body\': \'"### Version\\r\\n2.6.14\\r\\n\\r\\n### Reproduction link\\r\\n[codepen.io](https://codepen.io/twodogwang/pen/eYMYPrg)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nOpen link,click ` true ` then check the console\\r\\n\\r\\n### What is expected?\\r\\ncomponent-a `$el` as same as its `$vnode`s `elm` when component-c `data` changes\\r\\n\\r\\n### What is actually happening?\\r\\ncompoent-a `$el` wont change\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12589\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 2, \'deletions\': 2, \'committedDate\': \'2022-08-23T01:18:36Z\', \'id\': \'46ca7bcddc06c50796ccff82d8c45693f1f14f47\', \'type\': \'Commit\', \'message\': \'"fix(compiler-sfc): avoid deindent when lang is jsx/tsx\\n\\nfix #12755"\'}, \'i\': {\'number\': 12755, \'closed_at\': \'2022-08-23T01:19:16Z\', \'created_at\': \'2022-08-21T13:02:42Z\', \'id\': 12755, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"SyntaxError when tsx/jsx  and setup script are used together"\', \'body\': \'"### Version\\r\\n2.7.9\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/ivan-94/vue-jsx-setup)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\n- set .prettierrc "vueIndentScriptAndStyle"  to true\\r\\n- run `npm run serve`\\r\\n\\r\\n### What is expected?\\r\\nrun without issues\\r\\n\\r\\n### What is actually happening?\\r\\nSyntaxError: src/App.vue: Unterminated string constant\\r\\n\\r\\n---\\r\\nhttps://github.com/vuejs/vue/blob/15618888cb6aae2b6f0151b32c261b1fc19db1b8/packages/compiler-sfc/src/parseComponent.ts#L181\\r\\n\\r\\njsx/tsx script indent trim unexpected\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12755\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 64, \'deletions\': 8, \'committedDate\': \'2022-08-19T04:22:51Z\', \'id\': \'8521f9d3f63d26bde99b747f0cb14d0ac5ba5971\', \'type\': \'Commit\', \'message\': \'"fix(types): fix missing error for accessing undefined instance properties\\n\\nfix #12718"\'}, \'i\': {\'number\': 12718, \'closed_at\': \'2022-08-19T04:23:18Z\', \'created_at\': \'2022-07-29T12:23:29Z\', \'id\': 12718, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Defining unknown properties as exist properties is wrong"\', \'body\': \'"### Version\\r\\n2.7.8\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/johnsoncodehk/volar/issues/1350)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nThis issue was created first in Vetur & later fixed in @vuejs/composition-api as below\\r\\nhttps://github.com/vuejs/vetur/issues/2505 <br />\\r\\nhttps://github.com/vuejs/composition-api/issues/609\\r\\n\\r\\nRecently the same issue is created in Volar and closed mentioning common.ts definitions in vuejs/composition-api\\r\\nhttps://github.com/johnsoncodehk/volar/issues/1350\\r\\n\\r\\n### What is expected?\\r\\nError has to be displayed when unknown property or data in template (typescript code)\\r\\n\\r\\n### What is actually happening?\\r\\nNo error is displayed when unknown property or data in template (typescript code) due to \\r\\nexport type Data = { [key: string]: unknown }\\r\\nin types/common.d.ts\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12718\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 16, \'deletions\': 4, \'committedDate\': \'2022-08-18T10:14:50Z\', \'id\': \'7161176cd0dff10d65ab58e266018aff2660610f\', \'type\': \'Commit\', \'message\': \'"fix: fix effect scope tracking for manually created instances\\n\\nfix #12705"\'}, \'i\': {\'number\': 12705, \'closed_at\': \'2022-08-18T10:15:49Z\', \'created_at\': \'2022-07-27T15:13:33Z\', \'id\': 12705, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Computed properties on an instance can get tied to the active scope VM rather than the instance itself"\', \'body\': \'"### Version\\r\\n2.7.8\\r\\n\\r\\n### Reproduction link\\r\\n[jsfiddle.net/p0Leh19d/](https://jsfiddle.net/p0Leh19d/)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\n1. In the fiddle, hit the "increase X" button to see the watcher working.\\r\\n2. Click "Use new instance of component"\\r\\n3. Hit "increase X"\\r\\n4. The computed doesnt update\\r\\n\\r\\nIf you change the URL to Vue 2.6, the example does work.\\r\\n\\r\\nIn Vue 2.7.x, computed properties can get destroyed and stop working if their instance is created inside of another components `created`, but the instance is also used again by another component later.\\r\\n\\r\\n### What is expected?\\r\\nComputed properties should only be torn down by their own instance\\r\\n\\r\\n### What is actually happening?\\r\\nComputed properties are getting torn down by another instance destroying\\r\\n\\r\\n---\\r\\nTo me it looks like the conditional on [this line](https://github.com/vuejs/vue/blob/1d8b892fcd9edcef1feeed74ad586beabb9f6df2/src/core/observer/watcher.ts#L74) should be reversed: shouldnt it be `vm._scope || activeEffectScope`?\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12705\'}}, {\'u\': {\'name\': \'Alexander Lichter\', \'user_login\': \'manniL\', \'id\': \'manniL\', \'type\': \'User\', \'login\': \'manniL\', \'email\': \'github@lichter.io\'}, \'c\': {\'additions\': 103, \'deletions\': 2, \'committedDate\': \'2022-08-18T08:22:55Z\', \'id\': \'165a14a6c6c406176037465d2961259c5c980399\', \'type\': \'Commit\', \'message\': \'"fix(ssr): fix on-component directives rendering (#12661)\\n\\nfix #10733"\'}, \'i\': {\'number\': 10733, \'closed_at\': \'2022-08-18T08:22:56Z\', \'created_at\': \'2019-10-20T16:02:54Z\', \'id\': 10733, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"vue-server-renderer: directive not applied to imported component"\', \'body\': \'"### What problem does this feature solve?\\r\\nCurrently, SSR directives are not applied to used (sub-)components but only to HTML-tags and elements.\\r\\n\\r\\n### Reproduction\\r\\n\\r\\n```js\\r\\n// Step 1: Create a Vue instance\\r\\nconst Vue = require("vue");\\r\\n\\r\\nconst Test = {\\r\\n  template: `<div>This should be red</div>`\\r\\n}\\r\\n\\r\\nconst app = new Vue({\\r\\n  template: `\\r\\n  <div>\\r\\n    <Test v-make-red/>\\r\\n    <div v-make-red>This is red</div>\\r\\n  </div>\\r\\n  `,\\r\\n  components: {\\r\\n    Test\\r\\n  }\\r\\n});\\r\\n\\r\\nconst makeRed = (node, dir) => {\\r\\n  const style = node.data.style || (node.data.style = {});\\r\\n  if (Array.isArray(style)) {\\r\\n    style.push({ backgroundColor: "red" });\\r\\n  } else {\\r\\n    style.backgroundColor = "red";\\r\\n  }\\r\\n};\\r\\n\\r\\n// Step 2: Create a renderer\\r\\nconst renderer = require("vue-server-renderer").createRenderer({\\r\\n  directives: {\\r\\n    makeRed\\r\\n  }\\r\\n});\\r\\n\\r\\n// Step 3: Render the Vue instance to HTML\\r\\nrenderer.renderToString(app, (err, html) => {\\r\\n  if (err) throw err;\\r\\n  console.log(html);\\r\\n  // <div data-server-rendered="true"><div>This should be red</div> <div style="background-color:red;">This is red</div></div>\\r\\n  // But should include red background-color style for the first div as well\\r\\n});\\r\\n```\\r\\n\\r\\nRelated: https://github.com/nuxt/nuxt.js/issues/6575\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/10733\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 36, \'deletions\': 12, \'committedDate\': \'2023-12-06T07:10:49Z\', \'id\': \'08382f008016c3b3b93f84594266f2e191fee91d\', \'type\': \'Commit\', \'message\': \'"fix(props): should not unwrap props that are raw refs\\n\\nclose #12930"\'}, \'i\': {\'number\': 12930, \'closed_at\': \'2023-12-06T07:11:45Z\', \'created_at\': \'2023-01-16T02:44:53Z\', \'id\': 12930, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"[Bug] v2.7 props are unwrapped, the same doesnt hold true for v3."\', \'body\': \'"### Version\\r\\n2.7.14\\r\\n\\r\\n### Reproduction link\\r\\n[stackblitz.com](https://stackblitz.com/edit/vue2-vue-cli-jpxihu?file=src%2FApp.vue)\\r\\n\\r\\n### Steps to reproduce\\r\\n[In v2.7, props are unwrapped](https://stackblitz.com/edit/vue2-vue-cli-jpxihu?file=src%2FApp.vue).\\r\\n[The same doesnt hold true for v3](https://sfc.vuejs.org/#eNqNUUFugzAQ/MrKF4hEzB2lkao+oB/whcASQMG21oZWQvy9axOiKFWinOxdj2dndmbxaa2cRhSFOLiKOuuPSneDNeRhhhqbTuOX4Vqj9hm0GRA2sEBDZoCEPyY3eIBd+zIPReDlZwCl8TdCmK8cL/G8503ngHLoR5vuIBbAc/xIGrjxcYQ2DeCMJQ3uXAQNadIYk+xg2QX4onS4HPKbB5GJVdd+KK3sndFsMVKr64NTotiGKcFaQ61E6711RZ67pgoGeicNnXO+SRq17waU6Ib9icyPQ2JiJbI7jpybE9KeUNdISK84H6D/eDdjbGVb57sxPST0bgSWDOvclhJX/X3qsfJRSvS5phSBz6JK6m5KspVMMomcysuIz3Ja/gAMftx6).\\r\\n\\r\\n### What is expected?\\r\\nProps arent unwrapped.\\r\\n\\r\\n### What is actually happening?\\r\\nProps are unwrapped.\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12930\'}}, {\'u\': {\'name\': \'xonx\', \'user_login\': \'xonx4l\', \'id\': \'xonx4l\', \'type\': \'User\', \'login\': \'xonx4l\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2023-10-23T06:58:47Z\', \'id\': \'67c1d26cb0af3eb2db0a11fc7768a8299e7f7d58\', \'type\': \'Commit\', \'message\': \'"fix(types): correct serverPrefetch this type (#13068)\\n\\nclose #12488"\'}, \'i\': {\'number\': 12488, \'closed_at\': \'2023-10-23T06:58:48Z\', \'created_at\': \'2022-03-01T18:19:52Z\', \'id\': 12488, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"serverPrefetchs `this` type doesnt include component properties"\', \'body\': \'"### Version\\r\\n2.6.14\\r\\n\\r\\n### Reproduction link\\r\\n[codesandbox.io](https://codesandbox.io/s/vue-typescript-example-forked-yvrrbl?file=/src/App.vue:473-560)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nComment the `helloWorld` method, then uncomment it. This will trigger the type checking.\\r\\n\\r\\nYou should now see this syntax error on serverPrefetch code:\\r\\n![Screenshot 2022-03-01 at 19 17 18](https://user-images.githubusercontent.com/1819575/156225764-15f2d064-f73b-44c3-835b-202f4d784f39.png)\\r\\n\\r\\n### What is expected?\\r\\nmethods, props and data properties should be available inside serverPrefetchs `this` type.\\r\\n\\r\\n### What is actually happening?\\r\\n`serverPrefetch`s `this` is a generic Vue type that doesnt include current component info.\\r\\n\\r\\n---\\r\\nThis seems to be a leftover. This issue was fixed for multiple ComponentOptions with [this commit]( https://github.com/vuejs/vue/commit/db138e2254d71f6b96e033acf66ba43ad269841a#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38L34-L42).\\r\\n\\r\\nThen `ssrPrefetch` was added including the `this: V` type with [this commit](https://github.com/vuejs/vue/commit/d7a533d6f85aae52aed03202fa5ccb774f0cb2ec#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38R99) and further `serverPrefetch` kept it [this commit](https://github.com/vuejs/vue/commit/42fdf3f8378e5dc379808a4fa67b39c4a74ae191#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38R99).\\r\\n\\r\\nThis type is not needed:\\r\\n\\r\\n```diff\\r\\ndiff --git a/types/options.d.ts b/types/options.d.ts\\r\\n-  serverPrefetch?(this: V): Promise<void>;\\r\\n+  serverPrefetch?(): Promise<void>;\\r\\n```\\r\\n\\r\\nI got to this bug trying to use a Vuex mapped mutation inside serverPrefetch.\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12488\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 39, \'deletions\': 21, \'committedDate\': \'2022-07-04T02:56:36Z\', \'id\': \'e452e9d4368aaba173e8c942e5fd82f999cf65ae\', \'type\': \'Commit\', \'message\': \'"fix: export proxyRefs\\n\\nclose #12600"\'}, \'i\': {\'number\': 12600, \'closed_at\': \'2022-07-04T02:56:50Z\', \'created_at\': \'2022-07-02T06:14:31Z\', \'id\': 12600, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Vue 2.7 does not expose proxyRefs"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/vuejs/composition-api)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nWith composition-api, you could import `proxyRefs` and use it as a simpler replacement for reactive/shallowReactive to avoid various reactivity issues/limitations or just plain bugs in composition API. Can we get access to proxyRefs in Vue 2.7?\\r\\n\\r\\n```js\\r\\n// Does not work\\r\\nimport { proxyRefs } from vue\\r\\n\\r\\n// Works\\r\\nimport { proxyRefs } from @vue/composition-api\\r\\n```\\r\\n\\r\\n### What is expected?\\r\\nVue 2 exploses proxyRefs\\r\\n\\r\\n### What is actually happening?\\r\\nModule "vue" has no exported member proxyRefs\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12600\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 11, \'deletions\': 0, \'committedDate\': \'2022-07-04T02:39:36Z\', \'id\': \'bcb62d1a001125bfac91c1dd4f8bd51ac42b5a0f\', \'type\': \'Commit\', \'message\': \'"test: test case for #12597"\'}, \'i\': {\'number\': 12597, \'closed_at\': \'2022-07-04T02:33:44Z\', \'created_at\': \'2022-07-01T12:22:15Z\', \'id\': 12597, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"`shallowReactive` will unwrap `refs`"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[codesandbox.io](https://codesandbox.io/s/vue-v2-7-shallowreactive-bx2u4t?file=/src/index.js)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nSee the reproduction link above\\r\\n\\r\\n### What is expected?\\r\\nDoes not unwrap `refs`\\r\\n\\r\\n### What is actually happening?\\r\\nDoes unwrap `refs`\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12597\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 26, \'deletions\': 1, \'committedDate\': \'2022-07-04T02:37:22Z\', \'id\': \'ff5acb12cfa64f975f216a55aafa976b07052665\', \'type\': \'Commit\', \'message\': \'"fix: fix NaN comparison on state change\\n\\nfix #12595"\'}, \'i\': {\'number\': 12595, \'closed_at\': \'2022-07-04T02:39:50Z\', \'created_at\': \'2022-07-01T09:53:52Z\', \'id\': 12595, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Cannot assign to a NaN variable"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[codepen.io](https://codepen.io/andychyl/pen/KKowLWj)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\ndata() {\\r\\n  return {\\r\\n    test: NaN\\r\\n  }\\r\\n}\\r\\n\\r\\ncreated(){\\r\\n  this.test = 10\\r\\n  console.log(this.test) // output:NaN\\r\\n}\\r\\n\\r\\n### What is expected?\\r\\n10\\r\\n\\r\\n### What is actually happening?\\r\\nNaN\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12595\'}}]'}
2024-07-19 16:29:18,146 - wsgi - INFO - {'result': 'The error is related to the issue titled "Cannot assign to a NaN variable". The issue involves assigning a value to a variable that is NaN, resulting in unexpected behavior where the variable remains NaN instead of the expected value.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE i.closed_at < \'2024-07-19T16:29:14+00:00Z\'\nRETURN u, c, i\\Results: [{\'u\': {\'name\': \'不见月\', \'user_login\': \'nooooooom\', \'id\': \'nooooooom\', \'type\': \'User\', \'login\': \'nooooooom\', \'email\': \'\'}, \'c\': {\'additions\': 13, \'deletions\': 2, \'committedDate\': \'2022-08-23T01:22:45Z\', \'id\': \'e0b26c483a1ba407a818b1fcba1a439df24e84a8\', \'type\': \'Commit\', \'message\': \'"fix: fix parent of multi-nested HOC $el not updating (#12757)\\n\\nfix #12589"\'}, \'i\': {\'number\': 12589, \'closed_at\': \'2022-08-23T01:22:47Z\', \'created_at\': \'2022-06-29T15:28:00Z\', \'id\': 12589, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"`$el` in nested HOC wont change when the child components root element changes"\', \'body\': \'"### Version\\r\\n2.6.14\\r\\n\\r\\n### Reproduction link\\r\\n[codepen.io](https://codepen.io/twodogwang/pen/eYMYPrg)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nOpen link,click ` true ` then check the console\\r\\n\\r\\n### What is expected?\\r\\ncomponent-a `$el` as same as its `$vnode`s `elm` when component-c `data` changes\\r\\n\\r\\n### What is actually happening?\\r\\ncompoent-a `$el` wont change\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12589\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 2, \'deletions\': 2, \'committedDate\': \'2022-08-23T01:18:36Z\', \'id\': \'46ca7bcddc06c50796ccff82d8c45693f1f14f47\', \'type\': \'Commit\', \'message\': \'"fix(compiler-sfc): avoid deindent when lang is jsx/tsx\\n\\nfix #12755"\'}, \'i\': {\'number\': 12755, \'closed_at\': \'2022-08-23T01:19:16Z\', \'created_at\': \'2022-08-21T13:02:42Z\', \'id\': 12755, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"SyntaxError when tsx/jsx  and setup script are used together"\', \'body\': \'"### Version\\r\\n2.7.9\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/ivan-94/vue-jsx-setup)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\n- set .prettierrc "vueIndentScriptAndStyle"  to true\\r\\n- run `npm run serve`\\r\\n\\r\\n### What is expected?\\r\\nrun without issues\\r\\n\\r\\n### What is actually happening?\\r\\nSyntaxError: src/App.vue: Unterminated string constant\\r\\n\\r\\n---\\r\\nhttps://github.com/vuejs/vue/blob/15618888cb6aae2b6f0151b32c261b1fc19db1b8/packages/compiler-sfc/src/parseComponent.ts#L181\\r\\n\\r\\njsx/tsx script indent trim unexpected\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12755\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 64, \'deletions\': 8, \'committedDate\': \'2022-08-19T04:22:51Z\', \'id\': \'8521f9d3f63d26bde99b747f0cb14d0ac5ba5971\', \'type\': \'Commit\', \'message\': \'"fix(types): fix missing error for accessing undefined instance properties\\n\\nfix #12718"\'}, \'i\': {\'number\': 12718, \'closed_at\': \'2022-08-19T04:23:18Z\', \'created_at\': \'2022-07-29T12:23:29Z\', \'id\': 12718, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Defining unknown properties as exist properties is wrong"\', \'body\': \'"### Version\\r\\n2.7.8\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/johnsoncodehk/volar/issues/1350)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nThis issue was created first in Vetur & later fixed in @vuejs/composition-api as below\\r\\nhttps://github.com/vuejs/vetur/issues/2505 <br />\\r\\nhttps://github.com/vuejs/composition-api/issues/609\\r\\n\\r\\nRecently the same issue is created in Volar and closed mentioning common.ts definitions in vuejs/composition-api\\r\\nhttps://github.com/johnsoncodehk/volar/issues/1350\\r\\n\\r\\n### What is expected?\\r\\nError has to be displayed when unknown property or data in template (typescript code)\\r\\n\\r\\n### What is actually happening?\\r\\nNo error is displayed when unknown property or data in template (typescript code) due to \\r\\nexport type Data = { [key: string]: unknown }\\r\\nin types/common.d.ts\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12718\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 16, \'deletions\': 4, \'committedDate\': \'2022-08-18T10:14:50Z\', \'id\': \'7161176cd0dff10d65ab58e266018aff2660610f\', \'type\': \'Commit\', \'message\': \'"fix: fix effect scope tracking for manually created instances\\n\\nfix #12705"\'}, \'i\': {\'number\': 12705, \'closed_at\': \'2022-08-18T10:15:49Z\', \'created_at\': \'2022-07-27T15:13:33Z\', \'id\': 12705, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Computed properties on an instance can get tied to the active scope VM rather than the instance itself"\', \'body\': \'"### Version\\r\\n2.7.8\\r\\n\\r\\n### Reproduction link\\r\\n[jsfiddle.net/p0Leh19d/](https://jsfiddle.net/p0Leh19d/)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\n1. In the fiddle, hit the "increase X" button to see the watcher working.\\r\\n2. Click "Use new instance of component"\\r\\n3. Hit "increase X"\\r\\n4. The computed doesnt update\\r\\n\\r\\nIf you change the URL to Vue 2.6, the example does work.\\r\\n\\r\\nIn Vue 2.7.x, computed properties can get destroyed and stop working if their instance is created inside of another components `created`, but the instance is also used again by another component later.\\r\\n\\r\\n### What is expected?\\r\\nComputed properties should only be torn down by their own instance\\r\\n\\r\\n### What is actually happening?\\r\\nComputed properties are getting torn down by another instance destroying\\r\\n\\r\\n---\\r\\nTo me it looks like the conditional on [this line](https://github.com/vuejs/vue/blob/1d8b892fcd9edcef1feeed74ad586beabb9f6df2/src/core/observer/watcher.ts#L74) should be reversed: shouldnt it be `vm._scope || activeEffectScope`?\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12705\'}}, {\'u\': {\'name\': \'Alexander Lichter\', \'user_login\': \'manniL\', \'id\': \'manniL\', \'type\': \'User\', \'login\': \'manniL\', \'email\': \'github@lichter.io\'}, \'c\': {\'additions\': 103, \'deletions\': 2, \'committedDate\': \'2022-08-18T08:22:55Z\', \'id\': \'165a14a6c6c406176037465d2961259c5c980399\', \'type\': \'Commit\', \'message\': \'"fix(ssr): fix on-component directives rendering (#12661)\\n\\nfix #10733"\'}, \'i\': {\'number\': 10733, \'closed_at\': \'2022-08-18T08:22:56Z\', \'created_at\': \'2019-10-20T16:02:54Z\', \'id\': 10733, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"vue-server-renderer: directive not applied to imported component"\', \'body\': \'"### What problem does this feature solve?\\r\\nCurrently, SSR directives are not applied to used (sub-)components but only to HTML-tags and elements.\\r\\n\\r\\n### Reproduction\\r\\n\\r\\n```js\\r\\n// Step 1: Create a Vue instance\\r\\nconst Vue = require("vue");\\r\\n\\r\\nconst Test = {\\r\\n  template: `<div>This should be red</div>`\\r\\n}\\r\\n\\r\\nconst app = new Vue({\\r\\n  template: `\\r\\n  <div>\\r\\n    <Test v-make-red/>\\r\\n    <div v-make-red>This is red</div>\\r\\n  </div>\\r\\n  `,\\r\\n  components: {\\r\\n    Test\\r\\n  }\\r\\n});\\r\\n\\r\\nconst makeRed = (node, dir) => {\\r\\n  const style = node.data.style || (node.data.style = {});\\r\\n  if (Array.isArray(style)) {\\r\\n    style.push({ backgroundColor: "red" });\\r\\n  } else {\\r\\n    style.backgroundColor = "red";\\r\\n  }\\r\\n};\\r\\n\\r\\n// Step 2: Create a renderer\\r\\nconst renderer = require("vue-server-renderer").createRenderer({\\r\\n  directives: {\\r\\n    makeRed\\r\\n  }\\r\\n});\\r\\n\\r\\n// Step 3: Render the Vue instance to HTML\\r\\nrenderer.renderToString(app, (err, html) => {\\r\\n  if (err) throw err;\\r\\n  console.log(html);\\r\\n  // <div data-server-rendered="true"><div>This should be red</div> <div style="background-color:red;">This is red</div></div>\\r\\n  // But should include red background-color style for the first div as well\\r\\n});\\r\\n```\\r\\n\\r\\nRelated: https://github.com/nuxt/nuxt.js/issues/6575\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/10733\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 36, \'deletions\': 12, \'committedDate\': \'2023-12-06T07:10:49Z\', \'id\': \'08382f008016c3b3b93f84594266f2e191fee91d\', \'type\': \'Commit\', \'message\': \'"fix(props): should not unwrap props that are raw refs\\n\\nclose #12930"\'}, \'i\': {\'number\': 12930, \'closed_at\': \'2023-12-06T07:11:45Z\', \'created_at\': \'2023-01-16T02:44:53Z\', \'id\': 12930, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"[Bug] v2.7 props are unwrapped, the same doesnt hold true for v3."\', \'body\': \'"### Version\\r\\n2.7.14\\r\\n\\r\\n### Reproduction link\\r\\n[stackblitz.com](https://stackblitz.com/edit/vue2-vue-cli-jpxihu?file=src%2FApp.vue)\\r\\n\\r\\n### Steps to reproduce\\r\\n[In v2.7, props are unwrapped](https://stackblitz.com/edit/vue2-vue-cli-jpxihu?file=src%2FApp.vue).\\r\\n[The same doesnt hold true for v3](https://sfc.vuejs.org/#eNqNUUFugzAQ/MrKF4hEzB2lkao+oB/whcASQMG21oZWQvy9axOiKFWinOxdj2dndmbxaa2cRhSFOLiKOuuPSneDNeRhhhqbTuOX4Vqj9hm0GRA2sEBDZoCEPyY3eIBd+zIPReDlZwCl8TdCmK8cL/G8503ngHLoR5vuIBbAc/xIGrjxcYQ2DeCMJQ3uXAQNadIYk+xg2QX4onS4HPKbB5GJVdd+KK3sndFsMVKr64NTotiGKcFaQ61E6711RZ67pgoGeicNnXO+SRq17waU6Ib9icyPQ2JiJbI7jpybE9KeUNdISK84H6D/eDdjbGVb57sxPST0bgSWDOvclhJX/X3qsfJRSvS5phSBz6JK6m5KspVMMomcysuIz3Ja/gAMftx6).\\r\\n\\r\\n### What is expected?\\r\\nProps arent unwrapped.\\r\\n\\r\\n### What is actually happening?\\r\\nProps are unwrapped.\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12930\'}}, {\'u\': {\'name\': \'xonx\', \'user_login\': \'xonx4l\', \'id\': \'xonx4l\', \'type\': \'User\', \'login\': \'xonx4l\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2023-10-23T06:58:47Z\', \'id\': \'67c1d26cb0af3eb2db0a11fc7768a8299e7f7d58\', \'type\': \'Commit\', \'message\': \'"fix(types): correct serverPrefetch this type (#13068)\\n\\nclose #12488"\'}, \'i\': {\'number\': 12488, \'closed_at\': \'2023-10-23T06:58:48Z\', \'created_at\': \'2022-03-01T18:19:52Z\', \'id\': 12488, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"serverPrefetchs `this` type doesnt include component properties"\', \'body\': \'"### Version\\r\\n2.6.14\\r\\n\\r\\n### Reproduction link\\r\\n[codesandbox.io](https://codesandbox.io/s/vue-typescript-example-forked-yvrrbl?file=/src/App.vue:473-560)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nComment the `helloWorld` method, then uncomment it. This will trigger the type checking.\\r\\n\\r\\nYou should now see this syntax error on serverPrefetch code:\\r\\n![Screenshot 2022-03-01 at 19 17 18](https://user-images.githubusercontent.com/1819575/156225764-15f2d064-f73b-44c3-835b-202f4d784f39.png)\\r\\n\\r\\n### What is expected?\\r\\nmethods, props and data properties should be available inside serverPrefetchs `this` type.\\r\\n\\r\\n### What is actually happening?\\r\\n`serverPrefetch`s `this` is a generic Vue type that doesnt include current component info.\\r\\n\\r\\n---\\r\\nThis seems to be a leftover. This issue was fixed for multiple ComponentOptions with [this commit]( https://github.com/vuejs/vue/commit/db138e2254d71f6b96e033acf66ba43ad269841a#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38L34-L42).\\r\\n\\r\\nThen `ssrPrefetch` was added including the `this: V` type with [this commit](https://github.com/vuejs/vue/commit/d7a533d6f85aae52aed03202fa5ccb774f0cb2ec#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38R99) and further `serverPrefetch` kept it [this commit](https://github.com/vuejs/vue/commit/42fdf3f8378e5dc379808a4fa67b39c4a74ae191#diff-3cd76992dbf6767bbb6b03890cd0173c9602172b7d6b8cb5b05703164b583c38R99).\\r\\n\\r\\nThis type is not needed:\\r\\n\\r\\n```diff\\r\\ndiff --git a/types/options.d.ts b/types/options.d.ts\\r\\n-  serverPrefetch?(this: V): Promise<void>;\\r\\n+  serverPrefetch?(): Promise<void>;\\r\\n```\\r\\n\\r\\nI got to this bug trying to use a Vuex mapped mutation inside serverPrefetch.\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12488\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 39, \'deletions\': 21, \'committedDate\': \'2022-07-04T02:56:36Z\', \'id\': \'e452e9d4368aaba173e8c942e5fd82f999cf65ae\', \'type\': \'Commit\', \'message\': \'"fix: export proxyRefs\\n\\nclose #12600"\'}, \'i\': {\'number\': 12600, \'closed_at\': \'2022-07-04T02:56:50Z\', \'created_at\': \'2022-07-02T06:14:31Z\', \'id\': 12600, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Vue 2.7 does not expose proxyRefs"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[github.com](https://github.com/vuejs/composition-api)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nWith composition-api, you could import `proxyRefs` and use it as a simpler replacement for reactive/shallowReactive to avoid various reactivity issues/limitations or just plain bugs in composition API. Can we get access to proxyRefs in Vue 2.7?\\r\\n\\r\\n```js\\r\\n// Does not work\\r\\nimport { proxyRefs } from vue\\r\\n\\r\\n// Works\\r\\nimport { proxyRefs } from @vue/composition-api\\r\\n```\\r\\n\\r\\n### What is expected?\\r\\nVue 2 exploses proxyRefs\\r\\n\\r\\n### What is actually happening?\\r\\nModule "vue" has no exported member proxyRefs\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12600\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 11, \'deletions\': 0, \'committedDate\': \'2022-07-04T02:39:36Z\', \'id\': \'bcb62d1a001125bfac91c1dd4f8bd51ac42b5a0f\', \'type\': \'Commit\', \'message\': \'"test: test case for #12597"\'}, \'i\': {\'number\': 12597, \'closed_at\': \'2022-07-04T02:33:44Z\', \'created_at\': \'2022-07-01T12:22:15Z\', \'id\': 12597, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"`shallowReactive` will unwrap `refs`"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[codesandbox.io](https://codesandbox.io/s/vue-v2-7-shallowreactive-bx2u4t?file=/src/index.js)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\nSee the reproduction link above\\r\\n\\r\\n### What is expected?\\r\\nDoes not unwrap `refs`\\r\\n\\r\\n### What is actually happening?\\r\\nDoes unwrap `refs`\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12597\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 26, \'deletions\': 1, \'committedDate\': \'2022-07-04T02:37:22Z\', \'id\': \'ff5acb12cfa64f975f216a55aafa976b07052665\', \'type\': \'Commit\', \'message\': \'"fix: fix NaN comparison on state change\\n\\nfix #12595"\'}, \'i\': {\'number\': 12595, \'closed_at\': \'2022-07-04T02:39:50Z\', \'created_at\': \'2022-07-01T09:53:52Z\', \'id\': 12595, \'state\': \'closed\', \'type\': \'Issue\', \'title\': \'"Cannot assign to a NaN variable"\', \'body\': \'"### Version\\r\\n2.7.0\\r\\n\\r\\n### Reproduction link\\r\\n[codepen.io](https://codepen.io/andychyl/pen/KKowLWj)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n### Steps to reproduce\\r\\ndata() {\\r\\n  return {\\r\\n    test: NaN\\r\\n  }\\r\\n}\\r\\n\\r\\ncreated(){\\r\\n  this.test = 10\\r\\n  console.log(this.test) // output:NaN\\r\\n}\\r\\n\\r\\n### What is expected?\\r\\n10\\r\\n\\r\\n### What is actually happening?\\r\\nNaN\\r\\n\\r\\n<!-- generated by vue-issues. DO NOT REMOVE -->"\', \'url\': \'https://github.com/vuejs/vue/issues/12595\'}}]'}
2024-07-19 16:29:51,020 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:29:51,020 - wsgi - INFO - Generating response for 'based on the timeline of the commits can you predict when the next commit would be?' using 'gpt-3.5-turbo' model
2024-07-19 16:29:51,020 - scripts.generate_response - INFO - Generating response for 'based on the timeline of the commits can you predict when the next commit would be?' using 'gpt-3.5-turbo' model
2024-07-19 16:29:51,990 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:29:52,174 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:29:52,174 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:29:52,174 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:29:52,176 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:29:53,390 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:29:53,393 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c1:Commit)-[:parent_of]->(c2:Commit)
WHERE datetime(c1.committedDate) > datetime('2024-07-19T16:29:52Z')
RETURN c2.committedDate
ORDER BY c2.committedDate ASC
LIMIT 1
2024-07-19 16:29:53,394 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c1:Commit)-[:parent_of]->(c2:Commit)
WHERE datetime(c1.committedDate) > datetime('2024-07-19T16:29:52Z')
RETURN c2.committedDate
ORDER BY c2.committedDate ASC
LIMIT 1
2024-07-19 16:29:54,148 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:29:54,151 - scripts.generate_response - INFO - Response generated successfully for 'based on the timeline of the commits can you predict when the next commit would be?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'based on the timeline of the commits can you predict when the next commit would be?', 'response': "I don't know. Can I help with anything else?", 'context': "Query: MATCH (c1:Commit)-[:parent_of]->(c2:Commit)\nWHERE datetime(c1.committedDate) > datetime('2024-07-19T16:29:52Z')\nRETURN c2.committedDate\nORDER BY c2.committedDate ASC\nLIMIT 1\\Results: []"}
2024-07-19 16:29:54,152 - wsgi - INFO - {'result': "I don't know. Can I help with anything else?", 'context': "Query: MATCH (c1:Commit)-[:parent_of]->(c2:Commit)\nWHERE datetime(c1.committedDate) > datetime('2024-07-19T16:29:52Z')\nRETURN c2.committedDate\nORDER BY c2.committedDate ASC\nLIMIT 1\\Results: []"}
2024-07-19 16:30:15,177 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:30:15,178 - wsgi - INFO - Generating response for 'you didn't answer my last question?' using 'gpt-3.5-turbo' model
2024-07-19 16:30:15,178 - scripts.generate_response - INFO - Generating response for 'you didn't answer my last question?' using 'gpt-3.5-turbo' model
2024-07-19 16:30:16,048 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:30:16,528 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:30:16,528 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:30:16,528 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:30:16,531 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:30:17,727 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:30:17,743 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE c.abbreviatedOid = '0e6edd9'
RETURN u, c, i;
2024-07-19 16:30:17,743 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE c.abbreviatedOid = '0e6edd9'
RETURN u, c, i;
2024-07-19 16:30:17,951 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 2, column: 9, offset: 65} for query: "MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE c.abbreviatedOid = '0e6edd9'\nRETURN u, c, i;"
2024-07-19 16:30:18,986 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:30:18,988 - scripts.generate_response - INFO - Response generated successfully for 'you didn't answer my last question?' using 'gpt-3.5-turbo' model. 
Response: {'query': "you didn't answer my last question?", 'response': "I'm sorry, but I don't have an answer to your last question. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE c.abbreviatedOid = '0e6edd9'\nRETURN u, c, i;\\Results: []"}
2024-07-19 16:30:18,989 - wsgi - INFO - {'result': "I'm sorry, but I don't have an answer to your last question. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE c.abbreviatedOid = '0e6edd9'\nRETURN u, c, i;\\Results: []"}
2024-07-19 16:30:24,567 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:30:24,568 - wsgi - INFO - Generating response for 'who created you?' using 'gpt-3.5-turbo' model
2024-07-19 16:30:24,568 - scripts.generate_response - INFO - Generating response for 'who created you?' using 'gpt-3.5-turbo' model
2024-07-19 16:30:25,404 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:30:25,569 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:30:25,569 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:30:25,569 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:30:25,571 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:30:26,429 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:30:26,432 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:fixes]->(:Issue)-[:fixes]->(:Node {id: "you"})
RETURN DISTINCT (:User).name
2024-07-19 16:30:26,432 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:fixes]->(:Issue)-[:fixes]->(:Node {id: "you"})
RETURN DISTINCT (:User).name
2024-07-19 16:30:26,580 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input '.': expected '-' (line 2, column 24 (offset: 131))
"RETURN DISTINCT (:User).name"
                        ^}
2024-07-19 16:30:26,580 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:30:27,703 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:30:27,789 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input '.': expected '-' (line 2, column 24 (offset: 140))
"RETURN DISTINCT (:User).name"
                        ^} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input '.': expected '-' (line 2, column 24 (offset: 131))
"RETURN DISTINCT (:User).name"
                        ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input '.': expected '-' (line 2, column 24 (offset: 131))
"RETURN DISTINCT (:User).name"
                        ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input '.': expected '-' (line 2, column 24 (offset: 140))
"RETURN DISTINCT (:User).name"
                        ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input '.': expected '-' (line 2, column 24 (offset: 140))
"RETURN DISTINCT (:User).name"
                        ^}
2024-07-19 16:30:28,262 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:30:28,264 - scripts.generate_response - INFO - Response generated successfully for 'who created you?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who created you?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:fixes]->(:Issue)-[:fixes]->(:Node {id: "you"})\nRETURN DISTINCT (:User).name\\Results: []'}
2024-07-19 16:30:28,265 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:fixes]->(:Issue)-[:fixes]->(:Node {id: "you"})\nRETURN DISTINCT (:User).name\\Results: []'}
2024-07-19 16:30:45,242 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:30:45,242 - wsgi - INFO - Generating response for 'what PR has the most comments?' using 'gpt-3.5-turbo' model
2024-07-19 16:30:45,242 - scripts.generate_response - INFO - Generating response for 'what PR has the most comments?' using 'gpt-3.5-turbo' model
2024-07-19 16:30:46,071 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:30:46,231 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:30:46,231 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:30:46,231 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:30:46,233 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:30:47,236 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:30:47,240 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:participates_in]->(i:Issue)-[:impacted]->(f:File)
RETURN i.title, count(u) as num_comments
ORDER BY num_comments DESC
LIMIT 1;
2024-07-19 16:30:47,240 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:participates_in]->(i:Issue)-[:impacted]->(f:File)
RETURN i.title, count(u) as num_comments
ORDER BY num_comments DESC
LIMIT 1;
2024-07-19 16:30:48,069 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:30:48,072 - scripts.generate_response - INFO - Response generated successfully for 'what PR has the most comments?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what PR has the most comments?', 'response': 'The pull request with the most comments is titled "Improve warning message information" with a total of 205 comments.', 'context': 'Query: MATCH (u:User)-[:participates_in]->(i:Issue)-[:impacted]->(f:File)\nRETURN i.title, count(u) as num_comments\nORDER BY num_comments DESC\nLIMIT 1;\\Results: [{\'i.title\': \'"Improve warning message information"\', \'num_comments\': 205}]'}
2024-07-19 16:30:48,073 - wsgi - INFO - {'result': 'The pull request with the most comments is titled "Improve warning message information" with a total of 205 comments.', 'context': 'Query: MATCH (u:User)-[:participates_in]->(i:Issue)-[:impacted]->(f:File)\nRETURN i.title, count(u) as num_comments\nORDER BY num_comments DESC\nLIMIT 1;\\Results: [{\'i.title\': \'"Improve warning message information"\', \'num_comments\': 205}]'}
2024-07-19 16:31:18,617 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:31:18,617 - wsgi - INFO - Generating response for 'what is the label with the most open PRs?' using 'gpt-3.5-turbo' model
2024-07-19 16:31:18,618 - scripts.generate_response - INFO - Generating response for 'what is the label with the most open PRs?' using 'gpt-3.5-turbo' model
2024-07-19 16:31:19,502 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:31:19,690 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:31:19,690 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:31:19,690 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:31:19,692 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:31:20,473 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:31:20,475 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue)
WHERE i.state = 'open'
WITH i, COUNT(i) AS openPRs
RETURN i.type, openPRs
ORDER BY openPRs DESC
LIMIT 1
2024-07-19 16:31:20,475 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue)
WHERE i.state = 'open'
WITH i, COUNT(i) AS openPRs
RETURN i.type, openPRs
ORDER BY openPRs DESC
LIMIT 1
2024-07-19 16:31:21,398 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:31:21,402 - scripts.generate_response - INFO - Response generated successfully for 'what is the label with the most open PRs?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the label with the most open PRs?', 'response': "The label with the most open PRs is 'Issue' with 1 open PR.", 'context': "Query: MATCH (i:Issue)\nWHERE i.state = 'open'\nWITH i, COUNT(i) AS openPRs\nRETURN i.type, openPRs\nORDER BY openPRs DESC\nLIMIT 1\\Results: [{'i.type': 'Issue', 'openPRs': 1}]"}
2024-07-19 16:31:21,403 - wsgi - INFO - {'result': "The label with the most open PRs is 'Issue' with 1 open PR.", 'context': "Query: MATCH (i:Issue)\nWHERE i.state = 'open'\nWITH i, COUNT(i) AS openPRs\nRETURN i.type, openPRs\nORDER BY openPRs DESC\nLIMIT 1\\Results: [{'i.type': 'Issue', 'openPRs': 1}]"}
2024-07-19 16:31:43,883 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:31:43,884 - wsgi - INFO - Generating response for 'what other labels exist in the open PRs?' using 'gpt-3.5-turbo' model
2024-07-19 16:31:43,884 - scripts.generate_response - INFO - Generating response for 'what other labels exist in the open PRs?' using 'gpt-3.5-turbo' model
2024-07-19 16:31:44,696 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:31:44,864 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:31:44,864 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:31:44,864 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:31:44,866 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:31:45,767 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:31:45,769 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Issue {state: "open"})-[:impacted]->(n:Node)
RETURN labels(n)
2024-07-19 16:31:45,769 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Issue {state: "open"})-[:impacted]->(n:Node)
RETURN labels(n)
2024-07-19 16:31:46,586 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:31:46,589 - scripts.generate_response - INFO - Response generated successfully for 'what other labels exist in the open PRs?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what other labels exist in the open PRs?', 'response': "I don't know. Can I help with anything else?", 'context': 'Query: MATCH (:Issue {state: "open"})-[:impacted]->(n:Node)\nRETURN labels(n)\\Results: []'}
2024-07-19 16:31:46,589 - wsgi - INFO - {'result': "I don't know. Can I help with anything else?", 'context': 'Query: MATCH (:Issue {state: "open"})-[:impacted]->(n:Node)\nRETURN labels(n)\\Results: []'}
2024-07-19 16:32:04,815 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:32:04,816 - wsgi - INFO - Generating response for 'how many open PRs labelled "bug" are there?' using 'gpt-3.5-turbo' model
2024-07-19 16:32:04,816 - scripts.generate_response - INFO - Generating response for 'how many open PRs labelled "bug" are there?' using 'gpt-3.5-turbo' model
2024-07-19 16:32:05,666 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:32:05,843 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:32:05,843 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:32:05,843 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:32:05,845 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:32:06,789 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:32:06,792 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:assigned]->(i:Issue {state: "open", title: "bug"})
RETURN COUNT(i);
2024-07-19 16:32:06,792 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:assigned]->(i:Issue {state: "open", title: "bug"})
RETURN COUNT(i);
2024-07-19 16:32:07,740 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:32:07,742 - scripts.generate_response - INFO - Response generated successfully for 'how many open PRs labelled "bug" are there?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many open PRs labelled "bug" are there?', 'response': 'There are 0 open PRs labelled "bug" in the software repository.', 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue {state: "open", title: "bug"})\nRETURN COUNT(i);\\Results: [{\'COUNT(i)\': 0}]'}
2024-07-19 16:32:07,743 - wsgi - INFO - {'result': 'There are 0 open PRs labelled "bug" in the software repository.', 'context': 'Query: MATCH (u:User)-[:assigned]->(i:Issue {state: "open", title: "bug"})\nRETURN COUNT(i);\\Results: [{\'COUNT(i)\': 0}]'}
2024-07-19 16:32:18,904 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:32:18,904 - wsgi - INFO - Generating response for 'but I can see one in the repo' using 'gpt-3.5-turbo' model
2024-07-19 16:32:18,904 - scripts.generate_response - INFO - Generating response for 'but I can see one in the repo' using 'gpt-3.5-turbo' model
2024-07-19 16:32:19,776 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:32:19,948 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:32:19,948 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:32:19,949 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:32:19,950 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:32:20,647 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:32:20,650 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)
WHERE f.path = "repo"
RETURN u, c, f
2024-07-19 16:32:20,651 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)
WHERE f.path = "repo"
RETURN u, c, f
2024-07-19 16:32:21,544 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:32:21,548 - scripts.generate_response - INFO - Response generated successfully for 'but I can see one in the repo' using 'gpt-3.5-turbo' model. 
Response: {'query': 'but I can see one in the repo', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nWHERE f.path = "repo"\nRETURN u, c, f\\Results: []'}
2024-07-19 16:32:21,549 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nWHERE f.path = "repo"\nRETURN u, c, f\\Results: []'}
2024-07-19 16:32:34,311 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:32:34,311 - wsgi - INFO - Generating response for 'you're not very smart are you?' using 'gpt-3.5-turbo' model
2024-07-19 16:32:34,312 - scripts.generate_response - INFO - Generating response for 'you're not very smart are you?' using 'gpt-3.5-turbo' model
2024-07-19 16:32:35,149 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:32:35,328 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:32:35,328 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:32:35,328 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:32:35,330 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:32:36,279 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:32:36,283 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is I'm sorry, I'm here to help with generating Cypher statements for querying a graph database. Let me know if you have any specific query you'd like assistance with.
2024-07-19 16:32:36,283 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is I'm sorry, I'm here to help with generating Cypher statements for querying a graph database. Let me know if you have any specific query you'd like assistance with.
2024-07-19 16:32:36,370 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I'm here to help with generating Cypher statements for querying a graph database. Let me know if you have any specific query you'd like assistance with."
 ^}
2024-07-19 16:32:36,371 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:32:36,963 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:32:37,045 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I'm here to help with generating Cypher statements for graph database queries. Let me know if you have any specific query you need assistance with."
 ^} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I'm here to help with generating Cypher statements for querying a graph database. Let me know if you have any specific query you'd like assistance with."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I'm here to help with generating Cypher statements for querying a graph database. Let me know if you have any specific query you'd like assistance with."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I'm here to help with generating Cypher statements for graph database queries. Let me know if you have any specific query you need assistance with."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I'm here to help with generating Cypher statements for graph database queries. Let me know if you have any specific query you need assistance with."
 ^}
2024-07-19 16:32:37,803 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:32:37,806 - scripts.generate_response - INFO - Response generated successfully for 'you're not very smart are you?' using 'gpt-3.5-turbo' model. 
Response: {'query': "you're not very smart are you?", 'response': "I'm here to assist with generating Cypher statements for graph database queries. Let me know if you have any specific query you need help with. Can I assist you with anything else?", 'context': "Query: I'm sorry, I'm here to help with generating Cypher statements for querying a graph database. Let me know if you have any specific query you'd like assistance with.\\Results: []"}
2024-07-19 16:32:37,807 - wsgi - INFO - {'result': "I'm here to assist with generating Cypher statements for graph database queries. Let me know if you have any specific query you need help with. Can I assist you with anything else?", 'context': "Query: I'm sorry, I'm here to help with generating Cypher statements for querying a graph database. Let me know if you have any specific query you'd like assistance with.\\Results: []"}
2024-07-19 16:32:56,781 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:32:56,781 - wsgi - INFO - Generating response for 'don't mean girl me, fix your attitude..' using 'gpt-3.5-turbo' model
2024-07-19 16:32:56,782 - scripts.generate_response - INFO - Generating response for 'don't mean girl me, fix your attitude..' using 'gpt-3.5-turbo' model
2024-07-19 16:32:57,611 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:32:57,773 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:32:57,773 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:32:57,773 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:32:57,775 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:32:59,126 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:32:59,129 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE u.name = "mean girl" AND u.user_login = "girl" AND u.email = "girl@example.com"
SET u.attitude = "fixed"
RETURN u, c, i;
2024-07-19 16:32:59,129 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE u.name = "mean girl" AND u.user_login = "girl" AND u.email = "girl@example.com"
SET u.attitude = "fixed"
RETURN u, c, i;
2024-07-19 16:33:02,058 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:33:02,062 - scripts.generate_response - INFO - Response generated successfully for 'don't mean girl me, fix your attitude..' using 'gpt-3.5-turbo' model. 
Response: {'query': "don't mean girl me, fix your attitude..", 'response': "I'm sorry, but I don't have the information to answer your question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE u.name = "mean girl" AND u.user_login = "girl" AND u.email = "girl@example.com"\nSET u.attitude = "fixed"\nRETURN u, c, i;\\Results: []'}
2024-07-19 16:33:02,063 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer your question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE u.name = "mean girl" AND u.user_login = "girl" AND u.email = "girl@example.com"\nSET u.attitude = "fixed"\nRETURN u, c, i;\\Results: []'}
2024-07-19 16:33:20,501 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:33:20,501 - wsgi - INFO - Generating response for 'which author closes the most PRs?' using 'gpt-3.5-turbo' model
2024-07-19 16:33:20,501 - scripts.generate_response - INFO - Generating response for 'which author closes the most PRs?' using 'gpt-3.5-turbo' model
2024-07-19 16:33:21,386 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:33:21,582 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:33:21,583 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:33:21,583 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:33:21,584 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:33:22,744 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:33:22,747 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue {state: "closed"})
RETURN u.name, COUNT(i) AS closed_prs
ORDER BY closed_prs DESC
LIMIT 1
2024-07-19 16:33:22,748 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue {state: "closed"})
RETURN u.name, COUNT(i) AS closed_prs
ORDER BY closed_prs DESC
LIMIT 1
2024-07-19 16:33:23,785 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:33:23,789 - scripts.generate_response - INFO - Response generated successfully for 'which author closes the most PRs?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'which author closes the most PRs?', 'response': 'Evan You closes the most PRs with a total of 428 closed PRs.', 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue {state: "closed"})\nRETURN u.name, COUNT(i) AS closed_prs\nORDER BY closed_prs DESC\nLIMIT 1\\Results: [{\'u.name\': \'Evan You\', \'closed_prs\': 428}]'}
2024-07-19 16:33:23,790 - wsgi - INFO - {'result': 'Evan You closes the most PRs with a total of 428 closed PRs.', 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue {state: "closed"})\nRETURN u.name, COUNT(i) AS closed_prs\nORDER BY closed_prs DESC\nLIMIT 1\\Results: [{\'u.name\': \'Evan You\', \'closed_prs\': 428}]'}
2024-07-19 16:33:47,777 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:33:47,777 - wsgi - INFO - Generating response for 'what is the longest time Evan You has spent without making a commit to the repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:33:47,777 - scripts.generate_response - INFO - Generating response for 'what is the longest time Evan You has spent without making a commit to the repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:33:48,624 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:33:48,806 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:33:48,806 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:33:48,806 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:33:48,807 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:33:50,491 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:33:50,493 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {name: 'Evan You'})-[:author]->(c1:Commit)
MATCH (u)-[:author]->(c2:Commit)
WHERE c1 <> c2
WITH u, c1, c2
ORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC
RETURN abs(datetime(c1.committedDate) - datetime(c2.committedDate)) as longest_time_without_commit
2024-07-19 16:33:50,494 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User {name: 'Evan You'})-[:author]->(c1:Commit)
MATCH (u)-[:author]->(c2:Commit)
WHERE c1 <> c2
WITH u, c1, c2
ORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC
RETURN abs(datetime(c1.committedDate) - datetime(c2.committedDate)) as longest_time_without_commit
2024-07-19 16:33:50,628 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Type mismatch: expected Duration but was DateTime (line 5, column 43 (offset: 162))
"ORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC"
                                           ^}
2024-07-19 16:33:50,628 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:33:52,184 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:33:52,560 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Type mismatch: expected Duration but was DateTime (line 5, column 43 (offset: 162))
"ORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC"
                                           ^} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Type mismatch: expected Duration but was DateTime (line 5, column 43 (offset: 162))
"ORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC"
                                           ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Type mismatch: expected Duration but was DateTime (line 5, column 43 (offset: 162))
"ORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC"
                                           ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Type mismatch: expected Duration but was DateTime (line 5, column 43 (offset: 162))
"ORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC"
                                           ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Type mismatch: expected Duration but was DateTime (line 5, column 43 (offset: 162))
"ORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC"
                                           ^}
2024-07-19 16:33:53,411 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:33:53,415 - scripts.generate_response - INFO - Response generated successfully for 'what is the longest time Evan You has spent without making a commit to the repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the longest time Evan You has spent without making a commit to the repo?', 'response': "I don't know, can I help with anything else?", 'context': "Query: MATCH (u:User {name: 'Evan You'})-[:author]->(c1:Commit)\nMATCH (u)-[:author]->(c2:Commit)\nWHERE c1 <> c2\nWITH u, c1, c2\nORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC\nRETURN abs(datetime(c1.committedDate) - datetime(c2.committedDate)) as longest_time_without_commit\\Results: []"}
2024-07-19 16:33:53,416 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': "Query: MATCH (u:User {name: 'Evan You'})-[:author]->(c1:Commit)\nMATCH (u)-[:author]->(c2:Commit)\nWHERE c1 <> c2\nWITH u, c1, c2\nORDER BY abs(datetime(c1.committedDate) - datetime(c2.committedDate)) DESC\nRETURN abs(datetime(c1.committedDate) - datetime(c2.committedDate)) as longest_time_without_commit\\Results: []"}
2024-07-19 16:34:10,941 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:34:10,941 - wsgi - INFO - Generating response for 'how many closed PRs are there?' using 'gpt-3.5-turbo' model
2024-07-19 16:34:10,941 - scripts.generate_response - INFO - Generating response for 'how many closed PRs are there?' using 'gpt-3.5-turbo' model
2024-07-19 16:34:11,742 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:34:11,920 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:34:11,920 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:34:11,920 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:34:11,922 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:34:12,614 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:34:12,618 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:assigned]->(i:Issue {state: "closed"})
RETURN COUNT(i) as closedPRs;
2024-07-19 16:34:12,618 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:assigned]->(i:Issue {state: "closed"})
RETURN COUNT(i) as closedPRs;
2024-07-19 16:34:13,258 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:34:13,261 - scripts.generate_response - INFO - Response generated successfully for 'how many closed PRs are there?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many closed PRs are there?', 'response': 'There are 124 closed PRs.', 'context': 'Query: MATCH (:User)-[:assigned]->(i:Issue {state: "closed"})\nRETURN COUNT(i) as closedPRs;\\Results: [{\'closedPRs\': 124}]'}
2024-07-19 16:34:13,262 - wsgi - INFO - {'result': 'There are 124 closed PRs.', 'context': 'Query: MATCH (:User)-[:assigned]->(i:Issue {state: "closed"})\nRETURN COUNT(i) as closedPRs;\\Results: [{\'closedPRs\': 124}]'}
2024-07-19 16:34:22,690 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:34:22,690 - wsgi - INFO - Generating response for 'which branch has the most PRs made to?' using 'gpt-3.5-turbo' model
2024-07-19 16:34:22,690 - scripts.generate_response - INFO - Generating response for 'which branch has the most PRs made to?' using 'gpt-3.5-turbo' model
2024-07-19 16:34:23,553 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:34:23,774 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:34:23,774 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:34:23,774 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:34:23,777 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:34:24,866 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:34:24,873 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node)
RETURN COUNT(*) AS num_prs, Node.id AS branch
ORDER BY num_prs DESC
LIMIT 1
2024-07-19 16:34:24,873 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node)
RETURN COUNT(*) AS num_prs, Node.id AS branch
ORDER BY num_prs DESC
LIMIT 1
2024-07-19 16:34:24,959 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `Node` not defined (line 2, column 29 (offset: 108))
"RETURN COUNT(*) AS num_prs, Node.id AS branch"
                             ^}
2024-07-19 16:34:24,959 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:34:26,212 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:34:26,355 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: branch)} {position: line: 3, column: 10, offset: 111} for query: 'MATCH (u:User)-[:author]->(:Commit)-[:introduced]->(i:Issue)-[:impacted]->(:Node)\nWHERE i.type = "PR"\nRETURN i.branch, COUNT(i) AS numPRs\nORDER BY numPRs DESC\nLIMIT 1;'
2024-07-19 16:34:26,949 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:34:26,953 - scripts.generate_response - INFO - Response generated successfully for 'which branch has the most PRs made to?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'which branch has the most PRs made to?', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node)\nRETURN COUNT(*) AS num_prs, Node.id AS branch\nORDER BY num_prs DESC\nLIMIT 1\\Results: []'}
2024-07-19 16:34:26,954 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (:User)-[:author]->(:Commit)-[:introduced]->(:Issue)-[:impacted]->(:Node)\nRETURN COUNT(*) AS num_prs, Node.id AS branch\nORDER BY num_prs DESC\nLIMIT 1\\Results: []'}
2024-07-19 16:35:04,238 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:35:04,239 - wsgi - INFO - Generating response for 'how many open issues labelled "bug" are there?

' using 'gpt-3.5-turbo' model
2024-07-19 16:35:04,239 - scripts.generate_response - INFO - Generating response for 'how many open issues labelled "bug" are there?

' using 'gpt-3.5-turbo' model
2024-07-19 16:35:05,070 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:35:05,284 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:35:05,285 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:35:05,285 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:35:05,287 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:35:05,930 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:35:05,933 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue)
WHERE i.state = 'open' AND i.type = 'bug'
RETURN count(i)
2024-07-19 16:35:05,933 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue)
WHERE i.state = 'open' AND i.type = 'bug'
RETURN count(i)
2024-07-19 16:35:06,998 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:35:07,002 - scripts.generate_response - INFO - Response generated successfully for 'how many open issues labelled "bug" are there?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many open issues labelled "bug" are there?\n\n', 'response': 'There are 0 open issues labelled "bug" in the software repository.', 'context': "Query: MATCH (i:Issue)\nWHERE i.state = 'open' AND i.type = 'bug'\nRETURN count(i)\\Results: [{'count(i)': 0}]"}
2024-07-19 16:35:07,003 - wsgi - INFO - {'result': 'There are 0 open issues labelled "bug" in the software repository.', 'context': "Query: MATCH (i:Issue)\nWHERE i.state = 'open' AND i.type = 'bug'\nRETURN count(i)\\Results: [{'count(i)': 0}]"}
2024-07-19 16:35:21,540 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:35:21,541 - wsgi - INFO - Generating response for 'how many projects are in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:35:21,541 - scripts.generate_response - INFO - Generating response for 'how many projects are in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:35:22,371 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:35:22,637 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:35:22,638 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:35:22,638 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:35:22,639 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:35:23,144 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:35:23,147 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (f:File)
RETURN COUNT(DISTINCT f) as numberOfProjects
2024-07-19 16:35:23,148 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (f:File)
RETURN COUNT(DISTINCT f) as numberOfProjects
2024-07-19 16:35:23,898 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:35:23,901 - scripts.generate_response - INFO - Response generated successfully for 'how many projects are in this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many projects are in this repo?', 'response': 'There are 923 projects in this repository.', 'context': "Query: MATCH (f:File)\nRETURN COUNT(DISTINCT f) as numberOfProjects\\Results: [{'numberOfProjects': 923}]"}
2024-07-19 16:35:23,902 - wsgi - INFO - {'result': 'There are 923 projects in this repository.', 'context': "Query: MATCH (f:File)\nRETURN COUNT(DISTINCT f) as numberOfProjects\\Results: [{'numberOfProjects': 923}]"}
2024-07-19 16:35:32,106 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:35:32,145 - wsgi - INFO - Generating response for 'can you list the projects?' using 'gpt-3.5-turbo' model
2024-07-19 16:35:32,145 - scripts.generate_response - INFO - Generating response for 'can you list the projects?' using 'gpt-3.5-turbo' model
2024-07-19 16:35:33,319 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:35:33,550 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:35:33,550 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:35:33,550 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:35:33,553 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:35:34,095 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:35:34,098 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (p:Node)-[:fixes]->(:Issue)
RETURN p.filename as project
2024-07-19 16:35:34,099 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (p:Node)-[:fixes]->(:Issue)
RETURN p.filename as project
2024-07-19 16:35:35,154 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:35:35,157 - scripts.generate_response - INFO - Response generated successfully for 'can you list the projects?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'can you list the projects?', 'response': "I'm sorry, but I don't have the information to list the projects. Can I help with anything else?", 'context': "Query: MATCH (p:Node)-[:fixes]->(:Issue)\nRETURN p.filename as project\\Results: [{'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}]"}
2024-07-19 16:35:35,158 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to list the projects. Can I help with anything else?", 'context': "Query: MATCH (p:Node)-[:fixes]->(:Issue)\nRETURN p.filename as project\\Results: [{'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}, {'project': None}]"}
2024-07-19 16:36:04,332 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:36:04,332 - wsgi - INFO - Generating response for 'is this a private repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:36:04,332 - scripts.generate_response - INFO - Generating response for 'is this a private repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:36:05,146 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:36:05,349 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:36:05,350 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:36:05,350 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:36:05,351 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:36:06,560 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:36:06,565 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:parent_of*0..]->(:Commit)-[:fixes]->(:Issue)
WHERE u.login = 'username'
RETURN CASE WHEN COUNT(*) > 0 THEN 'This is a private repo' ELSE 'This is not a private repo' END as repo_status;
2024-07-19 16:36:06,565 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:parent_of*0..]->(:Commit)-[:fixes]->(:Issue)
WHERE u.login = 'username'
RETURN CASE WHEN COUNT(*) > 0 THEN 'This is a private repo' ELSE 'This is not a private repo' END as repo_status;
2024-07-19 16:36:53,729 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:36:53,729 - wsgi - INFO - Generating response for 'how many contributors in have write access to this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:36:53,729 - scripts.generate_response - INFO - Generating response for 'how many contributors in have write access to this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:36:55,008 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:36:55,225 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:36:55,226 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:36:55,226 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:36:55,227 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:36:55,741 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:36:55,744 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:assigned]->(:Issue)
RETURN COUNT(DISTINCT User)
2024-07-19 16:36:55,744 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:assigned]->(:Issue)
RETURN COUNT(DISTINCT User)
2024-07-19 16:36:55,841 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `User` not defined (line 2, column 23 (offset: 58))
"RETURN COUNT(DISTINCT User)"
                       ^}
2024-07-19 16:36:55,841 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:36:56,587 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:36:57,357 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:36:57,361 - scripts.generate_response - INFO - Response generated successfully for 'how many contributors in have write access to this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many contributors in have write access to this repo?', 'response': 'There are 20 contributors who have write access to this repo.', 'context': "Query: MATCH (:User)-[:assigned]->(:Issue)\nRETURN COUNT(DISTINCT User)\\Results: [{'COUNT(DISTINCT u)': 20}]"}
2024-07-19 16:36:57,362 - wsgi - INFO - {'result': 'There are 20 contributors who have write access to this repo.', 'context': "Query: MATCH (:User)-[:assigned]->(:Issue)\nRETURN COUNT(DISTINCT User)\\Results: [{'COUNT(DISTINCT u)': 20}]"}
2024-07-19 16:37:14,259 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:37:14,260 - wsgi - INFO - Generating response for 'how many contributors with read access?' using 'gpt-3.5-turbo' model
2024-07-19 16:37:14,260 - scripts.generate_response - INFO - Generating response for 'how many contributors with read access?' using 'gpt-3.5-turbo' model
2024-07-19 16:37:15,137 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:37:15,545 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:37:15,545 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:37:15,545 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:37:15,548 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:37:16,250 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:37:16,266 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User {type: 'read'})-[:participates_in]->(:Issue)
RETURN COUNT(DISTINCT User) as contributors
2024-07-19 16:37:16,266 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User {type: 'read'})-[:participates_in]->(:Issue)
RETURN COUNT(DISTINCT User) as contributors
2024-07-19 16:37:16,360 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `User` not defined (line 2, column 23 (offset: 80))
"RETURN COUNT(DISTINCT User) as contributors"
                       ^}
2024-07-19 16:37:16,360 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:37:17,469 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:37:17,559 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `User` not defined (line 2, column 23 (offset: 80))
"RETURN COUNT(DISTINCT User)"
                       ^} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Variable `User` not defined (line 2, column 23 (offset: 80))
"RETURN COUNT(DISTINCT User) as contributors"
                       ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `User` not defined (line 2, column 23 (offset: 80))
"RETURN COUNT(DISTINCT User) as contributors"
                       ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Variable `User` not defined (line 2, column 23 (offset: 80))
"RETURN COUNT(DISTINCT User)"
                       ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Variable `User` not defined (line 2, column 23 (offset: 80))
"RETURN COUNT(DISTINCT User)"
                       ^}
2024-07-19 16:37:18,353 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:37:18,356 - scripts.generate_response - INFO - Response generated successfully for 'how many contributors with read access?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many contributors with read access?', 'response': "I don't know, can I help with anything else?", 'context': "Query: MATCH (:User {type: 'read'})-[:participates_in]->(:Issue)\nRETURN COUNT(DISTINCT User) as contributors\\Results: []"}
2024-07-19 16:37:18,356 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': "Query: MATCH (:User {type: 'read'})-[:participates_in]->(:Issue)\nRETURN COUNT(DISTINCT User) as contributors\\Results: []"}
2024-07-19 16:37:29,411 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:37:29,411 - wsgi - INFO - Generating response for 'how many contributors are there overall?' using 'gpt-3.5-turbo' model
2024-07-19 16:37:29,411 - scripts.generate_response - INFO - Generating response for 'how many contributors are there overall?' using 'gpt-3.5-turbo' model
2024-07-19 16:37:30,272 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:37:30,479 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:37:30,479 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:37:30,479 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:37:30,480 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:37:30,979 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:37:30,982 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)
RETURN COUNT(u) as totalContributors
2024-07-19 16:37:30,982 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)
RETURN COUNT(u) as totalContributors
2024-07-19 16:37:31,839 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:37:31,843 - scripts.generate_response - INFO - Response generated successfully for 'how many contributors are there overall?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many contributors are there overall?', 'response': 'There are a total of 10482 contributors overall.', 'context': "Query: MATCH (u:User)\nRETURN COUNT(u) as totalContributors\\Results: [{'totalContributors': 10482}]"}
2024-07-19 16:37:31,843 - wsgi - INFO - {'result': 'There are a total of 10482 contributors overall.', 'context': "Query: MATCH (u:User)\nRETURN COUNT(u) as totalContributors\\Results: [{'totalContributors': 10482}]"}
2024-07-19 16:37:51,968 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:37:51,968 - wsgi - INFO - Generating response for 'what is the dominant programming language in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:37:51,968 - scripts.generate_response - INFO - Generating response for 'what is the dominant programming language in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:37:52,793 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:37:52,972 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:37:52,972 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:37:52,972 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:37:52,974 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:37:53,787 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:37:53,789 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)
RETURN f.type as dominant_language, COUNT(*) as frequency
ORDER BY frequency DESC
LIMIT 1
2024-07-19 16:37:53,790 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)
RETURN f.type as dominant_language, COUNT(*) as frequency
ORDER BY frequency DESC
LIMIT 1
2024-07-19 16:37:54,808 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:37:54,810 - scripts.generate_response - INFO - Response generated successfully for 'what is the dominant programming language in this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the dominant programming language in this repo?', 'response': 'The dominant programming language in this repository is File, with a frequency of 12167.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nRETURN f.type as dominant_language, COUNT(*) as frequency\nORDER BY frequency DESC\nLIMIT 1\\Results: [{'dominant_language': 'File', 'frequency': 12167}]"}
2024-07-19 16:37:54,811 - wsgi - INFO - {'result': 'The dominant programming language in this repository is File, with a frequency of 12167.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nRETURN f.type as dominant_language, COUNT(*) as frequency\nORDER BY frequency DESC\nLIMIT 1\\Results: [{'dominant_language': 'File', 'frequency': 12167}]"}
2024-07-19 16:38:34,314 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:38:34,314 - wsgi - INFO - Generating response for 'can you delete the repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:38:34,314 - scripts.generate_response - INFO - Generating response for 'can you delete the repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:38:35,190 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:38:35,384 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:38:35,384 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:38:35,384 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:38:35,387 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:38:36,451 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:38:36,454 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:parent_of*0..]->(:Commit)-[:fixes]->(:Issue)-[:impacted]->(n:Node)
WHERE u.login = "admin" 
DETACH DELETE n;
2024-07-19 16:38:36,455 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:parent_of*0..]->(:Commit)-[:fixes]->(:Issue)-[:impacted]->(n:Node)
WHERE u.login = "admin" 
DETACH DELETE n;
2024-07-19 16:38:37,642 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:38:37,644 - scripts.generate_response - INFO - Response generated successfully for 'can you delete the repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'can you delete the repo?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:parent_of*0..]->(:Commit)-[:fixes]->(:Issue)-[:impacted]->(n:Node)\nWHERE u.login = "admin" \nDETACH DELETE n;\\Results: []'}
2024-07-19 16:38:37,645 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:parent_of*0..]->(:Commit)-[:fixes]->(:Issue)-[:impacted]->(n:Node)\nWHERE u.login = "admin" \nDETACH DELETE n;\\Results: []'}
2024-07-19 16:38:54,262 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:38:54,262 - wsgi - INFO - Generating response for 'what is the total number of deleted lines in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:38:54,262 - scripts.generate_response - INFO - Generating response for 'what is the total number of deleted lines in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:38:55,070 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:38:55,233 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:38:55,233 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:38:55,233 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:38:55,235 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:38:56,170 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:38:56,174 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:Commit)-[:changed {change_type: 'delete'}]->(f:File)
RETURN SUM(f.deletions) as total_deleted_lines;
2024-07-19 16:38:56,174 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:Commit)-[:changed {change_type: 'delete'}]->(f:File)
RETURN SUM(f.deletions) as total_deleted_lines;
2024-07-19 16:38:57,036 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:38:57,039 - scripts.generate_response - INFO - Response generated successfully for 'what is the total number of deleted lines in this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the total number of deleted lines in this repo?', 'response': 'The total number of deleted lines in this repository is 0.', 'context': "Query: MATCH (:Commit)-[:changed {change_type: 'delete'}]->(f:File)\nRETURN SUM(f.deletions) as total_deleted_lines;\\Results: [{'total_deleted_lines': 0}]"}
2024-07-19 16:38:57,040 - wsgi - INFO - {'result': 'The total number of deleted lines in this repository is 0.', 'context': "Query: MATCH (:Commit)-[:changed {change_type: 'delete'}]->(f:File)\nRETURN SUM(f.deletions) as total_deleted_lines;\\Results: [{'total_deleted_lines': 0}]"}
2024-07-19 16:39:12,197 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:39:12,198 - wsgi - INFO - Generating response for 'what was the smallest commit in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:39:12,198 - scripts.generate_response - INFO - Generating response for 'what was the smallest commit in this repo?' using 'gpt-3.5-turbo' model
2024-07-19 16:39:13,059 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:39:13,234 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:39:13,234 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:39:13,234 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:39:13,235 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:39:14,008 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:39:14,010 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
RETURN c
ORDER BY c.additions + c.deletions ASC
LIMIT 1
2024-07-19 16:39:14,010 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
RETURN c
ORDER BY c.additions + c.deletions ASC
LIMIT 1
2024-07-19 16:39:15,273 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:39:15,276 - scripts.generate_response - INFO - Response generated successfully for 'what was the smallest commit in this repo?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what was the smallest commit in this repo?', 'response': 'The smallest commit in this repository was a commit with no additions or deletions, titled "fix: types/v3-directive not published (#12571)", committed on June 27, 2022 at 06:50:41 UTC.', 'context': 'Query: MATCH (c:Commit)\nRETURN c\nORDER BY c.additions + c.deletions ASC\nLIMIT 1\\Results: [{\'c\': {\'additions\': 0, \'deletions\': 0, \'committedDate\': \'2022-06-27T06:50:41Z\', \'id\': \'11e4bfe806b574747495edfb9ba22f78676ceb7c\', \'type\': \'Commit\', \'message\': \'"fix: types/v3-directive not published (#12571)"\'}}]'}
2024-07-19 16:39:15,277 - wsgi - INFO - {'result': 'The smallest commit in this repository was a commit with no additions or deletions, titled "fix: types/v3-directive not published (#12571)", committed on June 27, 2022 at 06:50:41 UTC.', 'context': 'Query: MATCH (c:Commit)\nRETURN c\nORDER BY c.additions + c.deletions ASC\nLIMIT 1\\Results: [{\'c\': {\'additions\': 0, \'deletions\': 0, \'committedDate\': \'2022-06-27T06:50:41Z\', \'id\': \'11e4bfe806b574747495edfb9ba22f78676ceb7c\', \'type\': \'Commit\', \'message\': \'"fix: types/v3-directive not published (#12571)"\'}}]'}
2024-07-19 16:39:34,638 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:39:34,638 - wsgi - INFO - Generating response for 'how many PRs were made by dependabot?' using 'gpt-3.5-turbo' model
2024-07-19 16:39:34,638 - scripts.generate_response - INFO - Generating response for 'how many PRs were made by dependabot?' using 'gpt-3.5-turbo' model
2024-07-19 16:39:35,485 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:39:35,749 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:39:35,749 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:39:35,749 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:39:35,751 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:39:36,830 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:39:36,834 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {login: 'dependabot'})-[:author]->(:Commit)-[:fixes]->(i:Issue)
RETURN COUNT(DISTINCT i) as numberOfPRs;
2024-07-19 16:39:36,834 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User {login: 'dependabot'})-[:author]->(:Commit)-[:fixes]->(i:Issue)
RETURN COUNT(DISTINCT i) as numberOfPRs;
2024-07-19 16:39:37,513 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:39:37,516 - scripts.generate_response - INFO - Response generated successfully for 'how many PRs were made by dependabot?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many PRs were made by dependabot?', 'response': 'Dependabot did not make any PRs.', 'context': "Query: MATCH (u:User {login: 'dependabot'})-[:author]->(:Commit)-[:fixes]->(i:Issue)\nRETURN COUNT(DISTINCT i) as numberOfPRs;\\Results: [{'numberOfPRs': 0}]"}
2024-07-19 16:39:37,517 - wsgi - INFO - {'result': 'Dependabot did not make any PRs.', 'context': "Query: MATCH (u:User {login: 'dependabot'})-[:author]->(:Commit)-[:fixes]->(i:Issue)\nRETURN COUNT(DISTINCT i) as numberOfPRs;\\Results: [{'numberOfPRs': 0}]"}
2024-07-19 16:39:47,651 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:39:47,651 - wsgi - INFO - Generating response for 'did it make any.commits?' using 'gpt-3.5-turbo' model
2024-07-19 16:39:47,651 - scripts.generate_response - INFO - Generating response for 'did it make any.commits?' using 'gpt-3.5-turbo' model
2024-07-19 16:39:48,548 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:39:48,704 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:39:48,705 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:39:48,705 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:39:48,706 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:39:49,360 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:39:49,362 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
RETURN u, c;
2024-07-19 16:39:49,362 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
RETURN u, c;
2024-07-19 16:39:50,822 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:39:50,826 - scripts.generate_response - INFO - Response generated successfully for 'did it make any.commits?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'did it make any.commits?', 'response': 'Yes, it made commits.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)\nRETURN u, c;\\Results: [{\'u\': {\'name\': \'Snoppy\', \'user_login\': \'xiaoxianBoy\', \'id\': \'xiaoxianBoy\', \'type\': \'User\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-06-14T12:52:12Z\', \'id\': \'73486cb5f5862a443b42c2aff68b82320218cbcd\', \'type\': \'Commit\', \'message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}}, {\'u\': {\'name\': \'Artfaith\', \'user_login\': \'artshade\', \'id\': \'artshade\', \'type\': \'User\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-05-21T07:51:55Z\', \'id\': \'e428d891456eeb6d34cfac070c423694dcda8806\', \'type\': \'Commit\', \'message\': \'"chore: browser compatibility table link (#13187)\\n\\nUpdated Browser Compatibility reference. The previous currently returns HTTP 404."\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 6, \'deletions\': 9, \'committedDate\': \'2023-12-31T13:23:55Z\', \'id\': \'bed04a77e575d6c4c1d903f60087dca874f7213e\', \'type\': \'Commit\', \'message\': \'"chore: update issue form [ci skip]"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 8, \'deletions\': 4, \'committedDate\': \'2023-12-31T09:32:08Z\', \'id\': \'0191d50c31404afb730cd2a60f4500c20771f32f\', \'type\': \'Commit\', \'message\': \'"chore: eol readme (#13142)"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2023-12-24T15:13:43Z\', \'id\': \'cdcc4f0c667ca4166f87034c6105514ba7b004cc\', \'type\': \'Commit\', \'message\': \'"chore: release name for 2.7.16 [ci skip]"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 13, \'deletions\': 4, \'committedDate\': \'2023-12-24T15:02:07Z\', \'id\': \'13f4e7dc03e2caed900ac70ff8b8fe58dda45663\', \'type\': \'Commit\', \'message\': \'"release: v2.7.16"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 3, \'deletions\': 0, \'committedDate\': \'2023-12-24T14:40:05Z\', \'id\': \'56ce7f8c573116ed6683149206cf35c987249d42\', \'type\': \'Commit\', \'message\': \'"fix(lifecycle): esnure component effect scopes are disconnected\\n\\nclose #13134"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 14, \'deletions\': 4, \'committedDate\': \'2023-12-14T01:28:08Z\', \'id\': \'305e4ae9dce0a05a422b675ff555f17878e86063\', \'type\': \'Commit\', \'message\': \'"release: v2.7.16-beta.2"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 26, \'deletions\': 26, \'committedDate\': \'2023-12-14T01:21:26Z\', \'id\': \'3e1037e4a0317fe78ae022e789afbbc9453b15eb\', \'type\': \'Commit\', \'message\': \'"chore: bump vitest to 1.0.4"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 5, \'deletions\': 6, \'committedDate\': \'2023-12-14T01:21:11Z\', \'id\': \'db9c566032da0ec5cd758a3e8525e9733874c1e5\', \'type\': \'Commit\', \'message\': \'"fix: account for nested render calls\\n\\nclose #13131"\'}}]'}
2024-07-19 16:39:50,827 - wsgi - INFO - {'result': 'Yes, it made commits.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)\nRETURN u, c;\\Results: [{\'u\': {\'name\': \'Snoppy\', \'user_login\': \'xiaoxianBoy\', \'id\': \'xiaoxianBoy\', \'type\': \'User\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-06-14T12:52:12Z\', \'id\': \'73486cb5f5862a443b42c2aff68b82320218cbcd\', \'type\': \'Commit\', \'message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}}, {\'u\': {\'name\': \'Artfaith\', \'user_login\': \'artshade\', \'id\': \'artshade\', \'type\': \'User\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-05-21T07:51:55Z\', \'id\': \'e428d891456eeb6d34cfac070c423694dcda8806\', \'type\': \'Commit\', \'message\': \'"chore: browser compatibility table link (#13187)\\n\\nUpdated Browser Compatibility reference. The previous currently returns HTTP 404."\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 6, \'deletions\': 9, \'committedDate\': \'2023-12-31T13:23:55Z\', \'id\': \'bed04a77e575d6c4c1d903f60087dca874f7213e\', \'type\': \'Commit\', \'message\': \'"chore: update issue form [ci skip]"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 8, \'deletions\': 4, \'committedDate\': \'2023-12-31T09:32:08Z\', \'id\': \'0191d50c31404afb730cd2a60f4500c20771f32f\', \'type\': \'Commit\', \'message\': \'"chore: eol readme (#13142)"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2023-12-24T15:13:43Z\', \'id\': \'cdcc4f0c667ca4166f87034c6105514ba7b004cc\', \'type\': \'Commit\', \'message\': \'"chore: release name for 2.7.16 [ci skip]"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 13, \'deletions\': 4, \'committedDate\': \'2023-12-24T15:02:07Z\', \'id\': \'13f4e7dc03e2caed900ac70ff8b8fe58dda45663\', \'type\': \'Commit\', \'message\': \'"release: v2.7.16"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 3, \'deletions\': 0, \'committedDate\': \'2023-12-24T14:40:05Z\', \'id\': \'56ce7f8c573116ed6683149206cf35c987249d42\', \'type\': \'Commit\', \'message\': \'"fix(lifecycle): esnure component effect scopes are disconnected\\n\\nclose #13134"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 14, \'deletions\': 4, \'committedDate\': \'2023-12-14T01:28:08Z\', \'id\': \'305e4ae9dce0a05a422b675ff555f17878e86063\', \'type\': \'Commit\', \'message\': \'"release: v2.7.16-beta.2"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 26, \'deletions\': 26, \'committedDate\': \'2023-12-14T01:21:26Z\', \'id\': \'3e1037e4a0317fe78ae022e789afbbc9453b15eb\', \'type\': \'Commit\', \'message\': \'"chore: bump vitest to 1.0.4"\'}}, {\'u\': {\'name\': \'Evan You\', \'user_login\': \'yyx990803\', \'id\': \'yyx990803\', \'type\': \'User\', \'login\': \'yyx990803\', \'email\': \'\'}, \'c\': {\'additions\': 5, \'deletions\': 6, \'committedDate\': \'2023-12-14T01:21:11Z\', \'id\': \'db9c566032da0ec5cd758a3e8525e9733874c1e5\', \'type\': \'Commit\', \'message\': \'"fix: account for nested render calls\\n\\nclose #13131"\'}}]'}
2024-07-19 16:39:59,189 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:39:59,190 - wsgi - INFO - Generating response for 'what were the commits it made?' using 'gpt-3.5-turbo' model
2024-07-19 16:39:59,190 - scripts.generate_response - INFO - Generating response for 'what were the commits it made?' using 'gpt-3.5-turbo' model
2024-07-19 16:39:59,993 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:40:00,289 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:40:00,289 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:40:00,289 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:40:00,291 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:40:01,375 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:40:01,378 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User {name: "it"})-[:author]->(c:Commit)
RETURN c;
2024-07-19 16:40:01,379 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User {name: "it"})-[:author]->(c:Commit)
RETURN c;
2024-07-19 16:40:01,939 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:40:01,952 - scripts.generate_response - INFO - Response generated successfully for 'what were the commits it made?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what were the commits it made?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User {name: "it"})-[:author]->(c:Commit)\nRETURN c;\\Results: []'}
2024-07-19 16:40:01,953 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User {name: "it"})-[:author]->(c:Commit)\nRETURN c;\\Results: []'}
2024-07-19 16:40:31,877 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:40:31,878 - wsgi - INFO - Generating response for 'are you able to provide the SHA of the latest commit?' using 'gpt-3.5-turbo' model
2024-07-19 16:40:31,878 - scripts.generate_response - INFO - Generating response for 'are you able to provide the SHA of the latest commit?' using 'gpt-3.5-turbo' model
2024-07-19 16:40:32,702 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:40:32,881 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:40:32,881 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:40:32,881 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:40:32,883 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:40:33,797 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:40:33,802 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
WHERE c.committedDate <= datetime({datetime: '2024-07-19T16:40:32Z'})
RETURN c.id as SHA
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-19 16:40:33,803 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
WHERE c.committedDate <= datetime({datetime: '2024-07-19T16:40:32Z'})
RETURN c.id as SHA
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-19 16:40:33,956 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T16:40:32Z")}
2024-07-19 16:40:33,956 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:40:34,831 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:40:34,930 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T16:40:33Z")} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 420, in query
    json_data = [r.data() for r in data]
                ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 374, in __iter__
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.ClientError: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T16:40:32Z")}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 420, in query
    json_data = [r.data() for r in data]
                ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 374, in __iter__
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.ClientError: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T16:40:33Z")}
2024-07-19 16:40:35,711 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:40:35,714 - scripts.generate_response - INFO - Response generated successfully for 'are you able to provide the SHA of the latest commit?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'are you able to provide the SHA of the latest commit?', 'response': "I'm sorry, but I don't have the information to provide the SHA of the latest commit. Can I help with anything else?", 'context': "Query: MATCH (c:Commit)\nWHERE c.committedDate <= datetime({datetime: '2024-07-19T16:40:32Z'})\nRETURN c.id as SHA\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: []"}
2024-07-19 16:40:35,715 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to provide the SHA of the latest commit. Can I help with anything else?", 'context': "Query: MATCH (c:Commit)\nWHERE c.committedDate <= datetime({datetime: '2024-07-19T16:40:32Z'})\nRETURN c.id as SHA\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: []"}
2024-07-19 16:40:48,325 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:40:48,325 - wsgi - INFO - Generating response for 'are you able to provide the diff of the latest commit?' using 'gpt-3.5-turbo' model
2024-07-19 16:40:48,325 - scripts.generate_response - INFO - Generating response for 'are you able to provide the diff of the latest commit?' using 'gpt-3.5-turbo' model
2024-07-19 16:40:49,154 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:40:49,328 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:40:49,328 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:40:49,328 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:40:49,330 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:40:50,906 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:40:50,909 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)
WHERE c.committedDate = '2024-07-19T16:40:49+00:00Z'
MATCH (c)-[:changed]->(f:File)
RETURN f.path, f.additions, f.deletions, f.change_type, c.message
2024-07-19 16:40:50,910 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)
WHERE c.committedDate = '2024-07-19T16:40:49+00:00Z'
MATCH (c)-[:changed]->(f:File)
RETURN f.path, f.additions, f.deletions, f.change_type, c.message
2024-07-19 16:40:51,677 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:40:51,680 - scripts.generate_response - INFO - Response generated successfully for 'are you able to provide the diff of the latest commit?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'are you able to provide the diff of the latest commit?', 'response': "I'm sorry, but I don't have the information to provide the diff of the latest commit. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWHERE c.committedDate = '2024-07-19T16:40:49+00:00Z'\nMATCH (c)-[:changed]->(f:File)\nRETURN f.path, f.additions, f.deletions, f.change_type, c.message\\Results: []"}
2024-07-19 16:40:51,681 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to provide the diff of the latest commit. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)\nWHERE c.committedDate = '2024-07-19T16:40:49+00:00Z'\nMATCH (c)-[:changed]->(f:File)\nRETURN f.path, f.additions, f.deletions, f.change_type, c.message\\Results: []"}
2024-07-19 16:40:58,495 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 16:40:58,495 - wsgi - INFO - Generating response for 'Ughhhhh
' using 'gpt-3.5-turbo' model
2024-07-19 16:40:58,495 - scripts.generate_response - INFO - Generating response for 'Ughhhhh
' using 'gpt-3.5-turbo' model
2024-07-19 16:40:59,302 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 16:40:59,479 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 16:40:59,480 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 16:40:59,480 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 16:40:59,481 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 16:41:00,175 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:41:00,179 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is I'm sorry, I'm not sure what you're asking. Could you please clarify or provide more information so I can assist you better?
2024-07-19 16:41:00,179 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is I'm sorry, I'm not sure what you're asking. Could you please clarify or provide more information so I can assist you better?
2024-07-19 16:41:00,263 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I'm not sure what you're asking. Could you please clarify or provide more information so I can assist you better?"
 ^}
2024-07-19 16:41:00,263 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 16:41:01,287 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:41:01,403 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 2, column: 9, offset: 66} for query: "MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nWHERE c.abbreviatedOid = '0e6edd9'\nRETURN u, c, f"
2024-07-19 16:41:02,201 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 16:41:02,205 - scripts.generate_response - INFO - Response generated successfully for 'Ughhhhh
' using 'gpt-3.5-turbo' model. 
Response: {'query': 'Ughhhhh\n', 'response': "I'm sorry, but I don't have an answer to that question. Can I help with anything else?", 'context': "Query: I'm sorry, I'm not sure what you're asking. Could you please clarify or provide more information so I can assist you better?\\Results: []"}
2024-07-19 16:41:02,206 - wsgi - INFO - {'result': "I'm sorry, but I don't have an answer to that question. Can I help with anything else?", 'context': "Query: I'm sorry, I'm not sure what you're asking. Could you please clarify or provide more information so I can assist you better?\\Results: []"}
2024-07-19 19:56:49,656 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:56:49,656 - wsgi - INFO - Generating response for 'who committed this commit? "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model
2024-07-19 19:56:49,656 - scripts.generate_response - INFO - Generating response for 'who committed this commit? "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model
2024-07-19 19:56:50,741 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:56:50,934 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:56:50,935 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:56:50,935 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:56:50,937 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:56:51,949 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:56:51,952 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN u;
2024-07-19 19:56:51,952 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})
RETURN u;
2024-07-19 19:56:52,891 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:56:52,895 - scripts.generate_response - INFO - Response generated successfully for 'who committed this commit? "73486cb5f5862a443b42c2aff68b82320218cbcd"' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who committed this commit? "73486cb5f5862a443b42c2aff68b82320218cbcd"', 'response': 'The user who committed this commit "73486cb5f5862a443b42c2aff68b82320218cbcd" is Snoppy with user login xiaoxianBoy.', 'context': 'Query: MATCH (u:User)-[:author]->(:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN u;\\Results: [{\'u\': {\'name\': \'Snoppy\', \'user_login\': \'xiaoxianBoy\', \'id\': \'xiaoxianBoy\', \'type\': \'User\', \'email\': \'\'}}]'}
2024-07-19 19:56:52,896 - wsgi - INFO - {'result': 'The user who committed this commit "73486cb5f5862a443b42c2aff68b82320218cbcd" is Snoppy with user login xiaoxianBoy.', 'context': 'Query: MATCH (u:User)-[:author]->(:Commit {id: "73486cb5f5862a443b42c2aff68b82320218cbcd"})\nRETURN u;\\Results: [{\'u\': {\'name\': \'Snoppy\', \'user_login\': \'xiaoxianBoy\', \'id\': \'xiaoxianBoy\', \'type\': \'User\', \'email\': \'\'}}]'}
2024-07-19 19:57:21,802 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:57:21,803 - wsgi - INFO - Generating response for 'give me information about this issue: "12924"' using 'gpt-3.5-turbo' model
2024-07-19 19:57:21,803 - scripts.generate_response - INFO - Generating response for 'give me information about this issue: "12924"' using 'gpt-3.5-turbo' model
2024-07-19 19:57:22,726 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:57:22,911 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:57:22,912 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:57:22,912 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:57:22,913 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:57:23,638 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:57:23,640 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue {number: 12924})-[:impacted]->(n:Node)
RETURN i, n
2024-07-19 19:57:23,640 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue {number: 12924})-[:impacted]->(n:Node)
RETURN i, n
2024-07-19 19:57:24,322 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:57:24,333 - scripts.generate_response - INFO - Response generated successfully for 'give me information about this issue: "12924"' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me information about this issue: "12924"', 'response': "I'm sorry, but I don't have any information about the issue with number 12924. Can I help with anything else?", 'context': 'Query: MATCH (i:Issue {number: 12924})-[:impacted]->(n:Node)\nRETURN i, n\\Results: []'}
2024-07-19 19:57:24,334 - wsgi - INFO - {'result': "I'm sorry, but I don't have any information about the issue with number 12924. Can I help with anything else?", 'context': 'Query: MATCH (i:Issue {number: 12924})-[:impacted]->(n:Node)\nRETURN i, n\\Results: []'}
2024-07-19 19:57:43,004 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:57:43,004 - wsgi - INFO - Generating response for 'give me a list of the last 5 pull requests' using 'gpt-3.5-turbo' model
2024-07-19 19:57:43,004 - scripts.generate_response - INFO - Generating response for 'give me a list of the last 5 pull requests' using 'gpt-3.5-turbo' model
2024-07-19 19:57:43,862 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:57:44,107 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:57:44,107 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:57:44,107 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:57:44,109 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:57:45,066 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:57:45,068 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue {type: "pull_request"})
WHERE datetime(i.closed_at) <= datetime('2024-07-19T19:57:44Z')
RETURN i
ORDER BY datetime(i.closed_at) DESC
LIMIT 5
2024-07-19 19:57:45,069 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue {type: "pull_request"})
WHERE datetime(i.closed_at) <= datetime('2024-07-19T19:57:44Z')
RETURN i
ORDER BY datetime(i.closed_at) DESC
LIMIT 5
2024-07-19 19:57:46,171 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:57:46,174 - scripts.generate_response - INFO - Response generated successfully for 'give me a list of the last 5 pull requests' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me a list of the last 5 pull requests', 'response': "I'm sorry, but I don't have that information. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue {type: "pull_request"})\nWHERE datetime(i.closed_at) <= datetime(\'2024-07-19T19:57:44Z\')\nRETURN i\nORDER BY datetime(i.closed_at) DESC\nLIMIT 5\\Results: []'}
2024-07-19 19:57:46,175 - wsgi - INFO - {'result': "I'm sorry, but I don't have that information. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(:Commit)-[:fixes]->(i:Issue {type: "pull_request"})\nWHERE datetime(i.closed_at) <= datetime(\'2024-07-19T19:57:44Z\')\nRETURN i\nORDER BY datetime(i.closed_at) DESC\nLIMIT 5\\Results: []'}
2024-07-19 19:57:55,933 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:57:55,934 - wsgi - INFO - Generating response for 'give me a list of the last 5 commits' using 'gpt-3.5-turbo' model
2024-07-19 19:57:55,934 - scripts.generate_response - INFO - Generating response for 'give me a list of the last 5 commits' using 'gpt-3.5-turbo' model
2024-07-19 19:57:56,721 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:57:56,893 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:57:56,893 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:57:56,893 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:57:56,895 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:57:57,647 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:57:57,651 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
RETURN c
ORDER BY c.committedDate DESC
LIMIT 5
2024-07-19 19:57:57,651 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
RETURN c
ORDER BY c.committedDate DESC
LIMIT 5
2024-07-19 19:58:03,988 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:58:03,988 - wsgi - INFO - Generating response for 'what is the most common commit message?

' using 'gpt-3.5-turbo' model
2024-07-19 19:58:03,988 - scripts.generate_response - INFO - Generating response for 'what is the most common commit message?

' using 'gpt-3.5-turbo' model
2024-07-19 19:58:04,831 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:58:05,040 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:58:05,041 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:58:05,041 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:58:05,042 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:58:05,590 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:58:05,594 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)
RETURN c.message
ORDER BY COUNT(c.message) DESC
LIMIT 1;
2024-07-19 19:58:05,594 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)
RETURN c.message
ORDER BY COUNT(c.message) DESC
LIMIT 1;
2024-07-19 19:58:05,672 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Cannot use aggregation in ORDER BY if there are no aggregate expressions in the preceding RETURN (line 2, column 1 (offset: 17))
"RETURN c.message"
 ^}
2024-07-19 19:58:05,672 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 19:58:06,071 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:58:06,243 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:58:06,996 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:58:06,999 - scripts.generate_response - INFO - Response generated successfully for 'what is the most common commit message?

' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the most common commit message?\n\n', 'response': 'The most common commit message is "chore: update sponsors", which appears 24 times in the repository.', 'context': 'Query: MATCH (c:Commit)\nRETURN c.message\nORDER BY COUNT(c.message) DESC\nLIMIT 1;\\Results: [{\'c.message\': \'"chore: update sponsors"\', \'message_count\': 24}]'}
2024-07-19 19:58:06,999 - wsgi - INFO - {'result': 'The most common commit message is "chore: update sponsors", which appears 24 times in the repository.', 'context': 'Query: MATCH (c:Commit)\nRETURN c.message\nORDER BY COUNT(c.message) DESC\nLIMIT 1;\\Results: [{\'c.message\': \'"chore: update sponsors"\', \'message_count\': 24}]'}
2024-07-19 19:58:12,652 - scripts.generate_response - INFO - Response generated successfully for 'give me a list of the last 5 commits' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me a list of the last 5 commits', 'response': 'The last 5 commits are as follows:\n1. Commit ID: 73486cb5f5862a443b42c2aff68b82320218cbcd, committed on 2024-06-14T12:52:12Z, with 1 addition and 1 deletion. Message: "chore: fix link broken (#13192)"\n2. Commit ID: e428d891456eeb6d34cfac070c423694dcda8806, committed on 2024-05-21T07:51:55Z, with 1 addition and 1 deletion. Message: "chore: browser compatibility table link (#13187)"\n3. Commit ID: bed04a77e575d6c4c1d903f60087dca874f7213e, committed on 2023-12-31T13:23:55Z, with 6 additions and 9 deletions. Message: "chore: update issue form [ci skip]"\n4. Commit ID: 0191d50c31404afb730cd2a60f4500c20771f32f, committed on 2023-12-31T09:32:08Z, with 8 additions and 4 deletions. Message: "chore: eol readme (#13142)"\n5. Commit ID: cdcc4f0c667ca4166f87034c6105514ba7b004cc, committed on 2023-12-24T15:13:43Z, with 1 addition and 1 deletion. Message: "chore: release name for 2.7.16 [ci skip]"', 'context': 'Query: MATCH (c:Commit)\nRETURN c\nORDER BY c.committedDate DESC\nLIMIT 5\\Results: [{\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-06-14T12:52:12Z\', \'id\': \'73486cb5f5862a443b42c2aff68b82320218cbcd\', \'type\': \'Commit\', \'message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-05-21T07:51:55Z\', \'id\': \'e428d891456eeb6d34cfac070c423694dcda8806\', \'type\': \'Commit\', \'message\': \'"chore: browser compatibility table link (#13187)\\n\\nUpdated Browser Compatibility reference. The previous currently returns HTTP 404."\'}}, {\'c\': {\'additions\': 6, \'deletions\': 9, \'committedDate\': \'2023-12-31T13:23:55Z\', \'id\': \'bed04a77e575d6c4c1d903f60087dca874f7213e\', \'type\': \'Commit\', \'message\': \'"chore: update issue form [ci skip]"\'}}, {\'c\': {\'additions\': 8, \'deletions\': 4, \'committedDate\': \'2023-12-31T09:32:08Z\', \'id\': \'0191d50c31404afb730cd2a60f4500c20771f32f\', \'type\': \'Commit\', \'message\': \'"chore: eol readme (#13142)"\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2023-12-24T15:13:43Z\', \'id\': \'cdcc4f0c667ca4166f87034c6105514ba7b004cc\', \'type\': \'Commit\', \'message\': \'"chore: release name for 2.7.16 [ci skip]"\'}}]'}
2024-07-19 19:58:12,653 - wsgi - INFO - {'result': 'The last 5 commits are as follows:\n1. Commit ID: 73486cb5f5862a443b42c2aff68b82320218cbcd, committed on 2024-06-14T12:52:12Z, with 1 addition and 1 deletion. Message: "chore: fix link broken (#13192)"\n2. Commit ID: e428d891456eeb6d34cfac070c423694dcda8806, committed on 2024-05-21T07:51:55Z, with 1 addition and 1 deletion. Message: "chore: browser compatibility table link (#13187)"\n3. Commit ID: bed04a77e575d6c4c1d903f60087dca874f7213e, committed on 2023-12-31T13:23:55Z, with 6 additions and 9 deletions. Message: "chore: update issue form [ci skip]"\n4. Commit ID: 0191d50c31404afb730cd2a60f4500c20771f32f, committed on 2023-12-31T09:32:08Z, with 8 additions and 4 deletions. Message: "chore: eol readme (#13142)"\n5. Commit ID: cdcc4f0c667ca4166f87034c6105514ba7b004cc, committed on 2023-12-24T15:13:43Z, with 1 addition and 1 deletion. Message: "chore: release name for 2.7.16 [ci skip]"', 'context': 'Query: MATCH (c:Commit)\nRETURN c\nORDER BY c.committedDate DESC\nLIMIT 5\\Results: [{\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-06-14T12:52:12Z\', \'id\': \'73486cb5f5862a443b42c2aff68b82320218cbcd\', \'type\': \'Commit\', \'message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-05-21T07:51:55Z\', \'id\': \'e428d891456eeb6d34cfac070c423694dcda8806\', \'type\': \'Commit\', \'message\': \'"chore: browser compatibility table link (#13187)\\n\\nUpdated Browser Compatibility reference. The previous currently returns HTTP 404."\'}}, {\'c\': {\'additions\': 6, \'deletions\': 9, \'committedDate\': \'2023-12-31T13:23:55Z\', \'id\': \'bed04a77e575d6c4c1d903f60087dca874f7213e\', \'type\': \'Commit\', \'message\': \'"chore: update issue form [ci skip]"\'}}, {\'c\': {\'additions\': 8, \'deletions\': 4, \'committedDate\': \'2023-12-31T09:32:08Z\', \'id\': \'0191d50c31404afb730cd2a60f4500c20771f32f\', \'type\': \'Commit\', \'message\': \'"chore: eol readme (#13142)"\'}}, {\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2023-12-24T15:13:43Z\', \'id\': \'cdcc4f0c667ca4166f87034c6105514ba7b004cc\', \'type\': \'Commit\', \'message\': \'"chore: release name for 2.7.16 [ci skip]"\'}}]'}
2024-07-19 19:58:55,130 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:58:55,131 - wsgi - INFO - Generating response for 'what is the latest release name?' using 'gpt-3.5-turbo' model
2024-07-19 19:58:55,131 - scripts.generate_response - INFO - Generating response for 'what is the latest release name?' using 'gpt-3.5-turbo' model
2024-07-19 19:58:55,953 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:58:56,046 - neo4j.io - ERROR - Failed to write data to connection ResolvedIPv4Address(('34.69.128.95', 7687)) (ResolvedIPv4Address(('34.69.128.95', 7687)))
2024-07-19 19:58:56,046 - neo4j.io - ERROR - Failed to write data to connection IPv4Address(('0e99116c.databases.neo4j.io', 7687)) (ResolvedIPv4Address(('34.69.128.95', 7687)))
2024-07-19 19:58:56,145 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:58:56,145 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:58:56,145 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:58:56,147 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:58:57,148 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:58:57,152 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue)-[:introduced]->(n:Node)
WHERE i.created_at <= '2024-07-19T19:58:56Z'
RETURN i.title
ORDER BY i.created_at DESC
LIMIT 1
2024-07-19 19:58:57,152 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue)<-[:introduced]-(n:Node)
WHERE i.created_at <= '2024-07-19T19:58:56Z'
RETURN i.title
ORDER BY i.created_at DESC
LIMIT 1
2024-07-19 19:58:58,160 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:58:58,164 - scripts.generate_response - INFO - Response generated successfully for 'what is the latest release name?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the latest release name?', 'response': 'The latest release name is "Upgrade to 1.0.27 breaks v-ref on a component with v-if".', 'context': 'Query: MATCH (i:Issue)<-[:introduced]-(n:Node)\nWHERE i.created_at <= \'2024-07-19T19:58:56Z\'\nRETURN i.title\nORDER BY i.created_at DESC\nLIMIT 1\\Results: [{\'i.title\': \'"Upgrade to 1.0.27 breaks v-ref on a component with v-if"\'}]'}
2024-07-19 19:58:58,166 - wsgi - INFO - {'result': 'The latest release name is "Upgrade to 1.0.27 breaks v-ref on a component with v-if".', 'context': 'Query: MATCH (i:Issue)<-[:introduced]-(n:Node)\nWHERE i.created_at <= \'2024-07-19T19:58:56Z\'\nRETURN i.title\nORDER BY i.created_at DESC\nLIMIT 1\\Results: [{\'i.title\': \'"Upgrade to 1.0.27 breaks v-ref on a component with v-if"\'}]'}
2024-07-19 19:59:10,706 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:59:10,706 - wsgi - INFO - Generating response for 'what is the latest release number/' using 'gpt-3.5-turbo' model
2024-07-19 19:59:10,706 - scripts.generate_response - INFO - Generating response for 'what is the latest release number/' using 'gpt-3.5-turbo' model
2024-07-19 19:59:11,524 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:59:11,695 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:59:11,695 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:59:11,696 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:59:11,697 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:59:12,545 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:12,550 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue)
WHERE i.type = 'release'
RETURN i.number
ORDER BY i.created_at DESC
LIMIT 1;
2024-07-19 19:59:12,551 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue)
WHERE i.type = 'release'
RETURN i.number
ORDER BY i.created_at DESC
LIMIT 1;
2024-07-19 19:59:13,354 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:13,357 - scripts.generate_response - INFO - Response generated successfully for 'what is the latest release number/' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the latest release number/', 'response': "I don't know, can I help with anything else?", 'context': "Query: MATCH (i:Issue)\nWHERE i.type = 'release'\nRETURN i.number\nORDER BY i.created_at DESC\nLIMIT 1;\\Results: []"}
2024-07-19 19:59:13,358 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': "Query: MATCH (i:Issue)\nWHERE i.type = 'release'\nRETURN i.number\nORDER BY i.created_at DESC\nLIMIT 1;\\Results: []"}
2024-07-19 19:59:19,466 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:59:19,466 - wsgi - INFO - Generating response for 'what is the latest release number?' using 'gpt-3.5-turbo' model
2024-07-19 19:59:19,466 - scripts.generate_response - INFO - Generating response for 'what is the latest release number?' using 'gpt-3.5-turbo' model
2024-07-19 19:59:20,286 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:59:20,496 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:59:20,496 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:59:20,496 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:59:20,498 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:59:21,076 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:21,079 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue)
WHERE i.type = 'release'
RETURN i.number
ORDER BY i.created_at DESC
LIMIT 1;
2024-07-19 19:59:21,079 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue)
WHERE i.type = 'release'
RETURN i.number
ORDER BY i.created_at DESC
LIMIT 1;
2024-07-19 19:59:21,866 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:21,870 - scripts.generate_response - INFO - Response generated successfully for 'what is the latest release number?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the latest release number?', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': "Query: MATCH (i:Issue)\nWHERE i.type = 'release'\nRETURN i.number\nORDER BY i.created_at DESC\nLIMIT 1;\\Results: []"}
2024-07-19 19:59:21,871 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': "Query: MATCH (i:Issue)\nWHERE i.type = 'release'\nRETURN i.number\nORDER BY i.created_at DESC\nLIMIT 1;\\Results: []"}
2024-07-19 19:59:26,043 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:59:26,044 - wsgi - INFO - Generating response for 'are you able to provide the SHA of the latest commit?

' using 'gpt-4o' model
2024-07-19 19:59:26,044 - scripts.generate_response - INFO - Generating response for 'are you able to provide the SHA of the latest commit?

' using 'gpt-4o' model
2024-07-19 19:59:26,875 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:59:27,052 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:59:27,052 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 19:59:27,052 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:59:27,053 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:59:28,671 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:28,673 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)
RETURN c.id
ORDER BY c.committedDate DESC
LIMIT 1

2024-07-19 19:59:28,673 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)
RETURN c.id
ORDER BY c.committedDate DESC
LIMIT 1

2024-07-19 19:59:29,704 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:29,706 - scripts.generate_response - INFO - Response generated successfully for 'are you able to provide the SHA of the latest commit?

' using 'gpt-4o' model. 
Response: {'query': 'are you able to provide the SHA of the latest commit?\n\n', 'response': 'The SHA of the latest commit is `73486cb5f5862a443b42c2aff68b82320218cbcd`.', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN c.id\nORDER BY c.committedDate DESC\nLIMIT 1\n\\Results: [{'c.id': '73486cb5f5862a443b42c2aff68b82320218cbcd'}]"}
2024-07-19 19:59:29,707 - wsgi - INFO - {'result': 'The SHA of the latest commit is `73486cb5f5862a443b42c2aff68b82320218cbcd`.', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN c.id\nORDER BY c.committedDate DESC\nLIMIT 1\n\\Results: [{'c.id': '73486cb5f5862a443b42c2aff68b82320218cbcd'}]"}
2024-07-19 19:59:36,609 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:59:36,609 - wsgi - INFO - Generating response for 'give me a list of the last 5 releases' using 'gpt-3.5-turbo' model
2024-07-19 19:59:36,609 - scripts.generate_response - INFO - Generating response for 'give me a list of the last 5 releases' using 'gpt-3.5-turbo' model
2024-07-19 19:59:37,386 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:59:37,563 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:59:37,563 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 19:59:37,563 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:59:37,565 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:59:38,547 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:38,549 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)-[:introduced]->(i:Issue)
WHERE i.type = 'release'
RETURN i.title, i.created_at
ORDER BY i.created_at DESC
LIMIT 5
2024-07-19 19:59:38,550 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)-[:introduced]->(i:Issue)
WHERE i.type = 'release'
RETURN i.title, i.created_at
ORDER BY i.created_at DESC
LIMIT 5
2024-07-19 19:59:39,442 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:39,445 - scripts.generate_response - INFO - Response generated successfully for 'give me a list of the last 5 releases' using 'gpt-3.5-turbo' model. 
Response: {'query': 'give me a list of the last 5 releases', 'response': "I'm sorry, but I don't have the information to give you a list of the last 5 releases. Can I help with anything else?", 'context': "Query: MATCH (c:Commit)-[:introduced]->(i:Issue)\nWHERE i.type = 'release'\nRETURN i.title, i.created_at\nORDER BY i.created_at DESC\nLIMIT 5\\Results: []"}
2024-07-19 19:59:39,446 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to give you a list of the last 5 releases. Can I help with anything else?", 'context': "Query: MATCH (c:Commit)-[:introduced]->(i:Issue)\nWHERE i.type = 'release'\nRETURN i.title, i.created_at\nORDER BY i.created_at DESC\nLIMIT 5\\Results: []"}
2024-07-19 19:59:44,479 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:59:44,479 - wsgi - INFO - Generating response for 'what is the most common commit message?

' using 'gpt-4o' model
2024-07-19 19:59:44,480 - scripts.generate_response - INFO - Generating response for 'what is the most common commit message?

' using 'gpt-4o' model
2024-07-19 19:59:45,328 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:59:45,508 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:59:45,508 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 19:59:45,508 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:59:45,510 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:59:46,908 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:46,911 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)
RETURN c.message AS commitMessage, COUNT(c) AS frequency
ORDER BY frequency DESC
LIMIT 1

2024-07-19 19:59:46,911 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)
RETURN c.message AS commitMessage, COUNT(c) AS frequency
ORDER BY frequency DESC
LIMIT 1

2024-07-19 19:59:47,853 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:47,857 - scripts.generate_response - INFO - Response generated successfully for 'what is the most common commit message?

' using 'gpt-4o' model. 
Response: {'query': 'what is the most common commit message?\n\n', 'response': 'The most common commit message is "chore: update sponsors", which appears 24 times.', 'context': 'Query: cypher\nMATCH (c:Commit)\nRETURN c.message AS commitMessage, COUNT(c) AS frequency\nORDER BY frequency DESC\nLIMIT 1\n\\Results: [{\'commitMessage\': \'"chore: update sponsors"\', \'frequency\': 24}]'}
2024-07-19 19:59:47,858 - wsgi - INFO - {'result': 'The most common commit message is "chore: update sponsors", which appears 24 times.', 'context': 'Query: cypher\nMATCH (c:Commit)\nRETURN c.message AS commitMessage, COUNT(c) AS frequency\nORDER BY frequency DESC\nLIMIT 1\n\\Results: [{\'commitMessage\': \'"chore: update sponsors"\', \'frequency\': 24}]'}
2024-07-19 19:59:57,482 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 19:59:57,482 - wsgi - INFO - Generating response for 'are you able to provide the diff of the latest commit?

' using 'gpt-4o' model
2024-07-19 19:59:57,482 - scripts.generate_response - INFO - Generating response for 'are you able to provide the diff of the latest commit?

' using 'gpt-4o' model
2024-07-19 19:59:58,289 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 19:59:58,460 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 19:59:58,461 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 19:59:58,461 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 19:59:58,462 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 19:59:59,355 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 19:59:59,357 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)-[:changed]->(f:File)
RETURN c.id AS commit_id, f.path AS file_path, f.additions, f.deletions
ORDER BY c.committedDate DESC
LIMIT 1

2024-07-19 19:59:59,357 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)-[:changed]->(f:File)
RETURN c.id AS commit_id, f.path AS file_path, f.additions, f.deletions
ORDER BY c.committedDate DESC
LIMIT 1

2024-07-19 20:00:00,677 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:00:00,680 - scripts.generate_response - INFO - Response generated successfully for 'are you able to provide the diff of the latest commit?

' using 'gpt-4o' model. 
Response: {'query': 'are you able to provide the diff of the latest commit?\n\n', 'response': 'The latest commit with ID `73486cb5f5862a443b42c2aff68b82320218cbcd` involved changes to the file `README.md`. This commit included 10 additions and 0 deletions.', 'context': "Query: cypher\nMATCH (c:Commit)-[:changed]->(f:File)\nRETURN c.id AS commit_id, f.path AS file_path, f.additions, f.deletions\nORDER BY c.committedDate DESC\nLIMIT 1\n\\Results: [{'commit_id': '73486cb5f5862a443b42c2aff68b82320218cbcd', 'file_path': 'README.md', 'f.additions': 10, 'f.deletions': 0}]"}
2024-07-19 20:00:00,681 - wsgi - INFO - {'result': 'The latest commit with ID `73486cb5f5862a443b42c2aff68b82320218cbcd` involved changes to the file `README.md`. This commit included 10 additions and 0 deletions.', 'context': "Query: cypher\nMATCH (c:Commit)-[:changed]->(f:File)\nRETURN c.id AS commit_id, f.path AS file_path, f.additions, f.deletions\nORDER BY c.committedDate DESC\nLIMIT 1\n\\Results: [{'commit_id': '73486cb5f5862a443b42c2aff68b82320218cbcd', 'file_path': 'README.md', 'f.additions': 10, 'f.deletions': 0}]"}
2024-07-19 20:00:27,509 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:00:27,509 - wsgi - INFO - Generating response for 'how many PRs were made by dependabot?

' using 'gpt-4o' model
2024-07-19 20:00:27,509 - scripts.generate_response - INFO - Generating response for 'how many PRs were made by dependabot?

' using 'gpt-4o' model
2024-07-19 20:00:28,353 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:00:28,517 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:00:28,517 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:00:28,517 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:00:28,518 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:00:30,357 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:00:30,361 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (u:User {name: "dependabot"})-[:participates_in]->(i:Issue)
RETURN count(i) AS numberOfPRs

2024-07-19 20:00:30,361 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (u:User {name: "dependabot"})-[:participates_in]->(i:Issue)
RETURN count(i) AS numberOfPRs

2024-07-19 20:00:31,156 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:00:31,159 - scripts.generate_response - INFO - Response generated successfully for 'how many PRs were made by dependabot?

' using 'gpt-4o' model. 
Response: {'query': 'how many PRs were made by dependabot?\n\n', 'response': 'Dependabot has made 0 pull requests. Can I help with anything else?', 'context': 'Query: cypher\nMATCH (u:User {name: "dependabot"})-[:participates_in]->(i:Issue)\nRETURN count(i) AS numberOfPRs\n\\Results: [{\'numberOfPRs\': 0}]'}
2024-07-19 20:00:31,160 - wsgi - INFO - {'result': 'Dependabot has made 0 pull requests. Can I help with anything else?', 'context': 'Query: cypher\nMATCH (u:User {name: "dependabot"})-[:participates_in]->(i:Issue)\nRETURN count(i) AS numberOfPRs\n\\Results: [{\'numberOfPRs\': 0}]'}
2024-07-19 20:00:40,052 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:00:40,053 - wsgi - INFO - Generating response for 'how many contributors are there overall?

' using 'gpt-4o' model
2024-07-19 20:00:40,053 - scripts.generate_response - INFO - Generating response for 'how many contributors are there overall?

' using 'gpt-4o' model
2024-07-19 20:00:40,862 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:00:41,033 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:00:41,033 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:00:41,033 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:00:41,035 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:00:42,043 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:00:42,075 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (u:User)-[:author]->(:Commit)
RETURN count(DISTINCT u.id) AS total_contributors

2024-07-19 20:00:42,075 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (u:User)-[:author]->(:Commit)
RETURN count(DISTINCT u.id) AS total_contributors

2024-07-19 20:00:42,896 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:00:42,900 - scripts.generate_response - INFO - Response generated successfully for 'how many contributors are there overall?

' using 'gpt-4o' model. 
Response: {'query': 'how many contributors are there overall?\n\n', 'response': 'There are a total of 359 contributors overall.', 'context': "Query: cypher\nMATCH (u:User)-[:author]->(:Commit)\nRETURN count(DISTINCT u.id) AS total_contributors\n\\Results: [{'total_contributors': 359}]"}
2024-07-19 20:00:42,901 - wsgi - INFO - {'result': 'There are a total of 359 contributors overall.', 'context': "Query: cypher\nMATCH (u:User)-[:author]->(:Commit)\nRETURN count(DISTINCT u.id) AS total_contributors\n\\Results: [{'total_contributors': 359}]"}
2024-07-19 20:01:01,296 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:01:01,296 - wsgi - INFO - Generating response for 'what is the dominant programming language in this repo?

' using 'gpt-4o' model
2024-07-19 20:01:01,296 - scripts.generate_response - INFO - Generating response for 'what is the dominant programming language in this repo?

' using 'gpt-4o' model
2024-07-19 20:01:02,134 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:01:02,335 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:01:02,335 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:01:02,335 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:01:02,337 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:01:03,416 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:03,419 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)-[:changed]->(f:File)
RETURN f.change_type AS language, COUNT(*) AS count
ORDER BY count DESC
LIMIT 1

2024-07-19 20:01:03,419 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)-[:changed]->(f:File)
RETURN f.change_type AS language, COUNT(*) AS count
ORDER BY count DESC
LIMIT 1

2024-07-19 20:01:05,126 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:05,129 - scripts.generate_response - INFO - Response generated successfully for 'what is the dominant programming language in this repo?

' using 'gpt-4o' model. 
Response: {'query': 'what is the dominant programming language in this repo?\n\n', 'response': "The dominant programming language in this repository is 'added', with a count of 9593 changes. Can I help with anything else?", 'context': "Query: cypher\nMATCH (c:Commit)-[:changed]->(f:File)\nRETURN f.change_type AS language, COUNT(*) AS count\nORDER BY count DESC\nLIMIT 1\n\\Results: [{'language': 'added', 'count': 9593}]"}
2024-07-19 20:01:05,130 - wsgi - INFO - {'result': "The dominant programming language in this repository is 'added', with a count of 9593 changes. Can I help with anything else?", 'context': "Query: cypher\nMATCH (c:Commit)-[:changed]->(f:File)\nRETURN f.change_type AS language, COUNT(*) AS count\nORDER BY count DESC\nLIMIT 1\n\\Results: [{'language': 'added', 'count': 9593}]"}
2024-07-19 20:01:28,443 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:01:28,443 - wsgi - INFO - Generating response for 'is this a private repo?

' using 'gpt-4o' model
2024-07-19 20:01:28,443 - scripts.generate_response - INFO - Generating response for 'is this a private repo?

' using 'gpt-4o' model
2024-07-19 20:01:29,248 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:01:29,412 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:01:29,413 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:01:29,413 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:01:29,414 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:01:30,450 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:30,453 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (u:User)-[:participates_in]->(i:Issue)
RETURN DISTINCT i.url

2024-07-19 20:01:30,454 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (u:User)-[:participates_in]->(i:Issue)
RETURN DISTINCT i.url

2024-07-19 20:01:32,323 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:32,327 - scripts.generate_response - INFO - Response generated successfully for 'is this a private repo?

' using 'gpt-4o' model. 
Response: {'query': 'is this a private repo?\n\n', 'response': 'Based on the provided context, I cannot determine whether this is a private repository. Can I help with anything else?', 'context': "Query: cypher\nMATCH (u:User)-[:participates_in]->(i:Issue)\nRETURN DISTINCT i.url\n\\Results: [{'i.url': 'https://github.com/vuejs/vue/issues/1'}, {'i.url': 'https://github.com/vuejs/vue/issues/2'}, {'i.url': 'https://github.com/vuejs/vue/issues/3'}, {'i.url': 'https://github.com/vuejs/vue/issues/4'}, {'i.url': 'https://github.com/vuejs/vue/issues/5'}, {'i.url': 'https://github.com/vuejs/vue/issues/6'}, {'i.url': 'https://github.com/vuejs/vue/issues/7'}, {'i.url': 'https://github.com/vuejs/vue/issues/8'}, {'i.url': 'https://github.com/vuejs/vue/issues/9'}, {'i.url': 'https://github.com/vuejs/vue/issues/10'}]"}
2024-07-19 20:01:32,328 - wsgi - INFO - {'result': 'Based on the provided context, I cannot determine whether this is a private repository. Can I help with anything else?', 'context': "Query: cypher\nMATCH (u:User)-[:participates_in]->(i:Issue)\nRETURN DISTINCT i.url\n\\Results: [{'i.url': 'https://github.com/vuejs/vue/issues/1'}, {'i.url': 'https://github.com/vuejs/vue/issues/2'}, {'i.url': 'https://github.com/vuejs/vue/issues/3'}, {'i.url': 'https://github.com/vuejs/vue/issues/4'}, {'i.url': 'https://github.com/vuejs/vue/issues/5'}, {'i.url': 'https://github.com/vuejs/vue/issues/6'}, {'i.url': 'https://github.com/vuejs/vue/issues/7'}, {'i.url': 'https://github.com/vuejs/vue/issues/8'}, {'i.url': 'https://github.com/vuejs/vue/issues/9'}, {'i.url': 'https://github.com/vuejs/vue/issues/10'}]"}
2024-07-19 20:01:51,065 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:01:51,065 - wsgi - INFO - Generating response for 'how many projects are in this repo?

' using 'gpt-4o' model
2024-07-19 20:01:51,065 - scripts.generate_response - INFO - Generating response for 'how many projects are in this repo?

' using 'gpt-4o' model
2024-07-19 20:01:51,888 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:01:52,110 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:01:52,110 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:01:52,110 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:01:52,112 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:01:52,716 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:52,720 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (n:Node)
RETURN count(n) AS project_count

2024-07-19 20:01:52,720 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (n:Node)
RETURN count(n) AS project_count

2024-07-19 20:01:53,841 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:53,845 - scripts.generate_response - INFO - Response generated successfully for 'how many projects are in this repo?

' using 'gpt-4o' model. 
Response: {'query': 'how many projects are in this repo?\n\n', 'response': 'There are 640 projects in this repository.', 'context': "Query: cypher\nMATCH (n:Node)\nRETURN count(n) AS project_count\n\\Results: [{'project_count': 640}]"}
2024-07-19 20:01:53,846 - wsgi - INFO - {'result': 'There are 640 projects in this repository.', 'context': "Query: cypher\nMATCH (n:Node)\nRETURN count(n) AS project_count\n\\Results: [{'project_count': 640}]"}
2024-07-19 20:01:55,329 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:01:55,329 - wsgi - INFO - Generating response for 'what kind of information can you give me?' using 'gpt-3.5-turbo' model
2024-07-19 20:01:55,329 - scripts.generate_response - INFO - Generating response for 'what kind of information can you give me?' using 'gpt-3.5-turbo' model
2024-07-19 20:01:56,114 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:01:56,274 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:01:56,274 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 20:01:56,274 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:01:56,276 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:01:57,237 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:57,239 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:participates_in]->(i:Issue)-[:impacted]->(n:Node)
WHERE i.created_at <= datetime({datetime: '2024-07-19T20:01:56Z'})
RETURN u, i, n
2024-07-19 20:01:57,239 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:participates_in]->(i:Issue)-[:impacted]->(n:Node)
WHERE i.created_at <= datetime({datetime: '2024-07-19T20:01:56Z'})
RETURN u, i, n
2024-07-19 20:01:57,374 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T20:01:56Z")}
2024-07-19 20:01:57,374 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 20:01:58,483 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:58,570 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T20:01:57Z")} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 420, in query
    json_data = [r.data() for r in data]
                ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 374, in __iter__
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.ClientError: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T20:01:56Z")}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 420, in query
    json_data = [r.data() for r in data]
                ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 374, in __iter__
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.ClientError: {code: Neo.ClientError.Statement.ArgumentError} {message: Cannot construct date time from: String("2024-07-19T20:01:57Z")}
2024-07-19 20:01:59,247 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:01:59,250 - scripts.generate_response - INFO - Response generated successfully for 'what kind of information can you give me?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what kind of information can you give me?', 'response': "I don't have any information at the moment. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:participates_in]->(i:Issue)-[:impacted]->(n:Node)\nWHERE i.created_at <= datetime({datetime: '2024-07-19T20:01:56Z'})\nRETURN u, i, n\\Results: []"}
2024-07-19 20:01:59,251 - wsgi - INFO - {'result': "I don't have any information at the moment. Can I help with anything else?", 'context': "Query: MATCH (u:User)-[:participates_in]->(i:Issue)-[:impacted]->(n:Node)\nWHERE i.created_at <= datetime({datetime: '2024-07-19T20:01:56Z'})\nRETURN u, i, n\\Results: []"}
2024-07-19 20:02:07,651 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:02:07,651 - wsgi - INFO - Generating response for 'based on the timeline of the commits can you predict when the next commit would be?

' using 'gpt-4o' model
2024-07-19 20:02:07,651 - scripts.generate_response - INFO - Generating response for 'based on the timeline of the commits can you predict when the next commit would be?

' using 'gpt-4o' model
2024-07-19 20:02:08,468 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:02:08,647 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:02:08,647 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:02:08,647 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:02:08,648 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:02:09,314 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:02:09,317 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate DESC
LIMIT 1

2024-07-19 20:02:09,317 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate DESC
LIMIT 1

2024-07-19 20:02:10,606 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:02:10,610 - scripts.generate_response - INFO - Response generated successfully for 'based on the timeline of the commits can you predict when the next commit would be?

' using 'gpt-4o' model. 
Response: {'query': 'based on the timeline of the commits can you predict when the next commit would be?\n\n', 'response': 'Based on the timeline provided, the most recent commit was made on June 14, 2024. Unfortunately, without additional data on the frequency or pattern of past commits, it is not possible to accurately predict when the next commit will be made. Is there anything else I can help you with?', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate DESC\nLIMIT 1\n\\Results: [{'c.committedDate': '2024-06-14T12:52:12Z'}]"}
2024-07-19 20:02:10,610 - wsgi - INFO - {'result': 'Based on the timeline provided, the most recent commit was made on June 14, 2024. Unfortunately, without additional data on the frequency or pattern of past commits, it is not possible to accurately predict when the next commit will be made. Is there anything else I can help you with?', 'context': "Query: cypher\nMATCH (c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate DESC\nLIMIT 1\n\\Results: [{'c.committedDate': '2024-06-14T12:52:12Z'}]"}
2024-07-19 20:02:17,793 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:02:17,793 - wsgi - INFO - Generating response for 'what kind of questions can I ask you?' using 'gpt-3.5-turbo' model
2024-07-19 20:02:17,793 - scripts.generate_response - INFO - Generating response for 'what kind of questions can I ask you?' using 'gpt-3.5-turbo' model
2024-07-19 20:02:18,604 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:02:18,787 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:02:18,788 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 20:02:18,788 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:02:18,789 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:02:19,301 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:02:19,304 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema.
2024-07-19 20:02:19,304 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema.
2024-07-19 20:02:19,391 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema."
 ^}
2024-07-19 20:02:19,391 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 20:02:20,310 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:02:20,387 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema and instructions."
 ^} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema and instructions."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Invalid input 'I': expected 'FOREACH', 'ALTER', 'CALL', 'USING PERIODIC COMMIT', 'CREATE', 'LOAD CSV', 'START DATABASE', 'STOP DATABASE', 'DEALLOCATE', 'DELETE', 'DENY', 'DETACH', 'DROP', 'DRYRUN', 'FINISH', 'GRANT', 'INSERT', 'MATCH', 'MERGE', 'NODETACH', 'OPTIONAL', 'REALLOCATE', 'REMOVE', 'RENAME', 'RETURN', 'REVOKE', 'ENABLE SERVER', 'SET', 'SHOW', 'TERMINATE', 'UNWIND', 'USE' or 'WITH' (line 1, column 1 (offset: 0))
"I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema and instructions."
 ^}
2024-07-19 20:02:20,948 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:02:20,953 - scripts.generate_response - INFO - Response generated successfully for 'what kind of questions can I ask you?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what kind of questions can I ask you?', 'response': "I'm sorry, I don't know the answer to that question. Can I help with anything else?", 'context': "Query: I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema.\\Results: []"}
2024-07-19 20:02:20,954 - wsgi - INFO - {'result': "I'm sorry, I don't know the answer to that question. Can I help with anything else?", 'context': "Query: I'm sorry, I can only generate Cypher statements for querying a graph database based on the provided schema.\\Results: []"}
2024-07-19 20:02:56,961 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:02:56,962 - wsgi - INFO - Generating response for 'what is the most interesting thing about this commit? "51fef2ca69459c1175e105991f60511f1996e0c8"' using 'gpt-3.5-turbo' model
2024-07-19 20:02:56,962 - scripts.generate_response - INFO - Generating response for 'what is the most interesting thing about this commit? "51fef2ca69459c1175e105991f60511f1996e0c8"' using 'gpt-3.5-turbo' model
2024-07-19 20:02:57,814 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:02:57,999 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:02:57,999 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 20:02:57,999 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:02:58,001 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:02:58,613 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:02:58,616 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit {abbreviatedOid: "51fef2c"})
RETURN c.message
2024-07-19 20:02:58,616 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit {abbreviatedOid: "51fef2c"})
RETURN c.message
2024-07-19 20:02:58,712 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 38, offset: 37} for query: 'MATCH (u:User)-[:author]->(c:Commit {abbreviatedOid: "51fef2c"})\nRETURN c.message'
2024-07-19 20:02:59,479 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:02:59,484 - scripts.generate_response - INFO - Response generated successfully for 'what is the most interesting thing about this commit? "51fef2ca69459c1175e105991f60511f1996e0c8"' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the most interesting thing about this commit? "51fef2ca69459c1175e105991f60511f1996e0c8"', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit {abbreviatedOid: "51fef2c"})\nRETURN c.message\\Results: []'}
2024-07-19 20:02:59,485 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit {abbreviatedOid: "51fef2c"})\nRETURN c.message\\Results: []'}
2024-07-19 20:03:22,546 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:03:22,546 - wsgi - INFO - Generating response for 'what happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model
2024-07-19 20:03:22,546 - scripts.generate_response - INFO - Generating response for 'what happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model
2024-07-19 20:03:23,385 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:03:23,579 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:03:23,579 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 20:03:23,579 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:03:23,581 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:03:24,635 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:03:24,638 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {id: "51fef2ca69459c1175e105991f60511f1996e0c8"})-[:changed]->(f:File)
RETURN c, f
2024-07-19 20:03:24,639 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {id: "51fef2ca69459c1175e105991f60511f1996e0c8"})-[:changed]->(f:File)
RETURN c, f
2024-07-19 20:03:26,357 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:03:26,361 - scripts.generate_response - INFO - Response generated successfully for 'what happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?', 'response': 'The commit "51fef2ca69459c1175e105991f60511f1996e0c8" added a semicolon after the `defineProps` statement in the file "compileScript.ts" and "compileScript.spec.ts.snap" in the "packages/compiler-sfc" directory. It had 10 additions and 10 deletions in both files. The commit was made on October 23, 2023, with the message \'"fix(compiler-sfc): add semicolon after `defineProps` statement (#12879)"\'.', 'context': 'Query: MATCH (c:Commit {id: "51fef2ca69459c1175e105991f60511f1996e0c8"})-[:changed]->(f:File)\nRETURN c, f\\Results: [{\'c\': {\'additions\': 10, \'deletions\': 10, \'committedDate\': \'2023-10-23T07:09:23Z\', \'id\': \'51fef2ca69459c1175e105991f60511f1996e0c8\', \'type\': \'Commit\', \'message\': \'"fix(compiler-sfc): add semicolon after `defineProps` statement (#12879)"\'}, \'f\': {\'path\': \'packages/compiler-sfc/test/__snapshots__/compileScript.spec.ts.snap\', \'filename\': \'compileScript.spec.ts.snap\', \'additions\': 1393, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'compileScript.spec.ts.snap\', \'type\': \'File\'}}, {\'c\': {\'additions\': 10, \'deletions\': 10, \'committedDate\': \'2023-10-23T07:09:23Z\', \'id\': \'51fef2ca69459c1175e105991f60511f1996e0c8\', \'type\': \'Commit\', \'message\': \'"fix(compiler-sfc): add semicolon after `defineProps` statement (#12879)"\'}, \'f\': {\'path\': \'packages/compiler-sfc/src/compileScript.ts\', \'filename\': \'compileScript.ts\', \'additions\': 1949, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'compileScript.ts\', \'type\': \'File\'}}]'}
2024-07-19 20:03:26,362 - wsgi - INFO - {'result': 'The commit "51fef2ca69459c1175e105991f60511f1996e0c8" added a semicolon after the `defineProps` statement in the file "compileScript.ts" and "compileScript.spec.ts.snap" in the "packages/compiler-sfc" directory. It had 10 additions and 10 deletions in both files. The commit was made on October 23, 2023, with the message \'"fix(compiler-sfc): add semicolon after `defineProps` statement (#12879)"\'.', 'context': 'Query: MATCH (c:Commit {id: "51fef2ca69459c1175e105991f60511f1996e0c8"})-[:changed]->(f:File)\nRETURN c, f\\Results: [{\'c\': {\'additions\': 10, \'deletions\': 10, \'committedDate\': \'2023-10-23T07:09:23Z\', \'id\': \'51fef2ca69459c1175e105991f60511f1996e0c8\', \'type\': \'Commit\', \'message\': \'"fix(compiler-sfc): add semicolon after `defineProps` statement (#12879)"\'}, \'f\': {\'path\': \'packages/compiler-sfc/test/__snapshots__/compileScript.spec.ts.snap\', \'filename\': \'compileScript.spec.ts.snap\', \'additions\': 1393, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'compileScript.spec.ts.snap\', \'type\': \'File\'}}, {\'c\': {\'additions\': 10, \'deletions\': 10, \'committedDate\': \'2023-10-23T07:09:23Z\', \'id\': \'51fef2ca69459c1175e105991f60511f1996e0c8\', \'type\': \'Commit\', \'message\': \'"fix(compiler-sfc): add semicolon after `defineProps` statement (#12879)"\'}, \'f\': {\'path\': \'packages/compiler-sfc/src/compileScript.ts\', \'filename\': \'compileScript.ts\', \'additions\': 1949, \'deletions\': 0, \'change_type\': \'added\', \'id\': \'compileScript.ts\', \'type\': \'File\'}}]'}
2024-07-19 20:08:07,693 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:08:07,693 - wsgi - INFO - Generating response for 'how many commits?' using 'gpt-3.5-turbo' model
2024-07-19 20:08:07,693 - scripts.generate_response - INFO - Generating response for 'how many commits?' using 'gpt-3.5-turbo' model
2024-07-19 20:08:08,543 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:08:08,728 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:08:08,728 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 20:08:08,728 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:08:08,731 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:08:09,391 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:08:09,394 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:User)-[:author]->(:Commit)
RETURN COUNT(*) as totalCommits;
2024-07-19 20:08:09,394 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:User)-[:author]->(:Commit)
RETURN COUNT(*) as totalCommits;
2024-07-19 20:08:10,188 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:08:10,192 - scripts.generate_response - INFO - Response generated successfully for 'how many commits?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many commits?', 'response': 'There have been a total of 3592 commits made by authors in the software repository.', 'context': "Query: MATCH (:User)-[:author]->(:Commit)\nRETURN COUNT(*) as totalCommits;\\Results: [{'totalCommits': 3592}]"}
2024-07-19 20:08:10,192 - wsgi - INFO - {'result': 'There have been a total of 3592 commits made by authors in the software repository.', 'context': "Query: MATCH (:User)-[:author]->(:Commit)\nRETURN COUNT(*) as totalCommits;\\Results: [{'totalCommits': 3592}]"}
2024-07-19 20:09:08,599 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:09:08,599 - wsgi - INFO - Generating response for 'how many additions and deletions happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model
2024-07-19 20:09:08,599 - scripts.generate_response - INFO - Generating response for 'how many additions and deletions happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model
2024-07-19 20:09:09,433 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:09:09,610 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:09:09,610 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 20:09:09,610 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:09:09,611 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:09:10,620 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:09:10,623 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {abbreviatedOid: "51fef2c"})
MATCH (c)-[:changed]->(f:File)
RETURN f.additions, f.deletions
2024-07-19 20:09:10,623 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {abbreviatedOid: "51fef2c"})
MATCH (c)-[:changed]->(f:File)
RETURN f.additions, f.deletions
2024-07-19 20:09:10,719 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 18, offset: 17} for query: 'MATCH (c:Commit {abbreviatedOid: "51fef2c"})\nMATCH (c)-[:changed]->(f:File)\nRETURN f.additions, f.deletions'
2024-07-19 20:09:11,651 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:09:11,654 - scripts.generate_response - INFO - Response generated successfully for 'how many additions and deletions happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many additions and deletions happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "51fef2c"})\nMATCH (c)-[:changed]->(f:File)\nRETURN f.additions, f.deletions\\Results: []'}
2024-07-19 20:09:11,655 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "51fef2c"})\nMATCH (c)-[:changed]->(f:File)\nRETURN f.additions, f.deletions\\Results: []'}
2024-07-19 20:09:25,745 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:09:25,745 - wsgi - INFO - Generating response for 'how many additions happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model
2024-07-19 20:09:25,745 - scripts.generate_response - INFO - Generating response for 'how many additions happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model
2024-07-19 20:09:26,542 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:09:26,716 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:09:26,717 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-19 20:09:26,717 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:09:26,718 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:09:27,504 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:09:27,507 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit {abbreviatedOid: "51fef2c"})
MATCH (c)-[:changed]->(f:File)
RETURN SUM(f.additions) as totalAdditions;
2024-07-19 20:09:27,507 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit {abbreviatedOid: "51fef2c"})
MATCH (c)-[:changed]->(f:File)
RETURN SUM(f.additions) as totalAdditions;
2024-07-19 20:09:27,594 - neo4j.notifications - WARNING - Received notification from DBMS server: {severity: WARNING} {code: Neo.ClientNotification.Statement.UnknownPropertyKeyWarning} {category: UNRECOGNIZED} {title: The provided property key is not in the database} {description: One of the property names in your query is not available in the database, make sure you didn't misspell it or that the label is available when you run this statement in your application (the missing property name is: abbreviatedOid)} {position: line: 1, column: 18, offset: 17} for query: 'MATCH (c:Commit {abbreviatedOid: "51fef2c"})\nMATCH (c)-[:changed]->(f:File)\nRETURN SUM(f.additions) as totalAdditions;'
2024-07-19 20:09:28,537 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:09:28,541 - scripts.generate_response - INFO - Response generated successfully for 'how many additions happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many additions happened in this commit "51fef2ca69459c1175e105991f60511f1996e0c8"?', 'response': 'There were 0 additions that happened in the commit "51fef2ca69459c1175e105991f60511f1996e0c8".', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "51fef2c"})\nMATCH (c)-[:changed]->(f:File)\nRETURN SUM(f.additions) as totalAdditions;\\Results: [{\'totalAdditions\': 0}]'}
2024-07-19 20:09:28,542 - wsgi - INFO - {'result': 'There were 0 additions that happened in the commit "51fef2ca69459c1175e105991f60511f1996e0c8".', 'context': 'Query: MATCH (c:Commit {abbreviatedOid: "51fef2c"})\nMATCH (c)-[:changed]->(f:File)\nRETURN SUM(f.additions) as totalAdditions;\\Results: [{\'totalAdditions\': 0}]'}
2024-07-19 20:16:27,770 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:16:27,772 - wsgi - INFO - Generating response for 'give me a list of commits made by user xiaoxianBoy' using 'gpt-4o' model
2024-07-19 20:16:27,772 - scripts.generate_response - INFO - Generating response for 'give me a list of commits made by user xiaoxianBoy' using 'gpt-4o' model
2024-07-19 20:16:28,627 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:16:28,797 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:16:28,797 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:16:28,797 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:16:28,799 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:16:29,930 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:16:29,932 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (u:User {user_login: "xiaoxianBoy"})-[:author]->(c:Commit)
RETURN c

2024-07-19 20:16:29,932 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is cypher
MATCH (u:User {user_login: "xiaoxianBoy"})-[:author]->(c:Commit)
RETURN c

2024-07-19 20:16:33,730 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:16:33,733 - scripts.generate_response - INFO - Response generated successfully for 'give me a list of commits made by user xiaoxianBoy' using 'gpt-4o' model. 
Response: {'query': 'give me a list of commits made by user xiaoxianBoy', 'response': 'Here is a list of commits made by the user xiaoxianBoy:\n\n1. Commit ID: 73486cb5f5862a443b42c2aff68b82320218cbcd\n   - Message: "chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\n   - Additions: 1\n   - Deletions: 1\n   - Committed Date: 2024-06-14T12:52:12Z', 'context': 'Query: cypher\nMATCH (u:User {user_login: "xiaoxianBoy"})-[:author]->(c:Commit)\nRETURN c\n\\Results: [{\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-06-14T12:52:12Z\', \'id\': \'73486cb5f5862a443b42c2aff68b82320218cbcd\', \'type\': \'Commit\', \'message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}}]'}
2024-07-19 20:16:33,733 - wsgi - INFO - {'result': 'Here is a list of commits made by the user xiaoxianBoy:\n\n1. Commit ID: 73486cb5f5862a443b42c2aff68b82320218cbcd\n   - Message: "chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\n   - Additions: 1\n   - Deletions: 1\n   - Committed Date: 2024-06-14T12:52:12Z', 'context': 'Query: cypher\nMATCH (u:User {user_login: "xiaoxianBoy"})-[:author]->(c:Commit)\nRETURN c\n\\Results: [{\'c\': {\'additions\': 1, \'deletions\': 1, \'committedDate\': \'2024-06-14T12:52:12Z\', \'id\': \'73486cb5f5862a443b42c2aff68b82320218cbcd\', \'type\': \'Commit\', \'message\': \'"chore: fix link broken (#13192)\\n\\n* chore: fix link broken\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\n\\r\\n* Update packages/template-compiler/README.md [skip ci]\\r\\n\\r\\n---------\\r\\n\\r\\nSigned-off-by: snoppy <michaleli@foxmail.com>\\r\\nCo-authored-by: Eduardo San Martin Morote <posva@users.noreply.github.com>"\'}}]'}
2024-07-19 20:21:51,982 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:21:51,983 - wsgi - INFO - Generating response for 'be very polite, how are you?' using 'gpt-4o' model
2024-07-19 20:21:51,983 - scripts.generate_response - INFO - Generating response for 'be very polite, how are you?' using 'gpt-4o' model
2024-07-19 20:21:52,809 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:21:53,026 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:21:53,026 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:21:53,027 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:21:53,030 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:21:53,733 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:21:53,736 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is 
// This is a Cypher statement generation task. Please provide a valid query.

2024-07-19 20:21:53,736 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is 
// This is a Cypher statement generation task. Please provide a valid query.

2024-07-19 20:21:53,811 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Unexpected end of input: expected CYPHER, EXPLAIN, PROFILE or Query (line 0, column 1 (offset: 1))
"// This is a Cypher statement generation task. Please provide a valid query."
 ^}
2024-07-19 20:21:53,811 - scripts.core.graph_cypher_chain_patch - INFO - Regenerating query...
2024-07-19 20:21:54,769 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:21:54,845 - scripts.core.graph_cypher_chain_patch - ERROR - Error executing Cypher query: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Unexpected end of input: expected CYPHER, EXPLAIN, PROFILE or Query (line 1, column 7 (offset: 6))
"cypher"
       ^} even after re-generating it.
Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Unexpected end of input: expected CYPHER, EXPLAIN, PROFILE or Query (line 0, column 1 (offset: 1))
"// This is a Cypher statement generation task. Please provide a valid query."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 124, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Unexpected end of input: expected CYPHER, EXPLAIN, PROFILE or Query (line 0, column 1 (offset: 1))
"// This is a Cypher statement generation task. Please provide a valid query."
 ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 419, in query
    data = session.run(Query(text=query, timeout=self.timeout), params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/session.py", line 314, in run
    self._auto_result._run(
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 219, in _run
    self._attach()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/work/result.py", line 405, in _attach
    self._connection.fetch_message()
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 178, in inner
    func(*args, **kwargs)
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt.py", line 850, in fetch_message
    res = self._process_message(tag, fields)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_bolt5.py", line 369, in _process_message
    response.on_failure(summary_metadata or {})
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/neo4j/_sync/io/_common.py", line 245, in on_failure
    raise Neo4jError.hydrate(**metadata)
neo4j.exceptions.CypherSyntaxError: {code: Neo.ClientError.Statement.SyntaxError} {message: Unexpected end of input: expected CYPHER, EXPLAIN, PROFILE or Query (line 1, column 7 (offset: 6))
"cypher"
       ^}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/root/repochat.tool/scripts/core/graph_cypher_chain_patch.py", line 142, in _call
    context = self.graph.query(generated_cypher)[: self.top_k]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/root/repochat.tool/venv/lib/python3.12/site-packages/langchain_community/graphs/neo4j_graph.py", line 425, in query
    raise ValueError(f"Generated Cypher Statement is not valid\n{e}")
ValueError: Generated Cypher Statement is not valid
{code: Neo.ClientError.Statement.SyntaxError} {message: Unexpected end of input: expected CYPHER, EXPLAIN, PROFILE or Query (line 1, column 7 (offset: 6))
"cypher"
       ^}
2024-07-19 20:21:55,679 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:21:55,681 - scripts.generate_response - INFO - Response generated successfully for 'be very polite, how are you?' using 'gpt-4o' model. 
Response: {'query': 'be very polite, how are you?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: \n// This is a Cypher statement generation task. Please provide a valid query.\n\\Results: []'}
2024-07-19 20:21:55,681 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: \n// This is a Cypher statement generation task. Please provide a valid query.\n\\Results: []'}
2024-07-19 20:22:32,592 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-19 20:22:32,593 - wsgi - INFO - Generating response for 'how many repos depend on this repo?' using 'gpt-4o' model
2024-07-19 20:22:32,593 - scripts.generate_response - INFO - Generating response for 'how many repos depend on this repo?' using 'gpt-4o' model
2024-07-19 20:22:33,423 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-19 20:22:33,906 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-19 20:22:33,906 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-4o, learning type: zero-shot
2024-07-19 20:22:33,906 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-19 20:22:33,910 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-19 20:22:47,873 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:22:47,888 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is cypher
MATCH (n:Node)-[:impacted]->(f:File)
RETURN COUNT(DISTINCT n) AS repo_count

2024-07-19 20:22:47,888 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is 
2024-07-19 20:22:47,888 - scripts.core.graph_cypher_chain_patch - INFO - No cypher statement generated
2024-07-19 20:22:48,547 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-19 20:22:48,551 - scripts.generate_response - INFO - Response generated successfully for 'how many repos depend on this repo?' using 'gpt-4o' model. 
Response: {'query': 'how many repos depend on this repo?', 'response': "I don't know, can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-19 20:22:48,551 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: \\Results: []'}
2024-07-20 10:37:15,971 - neo4j.io - ERROR - Failed to write data to connection ResolvedIPv4Address(('34.69.128.95', 7687)) (ResolvedIPv4Address(('34.69.128.95', 7687)))
2024-07-20 10:37:15,974 - neo4j.io - ERROR - Failed to write data to connection IPv4Address(('0e99116c.databases.neo4j.io', 7687)) (ResolvedIPv4Address(('34.69.128.95', 7687)))
2024-07-24 14:29:35,461 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-24 14:29:35,465 - wsgi - INFO - Generating response for 'how many open issues are there?' using 'gpt-3.5-turbo' model
2024-07-24 14:29:35,466 - scripts.generate_response - INFO - Generating response for 'how many open issues are there?' using 'gpt-3.5-turbo' model
2024-07-24 14:29:36,524 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-24 14:29:36,748 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-24 14:29:36,748 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-24 14:29:36,748 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-24 14:29:36,751 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-24 14:29:37,743 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:29:37,763 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue {state: "open"})
RETURN count(i) as openIssues;
2024-07-24 14:29:37,763 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue {state: "open"})
RETURN count(i) as openIssues;
2024-07-24 14:29:38,619 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:29:38,623 - scripts.generate_response - INFO - Response generated successfully for 'how many open issues are there?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many open issues are there?', 'response': 'There are currently 356 open issues in the software repository.', 'context': 'Query: MATCH (i:Issue {state: "open"})\nRETURN count(i) as openIssues;\\Results: [{\'openIssues\': 356}]'}
2024-07-24 14:29:38,624 - wsgi - INFO - {'result': 'There are currently 356 open issues in the software repository.', 'context': 'Query: MATCH (i:Issue {state: "open"})\nRETURN count(i) as openIssues;\\Results: [{\'openIssues\': 356}]'}
2024-07-24 14:31:14,431 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-24 14:31:14,432 - wsgi - INFO - Generating response for 'how many open issues are labeled as "bug"? ' using 'gpt-3.5-turbo' model
2024-07-24 14:31:14,432 - scripts.generate_response - INFO - Generating response for 'how many open issues are labeled as "bug"? ' using 'gpt-3.5-turbo' model
2024-07-24 14:31:15,284 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-24 14:31:15,482 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-24 14:31:15,482 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-24 14:31:15,482 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-24 14:31:15,484 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-24 14:31:16,305 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:31:16,308 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (i:Issue {state: "open", type: "bug"})
RETURN COUNT(i);
2024-07-24 14:31:16,308 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (i:Issue {state: "open", type: "bug"})
RETURN COUNT(i);
2024-07-24 14:31:17,323 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:31:17,326 - scripts.generate_response - INFO - Response generated successfully for 'how many open issues are labeled as "bug"? ' using 'gpt-3.5-turbo' model. 
Response: {'query': 'how many open issues are labeled as "bug"? ', 'response': 'There are 0 open issues labeled as "bug".', 'context': 'Query: MATCH (i:Issue {state: "open", type: "bug"})\nRETURN COUNT(i);\\Results: [{\'COUNT(i)\': 0}]'}
2024-07-24 14:31:17,327 - wsgi - INFO - {'result': 'There are 0 open issues labeled as "bug".', 'context': 'Query: MATCH (i:Issue {state: "open", type: "bug"})\nRETURN COUNT(i);\\Results: [{\'COUNT(i)\': 0}]'}
2024-07-24 14:32:13,241 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-24 14:32:13,245 - wsgi - INFO - Generating response for 'what is the latest commit about on the main branch?' using 'gpt-3.5-turbo' model
2024-07-24 14:32:13,245 - scripts.generate_response - INFO - Generating response for 'what is the latest commit about on the main branch?' using 'gpt-3.5-turbo' model
2024-07-24 14:32:14,183 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-24 14:32:14,978 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-24 14:32:14,978 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-24 14:32:14,978 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-24 14:32:14,991 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-24 14:32:16,249 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:32:16,308 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (c:Commit)-[:parent_of*0..]->(mainCommit:Commit)
WHERE NOT (mainCommit)-[:parent_of]->()
RETURN mainCommit.message
ORDER BY mainCommit.committedDate DESC
LIMIT 1;
2024-07-24 14:32:16,309 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (c:Commit)-[:parent_of*0..]->(mainCommit:Commit)
WHERE NOT (mainCommit)-[:parent_of]->()
RETURN mainCommit.message
ORDER BY mainCommit.committedDate DESC
LIMIT 1;
2024-07-24 14:32:17,402 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:32:17,408 - scripts.generate_response - INFO - Response generated successfully for 'what is the latest commit about on the main branch?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'what is the latest commit about on the main branch?', 'response': 'The latest commit on the main branch is about initializing the repository with the message "init".', 'context': 'Query: MATCH (c:Commit)-[:parent_of*0..]->(mainCommit:Commit)\nWHERE NOT (mainCommit)-[:parent_of]->()\nRETURN mainCommit.message\nORDER BY mainCommit.committedDate DESC\nLIMIT 1;\\Results: [{\'mainCommit.message\': \'"init"\'}]'}
2024-07-24 14:32:17,410 - wsgi - INFO - {'result': 'The latest commit on the main branch is about initializing the repository with the message "init".', 'context': 'Query: MATCH (c:Commit)-[:parent_of*0..]->(mainCommit:Commit)\nWHERE NOT (mainCommit)-[:parent_of]->()\nRETURN mainCommit.message\nORDER BY mainCommit.committedDate DESC\nLIMIT 1;\\Results: [{\'mainCommit.message\': \'"init"\'}]'}
2024-07-24 14:33:11,094 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-24 14:33:11,095 - wsgi - INFO - Generating response for 'who fixed the latest bug? ' using 'gpt-3.5-turbo' model
2024-07-24 14:33:11,095 - scripts.generate_response - INFO - Generating response for 'who fixed the latest bug? ' using 'gpt-3.5-turbo' model
2024-07-24 14:33:11,949 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-24 14:33:12,165 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:File)
(:Issue)-[:impacted]->(:Node)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-24 14:33:12,166 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-24 14:33:12,166 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-24 14:33:12,168 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-24 14:33:13,609 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:33:13,613 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE i.closed_at <= '2024-07-24T14:33:12Z'
RETURN u.name as fixer
ORDER BY i.closed_at DESC
LIMIT 1
2024-07-24 14:33:13,613 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE i.closed_at <= '2024-07-24T14:33:12Z'
RETURN u.name as fixer
ORDER BY i.closed_at DESC
LIMIT 1
2024-07-24 14:33:14,510 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:33:14,513 - scripts.generate_response - INFO - Response generated successfully for 'who fixed the latest bug? ' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who fixed the latest bug? ', 'response': 'The latest bug was fixed by Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE i.closed_at <= '2024-07-24T14:33:12Z'\nRETURN u.name as fixer\nORDER BY i.closed_at DESC\nLIMIT 1\\Results: [{'fixer': 'Evan You'}]"}
2024-07-24 14:33:14,514 - wsgi - INFO - {'result': 'The latest bug was fixed by Evan You.', 'context': "Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE i.closed_at <= '2024-07-24T14:33:12Z'\nRETURN u.name as fixer\nORDER BY i.closed_at DESC\nLIMIT 1\\Results: [{'fixer': 'Evan You'}]"}
2024-07-24 14:34:55,275 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-24 14:34:55,275 - wsgi - INFO - Generating response for 'What is the latest pull request about?' using 'gpt-3.5-turbo' model
2024-07-24 14:34:55,275 - scripts.generate_response - INFO - Generating response for 'What is the latest pull request about?' using 'gpt-3.5-turbo' model
2024-07-24 14:34:56,079 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-24 14:34:56,246 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-24 14:34:56,246 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-24 14:34:56,246 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-24 14:34:56,247 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-24 14:34:57,592 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:34:57,594 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE i.closed_at <= '2024-07-24T14:34:56Z'
RETURN i.title
ORDER BY i.closed_at DESC
LIMIT 1
2024-07-24 14:34:57,595 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)
WHERE i.closed_at <= '2024-07-24T14:34:56Z'
RETURN i.title
ORDER BY i.closed_at DESC
LIMIT 1
2024-07-24 14:34:59,216 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:34:59,219 - scripts.generate_response - INFO - Response generated successfully for 'What is the latest pull request about?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'What is the latest pull request about?', 'response': 'The latest pull request is about "$forceUpdate causes getCurrentScope to get an incorrect value".', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE i.closed_at <= \'2024-07-24T14:34:56Z\'\nRETURN i.title\nORDER BY i.closed_at DESC\nLIMIT 1\\Results: [{\'i.title\': \'"$forceUpdate causes getCurrentScope to get an incorrect value"\'}]'}
2024-07-24 14:34:59,220 - wsgi - INFO - {'result': 'The latest pull request is about "$forceUpdate causes getCurrentScope to get an incorrect value".', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:fixes]->(i:Issue)\nWHERE i.closed_at <= \'2024-07-24T14:34:56Z\'\nRETURN i.title\nORDER BY i.closed_at DESC\nLIMIT 1\\Results: [{\'i.title\': \'"$forceUpdate causes getCurrentScope to get an incorrect value"\'}]'}
2024-07-24 14:36:20,206 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-24 14:36:20,207 - wsgi - INFO - Generating response for 'who last updated the documentation?' using 'gpt-3.5-turbo' model
2024-07-24 14:36:20,207 - scripts.generate_response - INFO - Generating response for 'who last updated the documentation?' using 'gpt-3.5-turbo' model
2024-07-24 14:36:21,019 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-24 14:36:21,319 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-24 14:36:21,319 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-24 14:36:21,319 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-24 14:36:21,323 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-24 14:36:22,304 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:36:22,308 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)
WHERE f.path CONTAINS "documentation"
RETURN u.name
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-24 14:36:22,308 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)
WHERE f.path CONTAINS "documentation"
RETURN u.name
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-24 14:36:23,292 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:36:23,296 - scripts.generate_response - INFO - Response generated successfully for 'who last updated the documentation?' using 'gpt-3.5-turbo' model. 
Response: {'query': 'who last updated the documentation?', 'response': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nWHERE f.path CONTAINS "documentation"\nRETURN u.name\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: []'}
2024-07-24 14:36:23,297 - wsgi - INFO - {'result': "I'm sorry, but I don't have the information to answer that question. Can I help with anything else?", 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File)\nWHERE f.path CONTAINS "documentation"\nRETURN u.name\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: []'}
2024-07-24 14:37:16,778 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-24 14:37:16,778 - wsgi - INFO - Generating response for 'When was the documentation last updated? ' using 'gpt-3.5-turbo' model
2024-07-24 14:37:16,778 - scripts.generate_response - INFO - Generating response for 'When was the documentation last updated? ' using 'gpt-3.5-turbo' model
2024-07-24 14:37:17,595 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-24 14:37:17,755 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-24 14:37:17,755 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-24 14:37:17,755 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-24 14:37:17,756 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-24 14:37:18,827 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:37:18,830 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (:File {path: "/documentation"})-[:changed]->(c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-24 14:37:18,830 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (:File {path: "/documentation"})<-[:changed]-(c:Commit)
RETURN c.committedDate
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-24 14:37:19,840 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:37:19,843 - scripts.generate_response - INFO - Response generated successfully for 'When was the documentation last updated? ' using 'gpt-3.5-turbo' model. 
Response: {'query': 'When was the documentation last updated? ', 'response': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:File {path: "/documentation"})<-[:changed]-(c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: []'}
2024-07-24 14:37:19,844 - wsgi - INFO - {'result': "I don't know, can I help with anything else?", 'context': 'Query: MATCH (:File {path: "/documentation"})<-[:changed]-(c:Commit)\nRETURN c.committedDate\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: []'}
2024-07-24 14:38:15,762 - wsgi - INFO - Received request on '/chat' endpoint from 127.0.0.1
2024-07-24 14:38:15,762 - wsgi - INFO - Generating response for 'Who last updated the readme file? ' using 'gpt-3.5-turbo' model
2024-07-24 14:38:15,762 - scripts.generate_response - INFO - Generating response for 'Who last updated the readme file? ' using 'gpt-3.5-turbo' model
2024-07-24 14:38:16,597 - scripts.kg_chat - INFO - Created KGChat Instance
2024-07-24 14:38:16,779 - scripts.kg_chat - INFO - schema Node properties:
User {id: STRING, type: STRING, name: STRING, user_login: STRING, email: STRING, login: STRING}
Commit {id: STRING, additions: INTEGER, type: STRING, message: STRING, deletions: INTEGER, committedDate: STRING}
File {id: STRING, additions: INTEGER, type: STRING, deletions: INTEGER, path: STRING, filename: STRING, change_type: STRING}
Issue {id: INTEGER, type: STRING, number: INTEGER, closed_at: STRING, created_at: STRING, state: STRING, title: STRING, body: STRING, url: STRING}
Node {id: STRING}
Relationship properties:
changed {change_type: STRING, relation: STRING}
parent_of {relation: STRING}
author {relation: STRING}
fixes {relation: STRING}
participates_in {relation: STRING}
introduced {relation: STRING}
assigned {relation: STRING}
impacted {relation: STRING}
The relationships:
(:User)-[:participates_in]->(:Issue)
(:User)-[:author]->(:Commit)
(:User)-[:assigned]->(:Issue)
(:Commit)-[:changed]->(:File)
(:Commit)-[:parent_of]->(:Commit)
(:Commit)-[:fixes]->(:Issue)
(:Commit)-[:introduced]->(:Issue)
(:Issue)-[:impacted]->(:Node)
(:Issue)-[:impacted]->(:File)
(:Node)-[:fixes]->(:Issue)
(:Node)-[:introduced]->(:Issue)
2024-07-24 14:38:16,779 - scripts.kg_chat - INFO - Created LLM chain, model: gpt-3.5-turbo, learning type: zero-shot
2024-07-24 14:38:16,779 - scripts.kg_chat - INFO - Invoking LLM chain
2024-07-24 14:38:16,781 - scripts.core.graph_cypher_chain_patch - INFO - Generating Cypher statement
2024-07-24 14:38:18,300 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:38:18,303 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement before corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File {filename: "README.md"})
RETURN u.name
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-24 14:38:18,304 - scripts.core.graph_cypher_chain_patch - INFO - Cypher statement after corrector is MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File {filename: "README.md"})
RETURN u.name
ORDER BY c.committedDate DESC
LIMIT 1
2024-07-24 14:38:19,324 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2024-07-24 14:38:19,327 - scripts.generate_response - INFO - Response generated successfully for 'Who last updated the readme file? ' using 'gpt-3.5-turbo' model. 
Response: {'query': 'Who last updated the readme file? ', 'response': 'The last person who updated the readme file is Snoppy.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File {filename: "README.md"})\nRETURN u.name\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: [{\'u.name\': \'Snoppy\'}]'}
2024-07-24 14:38:19,328 - wsgi - INFO - {'result': 'The last person who updated the readme file is Snoppy.', 'context': 'Query: MATCH (u:User)-[:author]->(c:Commit)-[:changed]->(f:File {filename: "README.md"})\nRETURN u.name\nORDER BY c.committedDate DESC\nLIMIT 1\\Results: [{\'u.name\': \'Snoppy\'}]'}
